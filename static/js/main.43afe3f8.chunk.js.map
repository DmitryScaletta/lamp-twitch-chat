{"version":3,"sources":["../../twitch-simple-irc/dist/twitch-simple-irc.cjs.production.min.js","utils/isAuthRedirect.js","utils/constants.js","utils/fetchRequest.js","utils/api.js","reducers/auth/auth.js","reducers/badges/badges.js","reducers/chat/chat.js","reducers/emotes/twitch.js","reducers/emotes/bttv.js","reducers/emotes/ffz.js","reducers/emotes/index.js","utils/normalizeHref.js","utils/formatMessage.js","reducers/chat/selectors.js","reducers/emotes/selectors.js","reducers/badges/selectors.js","utils/getMessageBadges.js","utils/normalizeRecentMessages.js","reducers/messages/messages.js","reducers/options/options.js","reducers/index.js","store/index.js","reducers/auth/selectors.js","reducers/messages/selectors.js","hooks/useFetchChatData.js","hooks/useLocationHash.js","hooks/useCurrentChannel.js","hooks/usePrevious.js","utils/createOwnMessage.js","hooks/useTwitchClient.js","utils/replaceEmojis.js","hooks/useSetState.js","reducers/options/selectors.js","utils/getUserSuggestions.js","utils/getEmoteSuggestions.js","icons/close.svg","components/IconButton.jsx","components/ChatModal.jsx","components/Scrollbar.jsx","components/EmotePicker.jsx","icons/smiley-face.svg","components/ChatInput.jsx","icons/gears.svg","components/Switch.jsx","components/Options.jsx","components/ChatControls.jsx","components/ChatMessage/types.js","components/ChatMessage/Message.jsx","components/ChatMessage/Notice.jsx","components/ChatMessage/UserNotice.jsx","components/ChatMessage/ChatMessage.jsx","components/Messages.jsx","components/Chat.jsx","components/Home.jsx","utils/getAuthUrl.js","components/Auth.jsx","components/AuthCallback.jsx","styles/common.js","styles/colors.js","styles/vars.js","styles/index.js","App.jsx","index.tsx","../../twitch-simple-irc/dist/index.js"],"names":["e","t","default","r","n","s","a","Object","assign","arguments","length","prototype","hasOwnProperty","call","apply","this","i","o","Math","floor","random","toString","padStart","m","startsWith","endsWith","c","slice","u","middle","d","process","versions","node","g","p","l","f","h","split","reduce","v","entries","includes","map","start","Number","parseInt","end","replace","S","tags","raw","channel","w","message","trailing","exports","Commands","REPLY001","PING","PONG","JOIN","PART","PRIVMSG","NOTICE","USERNOTICE","GLOBALUSERSTATE","USERSTATE","ROOMSTATE","CLEARCHAT","CLEARMSG","HOSTTARGET","WHISPER","R","P","socket","globalUserState","channels","_connected","_connecting","_registered","options","secure","create","constructor","__proto__","connect","_connectInNode","_connectInBrowser","Promise","resolve","then","_register","reject","receiveRaw","trim","forEach","_handleMessage","sendRaw","write","send","say","format","command","sendCommand","Array","isArray","join","part","parse","emit","name","_updateUserState","_updateRoomState","_updateGlobalUserState","user","prefix","b","C","T","y","isAction","Socket","on","WebSocket","onopen","onmessage","data","onerror","onclose","wasClean","code","reason","Error","auth","off","setTimeout","userState","roomState","key","get","enumerable","configurable","writable","defineProperty","EventEmitter","UserNoticeType","sub","resub","subgift","anonsubgift","submysterygift","giftpaidupgrade","rewardgift","anongiftpaidupgrade","raid","unraid","ritual","bitsbadgetier","Client","getChannelFromMessage","getIsAction","getRandomUsername","isNode","normalizeActionMessage","parseMessageTags","isAuthRedirect","hash","MESSAGE_TYPES","SUGGESTION_TYPES","users","limit","regex","emotes","STORE_FLAGS","DEFAULT","isLoading","isLoaded","isError","error","REQUEST","SUCCESS","FAILURE","NOTICE_MESSAGE_TAGS","fetchRequest","url","fetchOptions","timeout","controller","AbortController","signal","abort","fetch","response","json","body","ok","statusText","apiRequest","apiRequestKraken","headers","Accept","Authorization","localStorage","accessToken","fetchUser","id","fetchTwitchEmotesBySets","userId","fetchBttvChannelEmotes","channelId","fetchFfzChannelEmotes","fetchRecentMessages","fetchGlobalBadges","language","fetchChannelBadges","fetchBlockedUsers","defaultState","isAuth","login","displayName","setIsAuth","createAction","fetchUserRequest","fetchUserSuccess","fetchUserFailure","handleFetchUser","state","payload","reducer","handleActions","undefined","global","items","createActions","fetchGlobalBadgesRequest","fetchGlobalBadgesSuccess","fetchGlobalBadgesFailure","fetchChannelBadgesRequest","fetchChannelBadgesSuccess","fetchChannelBadgesFailure","parseBadges","handleFetchGlobalBadges","handleFetchChannelBadges","currentChannel","isConnected","globalState","blockedUsers","setCurrentChannel","setIsConnected","updateGlobalUserState","updateUserState","updateRoomState","removeChannel","fetchBlockedUsersRequest","fetchBlockedUsersSuccess","fetchBlockedUsersFailure","parseBlockedUsers","handleFetchBlockUsers","fetchTwitchEmotesRequest","fetchTwitchEmotesSuccess","fetchTwitchEmotesFailure","handleFetchTwitchEmotes","fetchBttvGlobalEmotesRequest","fetchBttvGlobalEmotesSuccess","fetchBttvGlobalEmotesFailure","fetchBttvChannelEmotesRequest","fetchBttvChannelEmotesSuccess","fetchBttvChannelEmotesFailure","parseBttvChannelEmotes","channelEmotes","sharedEmotes","handleFetchBttvGlobalEmotes","handleFetchBttvChannelEmotes","fetchFfzGlobalEmotesRequest","fetchFfzGlobalEmotesSuccess","fetchFfzGlobalEmotesFailure","fetchFfzChannelEmotesRequest","fetchFfzChannelEmotesSuccess","fetchFfzChannelEmotesFailure","parseFfzGlobalEmotes","defaultSets","default_sets","sets","parseFfzChannelEmotes","handleFetchFfzGlobalEmotes","handleFetchFfzChannelEmotes","combineReducers","twitch","bttv","ffz","isStartsWithProtocolRegex","normalizeHref","href","test","TWITCH_EMOTES_CDN","mentionRegex","linkRegex","urlRegex","strict","normalizeEmotesFromTags","value","getFfzSrcSet","dpi","createTwitchEmote","type","alt","src","srcSet","createBttvEmote","createFfzEmote","urls","createMention","text","target","twitchEmoteType","pt","shape","oneOf","isRequired","string","bttvEmoteType","ffzEmoteType","emojiType","mentionType","linkType","regexMap","4","9","findTwitchEmote","RegExp","findTwitchEmoteInSets","values","set","result","findBttvEmote","findFfzEmote","findEntity","word","parseTwitch","twitchGlobal","twitchUser","bttvGlobal","bttvChannel","ffzGlobal","ffzChannel","twitchEmote","bttvEmote","ffzEmote","char","emojiMatch","twemojiParser","assetType","emoji","emojilib","mentionMatch","match","toLowerCase","linkMatch","formatMessage","embeddedEmotes","isOwnMessage","hasEmbeddedEmotes","keys","normalizedEmbeddedEmotes","offset","arrayOffset","spaceIndex","indexOf","startIndex","endIndex","substring","entity","embeddedEmote","textBefore","push","entityObject","difference","textAfter","currentChannelSelector","currentChannelIdSelector","isConnectedSelector","chat","isBlockedUsersLoadedSelector","blockedUsersSelector","createIsEmotesLoadedSelector","globalLoaded","channelLoaded","isBttvEmotesLoadedSelector","isFfzEmotesLoadedSelector","isTwitchEmotesLoadedSelector","twitchEmotesSelector","twitchGlobalEmotesSelector","createSelector","twitchUserEmotesSelector","createGlobalEmotesSelector","createChannelEmotesSelector","bttvGlobalEmotesSelector","bttvChannelEmotesSelector","ffzGlobalEmotesSelector","ffzChannelEmotesSelector","emotesSelector","isEmotesLoaded","regexEmotesMap","createGlobalTwitchEmote","emoteCategoriesSelector","title","filter","globalBadgesSelector","badges","channelBadgesSelector","isBadgesLoadedSelector","isGlobalBadgesLoadedSelector","isChannelBadgesLoadedSelector","getMessageBadges","globalBadges","channelBadges","version","badge","description","imageUrl1x","image_url_1x","imageUrl2x","image_url_2x","imageUrl4x","image_url_4x","label","createBadge","Boolean","normalizeRecentMessages","messages","params","normalizedMessage","parsedTags","messageArray","isHistory","addMessages","fetchRecentMessagesRequest","fetchRecentMessagesSuccess","fetchRecentMessagesFailure","clearChat","addMessage","dispatch","getState","handleFetchRecentMessages","history","prevItems","newItems","slicedMessages","diff","sliceMessages","isSliced","isEven","prev","addedItemsCount","getIsEven","clearHistory","sliceUsers","targetUserId","isDeleted","getOptionsFromLocalStorage","JSON","showTimestamps","splitChat","blacklistKeywords","highlightKeywords","fixedWidth","changeOption","option","setItem","stringify","enhancer","applyMiddleware","thunk","store","createStore","rootReducer","isAuthSelector","userLoginSelector","userIdSelector","userDisplayNameSelector","messagesSelector","usersSelector","isHistoryLoadedSelector","isEvenSelector","useFetchChatData","useDispatch","useSelector","currentChannelId","isTwitchEmotesLoaded","isBttvEmotesLoaded","isFfzEmotesLoaded","isBadgesLoaded","isHistoryLoaded","isBlockedUsersLoaded","isReadyToAddRecentMessages","useEffect","apiFetchGlobalBadges","apiFetchRecentMessages","emoticon_sets","fetchTwitchEmotes","apiFetchBlockedUsers","apiFetchBttvChannelEmotes","apiFetchFfzChannelEmotes","apiFetchChannelBadges","useLocationHash","useState","window","location","setHash","handleHashChange","addEventListener","removeEventListener","useCurrentChannel","document","usePrevious","ref","useRef","current","createOwnMessage","uuid","tmiSentTs","Date","getTime","useTwitchClient","prevChannel","clientRef","handleRegister","handleDisconnect","handleGlobalUserState","handleUserState","handleRoomState","handleMessage","handleNotice","handleUserNotice","handleClearChat","useMemo","removeListeners","msgId","replaceEmojis","useSetState","initialState","useCallback","patch","prevState","Function","optionsSelector","isShowTimestampsSelector","isSplitChatSelector","isFixedWidthSelector","getUserSuggestions","beginText","userDisplayName","beginTextLower","userDisplayNameLower","nameLower","checkTwitch","emote","checkBttv","checkFfz","getEmoteSuggestions","_extends","source","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","_ref","svgRef","props","viewBox","ForwardRef","forwardRef","sizes","small","css","medium","IconButton","styled","button","attrs","size","defaultProps","propTypes","ChatModalRoot","div","CloseButton","CloseIcon","CloseIconSvg","ChatModal","children","onClose","onClick","Scrollbar","CustomScrollbar","disableTracksWidthCompensation","EmotePickerRoot","Categories","Category","CategoryHeader","CategoryItems","Emote","img","EmotePicker","emoteCategories","onEmoteClick","renderCategory","fillRule","clipRule","ChatInputRoot","ChatInputInner","Suggestions","SuggestionItem","isActive","SuggestionImage","TextareaInput","TextareaWrapper","isSuggestions","EmotesModal","Textarea","textarea","EmotesButton","SmileyFaceIcon","SmileyFaceIconSvg","ChatInput","React","textareaRef","suggestions","isDisabled","onChange","onKeyUp","onKeyDown","onBlur","chatInputRef","isEmotesModalVisible","setIsEmotesModalVisible","handleCloseEmotesModal","useOnClickOutside","activeIndex","index","renderSuggestions","placeholder","maxLength","disabled","memo","SwitchRoot","Label","Input","input","Switch","checked","readOnly","htmlFor","OptionsRoot","Header","h2","Option","OptionText","span","Options","renderOption","renderOptionsCategory","ChatControlsRoot","Controls","OptionsModal","SendButton","GearsIcon","GearsIconSvg","StyledLink","Link","ChatControls","onSendMessage","isOptionsModalVisible","setIsOptionsModalVisible","optionsModalRef","handleCloseOptionsModal","to","arrayOf","oneOfType","badgeInfo","subscriber","color","flags","mod","bool","roomId","tmiSentId","number","systemMsg","msgParamCumulativeMonths","msgParamDisplayName","msgParamLogin","msgParamMonths","msgParamPromoGiftTotal","msgParamPromoName","msgParamRecipientDisplayName","msgParamRecipientId","msgParamRecipientUserName","msgParamSenderLogin","msgParamSenderName","msgParamShouldShareStreak","msgParamStreakMonths","msgParamSubPlan","msgParamSubPlanName","msgParamViewerCount","msgParamRitualName","msgParamThreshold","MessageRoot","isMention","Name","Emoji","Mention","Timestamp","Badge","Message","userLogin","isShowTimestamps","onNameRightClick","isVisible","setIsVisible","aria-label","renderBadges","onContextMenu","preventDefault","item","rel","renderMessageArray","NoticeRoot","Notice","UserNoticeRoot","ChatMessage","onNameClick","MessagesRoot","StyledScrollbar","MoreMessagesButton","visible","Messages","isSplitChat","isMoreMessagesButtonVisible","setIsMoreMessagesButtonVisible","scrollbarRef","handleScrollToBottom","scrollToBottom","onUpdate","clientHeight","contentScrollHeight","scrollTop","ChatRoot","ChatWrapper","isFixedWidth","suggestionsInitialState","setSuggestionsIndexUp","rest","setSuggestionsIndexDown","Chat","setText","setSuggestions","textRef","usersRef","emotesRef","suggestionsRef","handleNameRightClick","trimLeft","focus","handleEmoteClick","emoteName","handleSendMessage","handleBlur","handleChange","selectionStart","spaceIndexBefore","lastIndexOf","spaceIndexAfter","usersMatch","exec","emotesMatch","handleKeyUp","handleKeyDown","currentItem","insertedText","testAfter","Home","client","rawUser","getItem","authParams","client_id","redirect_uri","response_type","scope","claims","id_token","email_verified","picture","preferred_username","getAuthUrl","search","Auth","AuthCallback","useHistory","URLSearchParams","idToken","apiFetchUser","display_name","jwt","decode","lastChannel","createGlobalStyle","colors","vars","common","App","exact","path","component","ReactGA","initialize","page","pathname","pageview","ReactDOM","render","getElementById","module"],"mappings":"uJAAA,YAEA,IAAIA,EACAC,GAAKD,EAAI,EAAQ,OAAW,iBAAmBA,GAAK,YAAaA,EAAIA,EAAEE,QAAUF,EACjFG,EAAI,EAAQ,KACZC,EAAI,EAAQ,IACZC,EAAI,EAAQ,KAEhB,SAASC,IACP,OAAQA,EAAIC,OAAOC,QAAU,SAAUR,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIQ,UAAUC,OAAQT,IAAK,CACzC,IAAIE,EAAIM,UAAUR,GAElB,IAAK,IAAIG,KAAKD,EACZI,OAAOI,UAAUC,eAAeC,KAAKV,EAAGC,KAAOJ,EAAEI,GAAKD,EAAEC,IAI5D,OAAOJ,IACNc,MAAMC,KAAMN,WAGjB,IAAIO,EACAC,EAAI,WACN,MAAO,YAAcC,KAAKC,MAAM,IAAMD,KAAKE,UAAUC,WAAWC,SAAS,EAAG,MAE1EC,EAAI,SAAWvB,GACjB,OAAOA,EAAEwB,WAAW,gBAAexB,EAAEyB,SAAS,SAE5CC,EAAI,SAAW1B,GACjB,OAAOA,EAAE2B,MAAM,GAAI,IAEjBC,EAAI,SAAW5B,GACjB,OAAOA,EAAE6B,OAAO,GAAGF,MAAM,IAEvBG,IAAM,oBAAsBC,IAAYA,EAAQC,WAAaD,EAAQC,SAASC,MAC9EC,EAAI,CAAC,MAAO,aAAc,MAAO,UAAW,YAAa,iCACzDC,EAAI,CAAC,cAAe,OAAQ,eAAgB,8BAA+B,mBAAoB,6BAA8B,0BAA2B,wBAAyB,uBACjLC,EAAI,CACN,aAAc,YACd,eAAgB,cAChB,aAAc,YACd,UAAW,SACX,cAAe,YACf,UAAW,SACX,gBAAiB,cACjB,SAAU,QACV,aAAc,YACd,aAAc,YACd,iBAAkB,gBAClB,YAAa,WACb,eAAgB,cAChB,aAAc,YACd,YAAa,WACb,8BAA+B,2BAC/B,wBAAyB,sBACzB,kBAAmB,gBACnB,mBAAoB,iBACpB,6BAA8B,yBAC9B,uBAAwB,oBACxB,mCAAoC,+BACpC,yBAA0B,sBAC1B,gCAAiC,4BACjC,yBAA0B,sBAC1B,wBAAyB,qBACzB,gCAAiC,4BACjC,0BAA2B,uBAC3B,qBAAsB,kBACtB,0BAA2B,sBAC3B,wBAAyB,sBACzB,wBAAyB,qBACzB,sBAAuB,qBAErBC,EAAI,CAAC,aAAc,QAAS,aAC5BC,EAAI,SAAWtC,GACjB,YAAO,IAAWA,IAAMA,EAAI,IAAKA,EAAIA,EAAEuC,MAAM,KAAKC,QAAO,SAAUxC,EAAGC,GACpE,IAAIE,EACAC,EAAIH,EAAEsC,MAAM,KAChB,OAAOjC,EAAE,GAAIN,IAAKG,EAAI,IAAIC,EAAE,IAAMA,EAAE,GAAID,MACvC,IAAM,IAEPsC,EAAI,SAAWzC,GACjB,OAAOA,EAAIO,OAAOmC,QAAQ1C,GAAGwC,QAAO,SAAUxC,EAAGC,GAC/C,IAAIE,EACAC,EAAIH,EAAE,GACNI,EAAIJ,EAAE,GACV,OAAOoC,EAAEM,SAASvC,GAAKJ,EAAIM,EAAE,GAAIN,IAAKG,EAAI,IAAIiC,EAAEhC,IAAMA,GAAK,SAAUJ,EAAGC,GACtE,GAAI,WAAaD,EAAG,YAAO,KAAYG,EAAIF,KAAOE,EAAI,IAAKA,EAAIA,EAAEoC,MAAM,KAAKC,QAAO,SAAUxC,EAAGC,GAC9F,IAAIE,EACAC,EAAIH,EAAEsC,MAAM,KAChB,OAAOjC,EAAE,GAAIN,IAAKG,EAAI,IAAIC,EAAE,IAAMA,EAAE,GAAGmC,MAAM,KAAKK,KAAI,SAAU5C,GAC9D,IAAIC,EAAID,EAAEuC,MAAM,KACZpC,EAAIF,EAAE,GACV,MAAO,CACL4C,MAAOC,OAAOC,SAAS9C,EAAE,GAAI,IAC7B+C,IAAKF,OAAOC,SAAS5C,EAAG,QAExBA,MACH,IAAM,GACT,IAAIA,EACJ,GAAI,WAAaH,EAAG,OAAOsC,EAAErC,GAC7B,GAAI,eAAiBD,EAAG,OAAOsC,EAAErC,GAEjC,GAAI,mBAAqBD,EAAG,CAC1B,IAAII,GAAI,EACR,MAAO,OAASH,EAAIG,GAAI,EAAK,MAAQH,EAAIG,GAAI,EAAK,iBAAmBH,IAAMG,EAAI2C,SAAS9C,EAAG,KAAMG,EAGnG,GAAI,SAAWJ,EAAG,CAChB,IAAIK,GAAI,EACR,MAAO,MAAQJ,EAAII,GAAI,EAAK,iBAAmBJ,IAAMI,EAAI0C,SAAS9C,EAAG,KAAMI,EAG7E,OAAO6B,EAAES,SAAS3C,GAAK,MAAQC,EAAIkC,EAAEQ,SAAS3C,GAAK+C,SAAS9C,EAAG,IAAM,iBAAmBA,EAAIA,EAAEgD,QAAQ,MAAO,KAAOhD,EA3B3D,CA4BzDG,EAAGC,GAAIF,MACR,IAAM,IAEP+C,EAAI,SAAWlD,GACjB,IAAIC,EAAID,EAAEmD,KACV,MAAO,CACLC,IAAKpD,EAAEoD,IACPC,QAASzB,EAAE5B,GAEX,WACE,OAAOyC,EAAExC,MAKXqD,EAAI,SAAWtD,GACjB,IAAIC,EAAID,EAAEmD,KACV,MAAO,CACLC,IAAKpD,EAAEoD,IACPG,QAASvD,EAAEwD,SACXH,QAASzB,EAAE5B,GAEX,WACE,OAAOyC,EAAExC,OAMde,EAAIyC,EAAQC,WAAaD,EAAQC,SAAW,KAAKC,SAAW,MAAO3C,EAAE4C,KAAO,OAAQ5C,EAAE6C,KAAO,OAAQ7C,EAAE8C,KAAO,OAAQ9C,EAAE+C,KAAO,OAAQ/C,EAAEgD,QAAU,UAAWhD,EAAEiD,OAAS,SAAUjD,EAAEkD,WAAa,aAAclD,EAAEmD,gBAAkB,kBAAmBnD,EAAEoD,UAAY,YAAapD,EAAEqD,UAAY,YAAarD,EAAEsD,UAAY,YAAatD,EAAEuD,SAAW,WAAYvD,EAAEwD,WAAa,aAAcxD,EAAEyD,QAAU,UAE3Y,IAAIC,EACAC,EAAI,SAAU3E,GAChB,IAAII,EAAGY,EAEP,SAASkB,EAAEjC,GACT,IAAIE,EACJ,YAAO,IAAWF,IAAMA,EAAI,KAAME,EAAIH,EAAEa,KAAKE,OAASA,MAAM6D,OAAS,KAAMzE,EAAE0E,gBAAkB,KAAM1E,EAAE2E,SAAW,GAAI3E,EAAE4E,YAAa,EAAI5E,EAAE6E,aAAc,EAAI7E,EAAE8E,aAAc,EAAI9E,EAAE+E,QAAU5E,EAAE,CAC7L6E,QAAQ,GACPlF,GAAIE,EAGTa,EAAIhB,GAAII,EAAI8B,GAAGvB,UAAYJ,OAAO6E,OAAOpE,EAAEL,WAAYP,EAAEO,UAAU0E,YAAcjF,EAAGA,EAAEkF,UAAYtE,EAClG,IAAImB,EACAC,EAAIF,EAAEvB,UACV,OAAOyB,EAAEmD,QAAU,WACjB,IACE,IAAIvF,EAAIe,KACJd,EAAI6B,EAAI9B,EAAEwF,iBAAmBxF,EAAEyF,oBACnC,OAAOC,QAAQC,QAAQ1F,GAAG2F,MAAK,WAC7B,OAAO5F,EAAE6F,eAEX,MAAO7F,GACP,OAAO0F,QAAQI,OAAO9F,KAEvBoC,EAAE2D,WAAa,SAAU/F,GAC1B,IAAIC,EAAIc,KACRf,EAAEgG,OAAOzD,MAAM,QAAQ0D,SAAQ,SAAUjG,GACvC,OAAOC,EAAEiG,eAAelG,OAEzBoC,EAAE+D,QAAU,SAAUnG,GACvB,QAAS,OAASe,KAAK6D,SAAW5E,IAAM8B,EAAIf,KAAK6D,OAAOwB,MAAMpG,GAAKe,KAAK6D,OAAOyB,KAAKrG,GAAI,KACvFoC,EAAEkE,IAAM,SAAUtG,EAAGC,GACtB,IAAIE,EAAIE,EAAEkG,OAAO,CACfC,QAAS/C,EAAQC,SAASM,QAC1BnC,OAAQ,CAAC,IAAM7B,GACfwD,SAAUvD,IAEZ,OAAOc,KAAKoF,QAAQhG,IACnBiC,EAAEqE,YAAc,SAAUzG,EAAGC,EAAGE,QACjC,IAAWA,IAAMA,EAAI,IACrB,IAAIC,EAAIsG,MAAMC,QAAQxG,GAAKA,EAAEyG,KAAK,KAAOzG,EACrCG,EAAID,EAAEkG,OAAO,CACfC,QAAS/C,EAAQC,SAASM,QAC1BnC,OAAQ,CAAC,IAAM7B,GACfwD,SAAU,IAAMvD,EAAI,IAAMG,IAE5B,OAAOW,KAAKoF,QAAQ7F,IACnB8B,EAAEwE,KAAO,SAAU5G,GACpB,IAAKe,KAAKkE,YAAa,OAAO,EAC9B,IAAIhF,EAAII,EAAEkG,OAAO,CACfC,QAAS/C,EAAQC,SAASI,KAC1BjC,OAAQ,CAAC,IAAM7B,KAEjB,OAAOe,KAAKoF,QAAQlG,IACnBmC,EAAEyE,KAAO,SAAU7G,GACpB,IAAKe,KAAKkE,YAAa,OAAO,EAC9B,IAAIhF,EAAII,EAAEkG,OAAO,CACfC,QAAS/C,EAAQC,SAASK,KAC1BlC,OAAQ,CAAC,IAAM7B,KAEjB,OAAOe,KAAKoF,QAAQlG,IACnBmC,EAAE8D,eAAiB,SAAUlG,GAC9B,IAAIC,EAAII,EAAEyG,MAAM9G,GAChBC,EAAEmD,IAAMpD,EACR,IAAIG,EAAIF,EAAEuG,QACV,GAAIrG,IAAMsD,EAAQC,SAASE,KAAM,OAAO7C,KAAKoF,QAAQ1C,EAAQC,SAASG,KAAO,wBAAyB9C,KAAKgG,KAAK,OAAQ,CACtH3D,IAAKpD,IAEP,GAAIG,IAAMsD,EAAQC,SAASC,SAAU,OAAO5C,KAAKmE,QAAQ8B,KAAO/G,EAAE4B,OAAO,GAAId,KAAKkE,aAAc,OAASlE,KAAKgG,KAAK,YAEnH,GAAI5G,IAAMsD,EAAQC,SAASM,QAAS,CAClC,GAAI7D,IAAMsD,EAAQC,SAASU,UAAW,CACpC,IAAIhE,EAAIwB,EAAE3B,GACNK,EAAI4C,EAAEjD,GACV,OAAOc,KAAKkG,iBAAiB7G,EAAGE,EAAE6C,WAAYpC,KAAKgG,KAAK,YAAazG,GAGvE,GAAIH,IAAMsD,EAAQC,SAASI,KACzB,GAAI3D,IAAMsD,EAAQC,SAASK,KAAM,CAC/B,GAAI5D,IAAMsD,EAAQC,SAASW,UAAW,CACpC,IAAIrD,EAAIY,EAAE3B,GACNgB,EAAIiC,EAAEjD,GACV,OAAOc,KAAKmG,iBAAiBlG,EAAGC,EAAEkC,WAAYpC,KAAKgG,KAAK,YAAa9F,GAGvE,GAAId,IAAMsD,EAAQC,SAASO,OACzB,GAAI9D,IAAMsD,EAAQC,SAASQ,WACzB,GAAI/D,IAAMsD,EAAQC,SAASY,UACzB,GAAInE,IAAMsD,EAAQC,SAASa,SACzB,GAAIpE,IAAMsD,EAAQC,SAASc,WACzB,GAAIrE,IAAMsD,EAAQC,SAASe,QAAS,CAClC,IAAI3C,EAAGI,EAEP,GAAI/B,IAAMsD,EAAQC,SAASS,gBAAiB,CAC1C,IAAIhC,EAAI,SAAUnC,GAChB,IAAIC,EAAID,EAAEmD,KACV,MAAO,CACLC,IAAKpD,EAAEoD,IAEP,WACE,OAAOX,EAAExC,KANP,CAUNA,GAEF,OAAOc,KAAKoG,uBAAuBhF,EAAEgB,WAAYpC,KAAKgG,KAAK,kBAAmB5E,QAE3E,CACL,IAAIC,GAAKF,GAAKJ,EAAI7B,GAAGkD,KAAM,CACzBC,IAAKtB,EAAEsB,IACPG,QAASzB,EAAE0B,SACXH,QAASvB,EAAED,OAAO,GAClBuF,KAAMtF,EAAEuF,OAAOL,KAEf,WACE,OAAOvE,EAAEP,MAIbnB,KAAKgG,KAAK,UAAW3E,OAElB,CACL,IAAIC,EAAIiB,EAAErD,GACVc,KAAKgG,KAAK,aAAc1E,OAErB,CACL,IAAIC,EAAIgB,EAAErD,GACVc,KAAKgG,KAAK,eAAgBzE,OAEvB,CACL,IAAIoC,EAAIpB,EAAErD,GACVc,KAAKgG,KAAK,YAAarC,OAEpB,CACL,IAAIC,EAAIrB,EAAErD,GACVc,KAAKgG,KAAK,aAAcpC,OAErB,CACL,IAAI2C,EAAIhE,EAAErD,GACVc,KAAKgG,KAAK,SAAUO,QAEjB,CACL,IAAIC,EAAI3F,EAAE3B,GACVc,KAAKgG,KAAK,OAAQ,CAChB1D,QAASkE,QAGR,CACL,IAAIC,EAAI5F,EAAE3B,GACVc,KAAKgG,KAAK,OAAQ,CAChB1D,QAASmE,SAGR,CACL,IAAIC,EAAI,SAAUzH,GAChB,IAAIC,EAAID,EAAEoD,IACNjD,EAAIH,EAAEwD,SACNpD,EAAIJ,EAAEmD,KACN9C,EAAIL,EAAEqH,OAAOL,KACb1G,EAAIiB,EAAEpB,GACV,MAAO,CACLiD,IAAKnD,EACLsD,QAASjD,EAAIoB,EAAEvB,GAAKA,EACpBkD,QAASzB,EAAE5B,GACXoH,KAAM/G,EAEN,WACE,OAAOoC,EAAErC,IAGXsH,SAAUpH,GAhBN,CAkBNL,GAEFc,KAAKgG,KAAK,UAAWU,KAEtBrF,EAAEoD,eAAiB,WACpB,IAAIxF,EAAIe,KACJX,EAAI,qBACJC,EAAIU,KAAKmE,QAAQC,OAAS,KAAO,KACrC,OAAO,IAAIO,SAAQ,SAAUpF,EAAGU,GAC9BhB,EAAEgF,aAAc,EAEhB,IAAI/D,EAAI,WACNjB,EAAEgF,aAAc,EAAIhF,EAAE+E,YAAa,EAAI/E,EAAE+G,KAAK,WAAYzG,KAG5DN,EAAEkF,QAAQC,OAASnF,EAAE4E,OAAS3E,EAAEsF,QAAQlF,EAAGD,EAAG,GAAIa,IAAMjB,EAAE4E,OAAS,IAAIzE,EAAEwH,OAAU3H,EAAE4E,OAAOW,QAAQlF,EAAGD,EAAGa,IAAKjB,EAAE4E,OAAOgD,GAAG,SAAS,SAAU3H,GAC5ID,EAAE+E,YAAa,EAAI/E,EAAEgF,aAAc,EAAIhF,EAAE+G,KAAK,aAAc9G,GAAIe,EAAEf,MAChED,EAAE4E,OAAOgD,GAAG,QAAQ,SAAU3H,GAChCD,EAAE+F,WAAW9F,EAAEoB,eACbrB,EAAE4E,OAAOgD,GAAG,SAAS,WACvB5H,EAAE+E,YAAa,EAAI/E,EAAEgF,aAAc,EAAIhF,EAAEiF,aAAc,EAAIjF,EAAE+G,KAAK,qBAGrE3E,EAAEqD,kBAAoB,WACvB,IAAIzF,EAAIe,KACJd,EAAIc,KAAKmE,QAAQC,OAAS,kCAAoC,gCAClE,OAAO,IAAIO,SAAQ,SAAUvF,EAAGC,GAC9BJ,EAAEgF,aAAc,EAAIhF,EAAE4E,OAAS,IAAIiD,UAAU5H,GAAID,EAAE4E,OAAOkD,OAAS,WACjE9H,EAAE+E,YAAa,EAAI/E,EAAEgF,aAAc,EAAIhF,EAAE+G,KAAK,WAAY5G,KACzDH,EAAE4E,OAAOmD,UAAY,SAAU9H,GAChC,OAAOD,EAAE+F,WAAW9F,EAAE+H,OACrBhI,EAAE4E,OAAOqD,QAAU,aAAgBjI,EAAE4E,OAAOsD,QAAU,SAAUjI,GACjE,IAAIE,EAAIF,EAAEkI,SACN9H,EAAIJ,EAAEmI,KACN9H,EAAIL,EAAEoI,OACV,GAAIrI,EAAE4E,OAAS,KAAM5E,EAAE+E,YAAa,EAAI/E,EAAEgF,aAAc,EAAIhF,EAAEiF,aAAc,EAAI9E,EAAGH,EAAE+G,KAAK,kBAAmB,CAC3G,IAAI/F,EAAI,IAAIsH,MAAM,IAAMjI,EAAI,KAAOC,GACnCN,EAAE+G,KAAK,aAAc/F,GAAIZ,EAAEY,SAIhCoB,EAAEyD,UAAY,WACf,IAAI7F,EAAIe,KACR,IAAKA,KAAKgE,WAAY,OAAOW,QAAQI,SACrC,GAAI/E,KAAKkE,YAAa,OAAOS,QAAQC,UACrC,IAAI1F,EAAIc,KAAKmE,QACT/E,EAAIF,EAAEsI,KACNnI,EAAIH,EAAE+G,MAAQ/F,IACdZ,EAAIF,EAAI,SAAWA,EAAI,aAC3B,OAAOY,KAAKoF,QAAQ,8CAA+CpF,KAAKoF,QAAQ,QAAU9F,GAAIU,KAAKoF,QAAQ,QAAU/F,GAAI,IAAIsF,SAAQ,SAAUzF,EAAGE,GAChJ,IAAIC,EAAI,SAASD,IACfF,IAAKD,EAAEwI,IAAI,WAAYrI,IAGzBH,EAAE4H,GAAG,WAAYxH,GAAIqI,YAAW,WAC9BtI,IAAKH,EAAEwI,IAAI,WAAYpI,KACtB,SAEJgC,EAAE+E,uBAAyB,SAAUnH,GACtCe,KAAK8D,gBAAkBvE,EAAE,GAAIS,KAAK8D,gBAAiB,GAAI7E,IACtDoC,EAAE6E,iBAAmB,SAAUjH,EAAGC,GACnC,IAAIE,EACJY,KAAK+D,SAAWxE,EAAE,GAAIS,KAAK+D,WAAY3E,EAAI,IAAIH,GAAKM,EAAE,GAAIS,KAAK+D,SAAS9E,GAAI,CAC1E0I,UAAWzI,IACTE,KACHiC,EAAE8E,iBAAmB,SAAUlH,EAAGC,GACnC,IAAIE,EACJY,KAAK+D,SAAWxE,EAAE,GAAIS,KAAK+D,WAAY3E,EAAI,IAAIH,GAAKM,EAAE,GAAIS,KAAK+D,SAAS9E,GAAI,CAC1E2I,UAAW1I,IACTE,MACFgC,EAAI,CAAC,CACPyG,IAAK,YACLC,IAAK,WACH,OAAO9H,KAAKgE,aAEb,CACD6D,IAAK,aACLC,IAAK,WACH,OAAO9H,KAAKiE,cAEb,CACD4D,IAAK,aACLC,IAAK,WACH,OAAO9H,KAAKkE,iBAET,SAAUjF,EAAGC,GAClB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAES,OAAQP,IAAK,CACjC,IAAIC,EAAIH,EAAEE,GACVC,EAAE0I,WAAa1I,EAAE0I,aAAc,EAAI1I,EAAE2I,cAAe,EAAI,UAAW3I,IAAMA,EAAE4I,UAAW,GAAKzI,OAAO0I,eAAejJ,EAAGI,EAAEwI,IAAKxI,IAHxH,CAKL8B,EAAEvB,UAAWwB,GAAID,EAtQb,CAuQN9B,EAAE8I,eAEHxE,EAAIjB,EAAQ0F,iBAAmB1F,EAAQ0F,eAAiB,KAAKC,IAAM,MAAO1E,EAAE2E,MAAQ,QAAS3E,EAAE4E,QAAU,UAAW5E,EAAE6E,YAAc,cAAe7E,EAAE8E,eAAiB,iBAAkB9E,EAAE+E,gBAAkB,kBAAmB/E,EAAEgF,WAAa,aAAchF,EAAEiF,oBAAsB,sBAAuBjF,EAAEkF,KAAO,OAAQlF,EAAEmF,OAAS,SAAUnF,EAAEoF,OAAS,SAAUpF,EAAEqF,cAAgB,gBAAiBtG,EAAQuG,OAASrF,EAAGlB,EAAQwG,sBAAwBrI,EAAG6B,EAAQyG,YAAc3I,EAAGkC,EAAQ0G,kBAAoBlJ,EAAGwC,EAAQ2G,OAAStI,EAAG2B,EAAQ4G,uBAAyB3I,EAAG+B,EAAQ6G,iBAAmB7H,I,wLCzZ7jB8H,EAFQ,SAACC,GAAD,OAAUA,EAAKhJ,WAAW,mB,2ECWpCiJ,EACF,UADEA,EAEK,iBAFLA,EAGU,sBAGVC,EAAmB,CAC9BC,MAAO,CACL3D,KAAM,QACN4D,MAAO,EACPC,MAAO,iBAETC,OAAQ,CACN9D,KAAM,SACN4D,MAAO,GACPC,MAAO,qBAIEE,EAAc,CACzBC,QAAS,CACPC,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAO,MAETC,QAAS,CACPJ,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAO,MAETE,QAAS,CACPL,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAO,MAETG,QAAS,CACPN,WAAW,EACXC,UAAU,EACVC,SAAS,IAIAK,EAAsB,CACjC,aACA,qBACA,sBACA,wBACA,gBACA,gBACA,eACA,oBACA,6BACA,yBACA,UACA,gBACA,eACA,yBACA,qBACA,eACA,eACA,gBACA,eACA,sB,yjBC5EF,IAuBeC,EAvBG,uCAAG,WAAOC,GAAP,qCAAApL,EAAA,6DAAY4E,EAAZ,+BAAsB,GACrCyG,EADe,KACKzG,GAEpBA,EAAQ0G,UACJC,EAAa,IAAIC,uBAChBH,EAAaC,QACpBD,EAAY,KAAQA,EAAR,CAAsBI,OAAQF,EAAWE,SACrDtD,YAAW,kBAAMoD,EAAWG,UAAS9G,EAAQ0G,UAP5B,SAUIK,MAAMP,EAAKC,GAVf,cAUbO,EAVa,gBAYAA,EAASC,OAZT,UAYbC,EAZa,OAcdF,EAASG,GAdK,uBAeXjB,EAAQ9C,MAAM4D,EAASI,aACvBtE,KAAOoE,EACPhB,EAjBW,iCAoBZgB,GApBY,4CAAH,sD,yjBCGlB,I,EAaMG,EAAa,SAACb,EAAKxG,GAAN,OACjBuG,EAAaC,EAAD,KAAWxG,EAAX,CAAoB0G,QFRE,QEgB9BY,EAAmB,SAACd,EAAKxG,GAAN,OACvBqH,EAAW,GAAD,OAtBc,gCAsBd,OAAwBb,GAAxB,KACLxG,EADK,CAERuH,QAlB4B,CAC9BC,OAAQ,mCACR,YAAa3K,kCACb4K,cAAc,SAAD,OAAWC,aAAaC,kBAkB1BC,EAAY,SAACC,GAAD,OAZArB,EAYwB,aAAD,OAAcqB,GAX5DR,EAAW,GAAD,OAjBa,+BAiBb,OAAuBb,GAAvB,KACLxG,EADK,CAERuH,QAhB2B,CAC7BE,cAAc,UAAD,OAAYC,aAAaC,iBAYhB,IAACnB,EAAKxG,GAcjB8H,EAA0B,SAACC,GAAD,OACrCT,EAAiB,UAAD,OAAWS,EAAX,aAILC,EAAyB,SAACC,GAAD,OACpCZ,EAAW,mDAAD,OAAoDY,KAInDC,EAAwB,SAACD,GAAD,OACnCZ,EAAW,2CAAD,OAA4CY,KAE3CE,EAAsB,SAAChK,GAAD,OACjCkJ,EAAW,6DAAD,OACqDlJ,EADrD,6BAICiK,EAAoB,eAACC,EAAD,uDAAY,KAAZ,OAC/BhB,EAAW,8DAAD,OACsDgB,KAErDC,EAAqB,SAACL,GAAD,IAAYI,EAAZ,uDAAuB,KAAvB,OAChChB,EAAW,+CAAD,OACuCY,EADvC,6BACqEI,KAGpEE,EAAoB,SAACR,GAAD,OAC/BT,EAAiB,UAAD,OAAWS,EAAX,a,yjBCvDlB,I,IAAMS,EAAe,CACnBC,QAAQ,EACRvG,KAAK,KACA2D,EAAY7K,QADb,CAEF6M,GAAI,KACJa,MAAO,KACPC,YAAa,QAIJC,EAAYC,YAAa,eAChCC,EAAmBD,YAAa,sBAChCE,EAAmBF,YAAa,sBAChCG,EAAmBH,YAAa,sBAuBhCI,GAAe,mBAClBH,GAAmB,SAACI,GAAD,OAClB1J,IAAiB0J,EAAO,CACtBT,QAAQ,EACRvG,KAAK,KAAM2D,EAAYM,cAJR,cAMlB4C,GAAmB,SAACG,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAClB3J,IAAiB0J,EAAO,CACtBT,QAAQ,EACRvG,KAAK,KACA2D,EAAYO,QADb,GAEC+C,QAXU,cAclBH,GAAmB,SAACE,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAClB3J,IAAiB0J,EAAO,CACtBT,QAAQ,EACRvG,KAAK,KACA2D,EAAYQ,QADb,CAEFH,MAAOiD,EAAQjD,aAnBF,GAgCNkD,EARCC,YAAc,EAAD,eAExBT,GAhCmB,SAACM,EAAD,WAAUC,QAAWV,EAArB,EAAqBA,OAAQvG,EAA7B,EAA6BA,KAA7B,YACnBgH,EADmB,CAEtBT,YAAmBa,IAAXb,EAAuBS,EAAMT,OAASA,EAC9CvG,KAAK,KAAMgH,EAAMhH,KAAb,GAAsBA,QA8BrB+G,GAELT,G,4kBC9DF,I,MAAMA,GAAe,CACnBe,OAAO,MACF1D,EAAYC,QADX,CAEJ0D,MAAO,KAET5J,SAAU,I,GAkBR6J,YACF,8BACA,8BACA,8BACA,+BACA,+BACA,gCAZAC,G,GAAAA,yBACAC,G,GAAAA,yBACAC,G,GAAAA,yBACAC,G,GAAAA,0BACAC,G,GAAAA,0BACAC,G,GAAAA,0BAUIC,GAAcxK,IAAS,GAAI,CAAC,eA+B5ByK,IAAuB,mBAC1BP,IAA2B,SAACR,GAAD,OAC1B1J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYM,cAHF,cAK1BwD,IAA2B,SAACT,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC1B3J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYO,QAAnB,CAA4BoD,MAAOL,EAAQK,aAP1B,cAS1BI,IAA2B,SAACV,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC1B3J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYQ,QAAnB,CAA4BH,MAAOiD,EAAQjD,aAX1B,GAevBgE,IAAwB,mBAC3BL,IAA4B,SAACX,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC3B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYM,eAJd,cAO3B2D,IAA4B,SAACZ,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC3B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYO,QAD9B,CACuCoD,MAAOL,EAAQK,cAVtC,cAa3BO,IAA4B,SAACb,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC3B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYQ,QAD9B,CACuCH,MAAOiD,EAAQjD,cAhBtC,GA6BfkD,GARCC,YAAc,MAEvBY,GAFsB,GAGtBC,IAEL1B,I,8mBC3GF,I,GAAMA,GAAe,CACnB2B,eAAgB,KAChBC,aAAa,EACbC,YAAa,GACbzK,SAAU,GAMV0K,aAAa,MACRzE,EAAYC,QADL,CAEV0D,MAAO,M,GAWPC,YACF,sBACA,mBACA,2BACA,oBACA,oBACA,kBAZAc,G,GAAAA,kBACAC,G,GAAAA,eACAC,G,GAAAA,sBACAC,G,GAAAA,gBACAC,G,GAAAA,gBACAC,G,GAAAA,c,GAcEnB,YACF,8BACA,8BACA,+BANAoB,G,GAAAA,yBACAC,G,GAAAA,yBACAC,G,GAAAA,yBAOIC,GAAoBxL,KACxBA,KAAO,UACPA,KAAMA,KAAO,CAAC,OAAQ,WA0ClByL,IAAqB,qBACxBJ,IAA2B,SAAC3B,GAAD,OAC1B1J,IAAiB0J,EAAO,CACtBoB,aAAa,MAAMzE,EAAYM,cAHV,eAKxB2E,IAA2B,SAAC5B,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC1B3J,IAAiB0J,EAAO,CACtBoB,aAAa,MAAMzE,EAAYO,QAAnB,CAA4BoD,MAAOL,EAAQK,aAPlC,eASxBuB,IAA2B,SAAC7B,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC1B3J,IAAiB0J,EAAO,CACtBoB,aAAa,MAAMzE,EAAYQ,QAAnB,CAA4BH,MAAOiD,EAAQjD,aAXlC,IA4BZkD,GAbCC,YAAc,UAAD,eAExBkB,IA7C2B,SAACrB,EAAD,gBAC3BA,EAD2B,CAE9BiB,eAF8B,EAAUhB,aA2Cb,eAGxBqB,IA1CwB,SAACtB,EAAD,gBACxBA,EADwB,CAE3BkB,YAF2B,EAAUjB,aAuCV,eAIxBsB,IAvC+B,SAACvB,EAAD,OAAqBjL,EAArB,EAAUkL,QAAWlL,KAArB,aAC/BiL,EAD+B,CAElCmB,YAAY,MAAMnB,EAAMmB,YAAb,GAA6BpM,QAiCb,eAKxByM,IApCyB,SAACxB,EAAD,WAAUC,QAAWhL,EAArB,EAAqBA,QAASF,EAA9B,EAA8BA,KAA9B,OAC5BuB,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNzB,EAAU,CAAEqF,UAAWvF,SA4BD,eAMxB0M,IA/ByB,SAACzB,EAAD,WAAUC,QAAWhL,EAArB,EAAqBA,QAASF,EAA9B,EAA8BA,KAA9B,OAC5BuB,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNzB,EAAU,CAAEsF,UAAWxF,SAsBD,eAOxB2M,IA1BuB,SAAC1B,EAAD,OAAmB/K,EAAnB,EAAUgL,QAAV,aACvBD,EADuB,CAE1BtJ,SAAUJ,KAAO,CAACrB,GAAU+K,EAAMtJ,eAiBP,IAQtBqL,IAELzC,I,6jBChHF,I,MAAMA,GAAY,MACb3C,EAAYC,QADC,CAEhB0D,MAAO,K,GAcLC,YACF,8BACA,8BACA,+BANAyB,G,GAAAA,yBACAC,G,GAAAA,yBACAC,G,GAAAA,yBAoBIC,IAAuB,qBAC1BH,IAA2B,SAAChC,GAAD,aACvBA,EADuB,GAEvBrD,EAAYM,YAHU,eAK1BgF,IAA2B,SAACjC,EAAD,OAAUC,EAAV,EAAUA,QAAV,aACvBD,EADuB,GAEvBrD,EAAYO,QAFW,CAG1BoD,MAAOL,EAAQK,WARU,eAU1B4B,IAA2B,SAAClC,EAAD,OAAUC,EAAV,EAAUA,QAAV,aACvBD,EADuB,GAEvBrD,EAAYQ,QAFW,CAG1BH,MAAOiD,EAAQjD,WAbU,IAmBdkD,GAFCC,YAAcgC,GAAyB7C,I,skBChDvD,I,SA0BIiB,YACF,mCACA,mCACA,mCACA,oCACA,oCACA,qCAZA6B,G,GAAAA,6BACAC,G,GAAAA,6BACAC,G,GAAAA,6BACAC,G,GAAAA,8BACAC,G,GAAAA,8BACAC,G,GAAAA,8BAUIC,GAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAlB,6BAC1BD,GAD0B,aAE1BC,KAkCCC,IAA2B,qBAC9BT,IAA+B,SAACpC,GAAD,OAC9B1J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYM,cAHE,eAK9BoF,IAA+B,SAACrC,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC9B3J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYO,QAAnB,CAA4BoD,MAAOL,EAAQK,aAPtB,eAS9BgC,IAA+B,SAACtC,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC9B3J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYQ,QAAnB,CAA4BH,MAAOiD,EAAQjD,aAXtB,IAe3B8F,IAA4B,qBAC/BP,IAAgC,SAACvC,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC/B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYM,eAJV,eAO/BuF,IAAgC,SAACxC,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC/B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYO,QAD9B,CACuCoD,MAAOL,EAAQK,cAVlC,eAa/BmC,IAAgC,SAACzC,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC/B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYQ,QAD9B,CACuCH,MAAOiD,EAAQjD,cAhBlC,IA6BnBkD,GARCC,YAAc,MAEvB0C,GAFsB,GAGtBC,IA9Gc,CACnBzC,OAAQ,CACNxD,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAO,KACPsD,MAAO,IAET5J,SAAU,K,qmBCRZ,I,GA0BI6J,YACF,kCACA,kCACA,kCACA,mCACA,mCACA,oCAZAwC,G,GAAAA,4BACAC,G,GAAAA,4BACAC,G,GAAAA,4BACAC,G,GAAAA,6BACAC,G,GAAAA,6BACAC,G,GAAAA,6BAUIC,GAAuB,SAAC,GAAD,IAAiBC,EAAjB,EAAGC,aAA2BC,EAA9B,EAA8BA,KAA9B,OAC3BlN,KACEA,KAAOgN,GACPhN,KACAA,KAAMA,KAAS,GAAI,cACnBA,KAJFA,CAKEkN,IAEEC,GAAwBnN,KAC5BA,IAAS,GAAI,CAAC,SACdA,KACAA,KAAMA,IAAS,GAAI,CAAC,eACpBA,MAkCIoN,IAA0B,qBAC7BX,IAA8B,SAAC/C,GAAD,OAC7B1J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYM,cAHC,eAK7B+F,IAA8B,SAAChD,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC7B3J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYO,QAAnB,CAA4BoD,MAAOL,EAAQK,aAPvB,eAS7B2C,IAA8B,SAACjD,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC7B3J,IAAiB0J,EAAO,CACtBK,OAAO,MAAM1D,EAAYQ,QAAnB,CAA4BH,MAAOiD,EAAQjD,aAXvB,IAe1B2G,IAA2B,qBAC9BT,IAA+B,SAAClD,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC9B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYM,eAJX,eAO9BkG,IAA+B,SAACnD,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC9B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYO,QAD9B,CACuCoD,MAAOL,EAAQK,cAVnC,eAa9B8C,IAA+B,SAACpD,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC9B3J,IAAiB0J,EAAO,CACtBtJ,SAAS,eACNuJ,EAAQhL,QADH,MACkB0H,EAAYQ,QAD9B,CACuCH,MAAOiD,EAAQjD,cAhBnC,IA6BlBkD,GARCC,YAAc,MAEvBuD,GAFsB,GAGtBC,IAxHc,CACnBtD,OAAQ,CACNxD,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAO,KACPsD,MAAO,IAET5J,SAAU,KCXGkN,eAAgB,CAC7BC,UACAC,QACAC,S,kJCRIC,GAA4B,wBAKnBC,GAHO,SAACC,GAAD,OACpBF,GAA0BG,KAAKD,GAAQA,EAAvC,YAAmDA,I,+NCIrD,I,MAAME,GAAoB,sCAGpBC,GAAe,ywQACfC,GAAYC,KAAS,CAAEC,QAAQ,IAE/BC,GAA0BnO,KAC9BA,KACAA,MAAM,oCAAEqI,EAAF,KAAM+F,EAAN,YAAiBpO,MAAM,SAACjC,GAAD,O,2VAAA,EAAUsK,MAAOtK,KAAMqQ,MACpDpO,MAGIqO,GAAerO,KACnBA,KACAA,MAAM,oCAAEsO,EAAF,KAAOtH,EAAP,qBAAmBA,EAAnB,YAA0BsH,EAA1B,QACNtO,KAAO,OAGIuO,GAAoB,SAAC,GAAD,IAAGlG,EAAH,EAAGA,GAAH,MAAmB,CAClDmG,KAAM,eACNC,IAF+B,EAAO/K,KAGtCgL,IAAI,GAAD,OAAKZ,GAAL,YAA0BzF,EAA1B,QACHsG,OAAO,GAAD,OAAKb,GAAL,YAA0BzF,EAA1B,oBAAwCyF,GAAxC,YAA6DzF,EAA7D,oBAA2EyF,GAA3E,YAAgGzF,EAAhG,aAEKuG,GAAkB,SAAC,GAAD,IAAGvG,EAAH,EAAGA,GAAH,MAAmB,CAChDmG,KAAM,aACNC,IAF6B,EAAO/K,KAGpCgL,IAAI,GAAD,OA1BmB,4BA0BnB,YAAwBrG,EAAxB,OACHsG,OAAO,GAAD,OA3BgB,4BA2BhB,YAAwBtG,EAAxB,mBA3BgB,4BA2BhB,YAAwDA,EAAxD,YAEKwG,GAAiB,SAAC,GAAD,IAAGvM,EAAH,EAAGA,KAAMwM,EAAT,EAASA,KAAT,MAAqB,CACjDN,KAAM,YACNC,IAAKnM,EACLoM,IAAKI,EAAK,GACVH,OAAQN,GAAaS,KAQVC,GAAgB,SAACC,EAAMC,GAAP,MAAmB,CAC9CT,KAAM,UACNQ,OACAC,WAQWC,GAAkBC,KAAGC,MAAM,CACtCZ,KAAMW,KAAGE,MAAM,CAAC,iBAAiBC,WACjCb,IAAKU,KAAGI,OAAOD,WACfZ,IAAKS,KAAGI,OAAOD,WACfX,OAAQQ,KAAGI,OAAOD,aAEPE,GAAgBL,KAAGC,MAAM,CACpCZ,KAAMW,KAAGE,MAAM,CAAC,eAAeC,WAC/Bb,IAAKU,KAAGI,OAAOD,WACfZ,IAAKS,KAAGI,OAAOD,WACfX,OAAQQ,KAAGI,OAAOD,aAEPG,GAAeN,KAAGC,MAAM,CACnCZ,KAAMW,KAAGE,MAAM,CAAC,cAAcC,WAC9Bb,IAAKU,KAAGI,OAAOD,WACfZ,IAAKS,KAAGI,OAAOD,WACfX,OAAQQ,KAAGI,OAAOD,aAEPI,GAAYP,KAAGC,MAAM,CAChCZ,KAAMW,KAAGE,MAAM,CAAC,UAAUC,WAC1Bb,IAAKU,KAAGI,OAAOD,WACfZ,IAAKS,KAAGI,OAAOD,WACfX,OAAQQ,KAAGI,SAEAI,GAAcR,KAAGC,MAAM,CAClCZ,KAAMW,KAAGE,MAAM,CAAC,YAAYC,WAC5BN,KAAMG,KAAGI,OAAOD,WAChBL,OAAQE,KAAGI,OAAOD,aAEPM,GAAWT,KAAGC,MAAM,CAC/BZ,KAAMW,KAAGE,MAAM,CAAC,SAASC,WACzBN,KAAMG,KAAGI,OAAOD,WAChB1B,KAAMuB,KAAGI,OAAOD,aAGZO,GAAW,CACfC,EAAG,OACHC,EAAG,MAGCC,GAAkB,SAAC1N,EAAM0H,GAAP,OACtBhK,MAAO,YAAmB,IAAhBqI,EAAe,EAAfA,GAAI3E,EAAW,EAAXA,KAEZ,OAAI2E,GAAM,GAAKA,GAAM,GAEZ4H,OAAO,IAAD,OADOJ,GAASxH,IAAO3E,EACvB,MAAqBmK,KAAKvL,GAGlCA,IAASoB,IACfsG,IACCkG,GAAwB,SAAC5N,EAAM4K,GAEnC,cAAkBrR,OAAOsU,OAAOjD,GAAhC,eAAuC,CAAlC,IAAMkD,EAAG,KACNC,EAASL,GAAgB1N,EAAM8N,GAErC,GAAIC,EAAQ,OAAOA,EAGrB,OAAO,MAGHC,GAAgB,SAAChO,EAAM0H,GAAP,OAAiBhK,KAAOA,KAAS,OAAQsC,GAAO0H,IAChEuG,GAAe,SAACjO,EAAM0H,GAAP,OAAiBhK,KAAOA,KAAS,OAAQsC,GAAO0H,IAI/DwG,GAAa,SAACC,EAAMrK,EAAP,GAA4C,IAAD,IAA1BsK,mBAA0B,SAC5D,IAAKtK,EAAQ,OAAO,KADwC,IAI1DuK,EAMEvK,EANFuK,aACAC,EAKExK,EALFwK,WACAC,EAIEzK,EAJFyK,WACAC,EAGE1K,EAHF0K,YACAC,EAEE3K,EAFF2K,UACAC,EACE5K,EADF4K,WAGF,GAAIN,EAAa,CACf,IAAMO,EACJf,GAAsBO,EAAME,IAC5BT,GAAsBO,EAAMG,GAE9B,GAAIK,EACF,OAAO1C,GAAkB,CAAElG,GAAI4I,EAAY5I,GAAI3E,KAAM+M,IAIzD,IAAMS,EACJZ,GAAcG,EAAMI,IAAeP,GAAcG,EAAMK,GAEzD,GAAII,EACF,OAAOtC,GAAgBsC,GAGzB,IAAMC,EACJZ,GAAaE,EAAMM,IAAcR,GAAaE,EAAMO,GAEtD,GAAIG,EACF,OAAOtC,GAAesC,GAKxB,IAzH+BzC,EAgFd0C,EAyCXC,EAAaC,iBAAcb,EAAM,CAAEc,UAAW,QAEpD,GACEF,GACsB,IAAtBA,EAAWrV,QACXqV,EAAW,GAAGrC,KAAKhT,SAAWyU,EAAKzU,OACnC,CACA,IAAMwV,GAhDSJ,EAgDSX,EA/C1BzQ,KAAOA,KAASA,KAAS,OAAQoR,IAAQpR,KAAQA,KAAjDA,CAAyDyR,KAiDvD,GAAID,EAAO,CAAC,IACDxK,EADA,aACSqK,EADT,MACArK,IAET,OArI2B0H,EAqID1H,EArIU,CACxCwH,KAAM,QACNC,IAAI,IAAD,OAmIoB+C,EAnIpB,KACH9C,MACAC,OAAQ,OAqIR,IAAM+C,EAAejB,EAAKkB,MAAM5D,IAEhC,GAAI2D,EAAc,CAAC,IAAD,eACOA,EADP,GACT1C,EADS,KACHC,EADG,KAGhB,MAAO,CACLF,GAAcC,EAAMC,EAAO2C,eAC3BnB,EAAKzU,OAASgT,EAAKhT,QAIvB,IAzIyB4R,EAyInBiE,EAAYpB,EAAKkB,MAAM3D,IAE7B,OAAI6D,GAAaA,EAAU,GAAG7V,SAAWyU,EAAKzU,OA3IX,CACnCwS,KAAM,OACNQ,KAFyBpB,EA4IL6C,EAzIpB7C,KAAMD,GAAcC,IA4Ib,MAiFMkE,GA9EO,SAACjT,EAASkT,EAAgB3L,GAI9C,IAAM4L,OAAkClI,IAAnBiI,GAAmD,OAAnBA,EAC/CE,EACJF,GAAkBlW,OAAOqW,KAAKH,GAAgB/V,OAAS,EACnDmW,EAA2BhE,GAAwB4D,GAEnD1B,EAAS,GACX+B,EAAS,EAETC,EAAc,EAGlB,EAAG,CACD,IAAMC,EAAazT,EAAQ0T,QAAQ,IAAKH,EAAS,GAK3CI,EAHqB,IAAXJ,EAGaA,EAASA,EAAS,EACzCK,GAHwB,IAAhBH,EAGWzT,EAAQ7C,OAASsW,EAEpC7B,EAAO5R,EAAQ6T,UAAUF,EAAYC,GAE3C,GAAIhC,EAAM,CACR,IAAIkC,EAAS,KAGb,GAAIV,EAAmB,CACrB,IAAMW,EAAgB5S,KACpBA,KAAS,QAASwS,GAClBL,GAGES,IACFD,EAASpE,GAAkB,CAAElG,GAAIuK,EAAcvK,GAAI3E,KAAM+M,KAS7D,GAJKkC,IACHA,EAASnC,GAAWC,EAAMrK,EAAQ,CAAEsK,YAAasB,KAG/CW,EAAQ,CAEV,GAAIN,IAAgBG,EAAY,CAC9B,IAAMK,EAAahU,EAAQ6T,UAAUL,EAAaG,GAClDnC,EAAOyC,KAAKD,GAKd,GAAI7Q,MAAMC,QAAQ0Q,GAAS,CAAC,IAAD,EACUA,EADV,oBAClBI,EADkB,KACJC,EADI,KAEzB3C,EAAOyC,KAAKC,GACZV,EAAcI,EAAWO,OAEzB3C,EAAOyC,KAAKH,GACZN,EAAcI,GAMpB,IAAoB,IAAhBH,GAAqBD,IAAgBI,EAAU,CACjD,IAAMQ,EAAYpU,EAAQ6T,UAAUL,EAAaI,GACjDpC,EAAOyC,KAAKG,GAGdb,EAASE,SACU,IAAZF,GAET,OAAO/B,GClRI6C,GAAyBlT,IAAS,GAAI,CAAC,OAAQ,mBAE/CmT,GAA2B,SAACzJ,GAAD,OACtC1J,IACE,KACA,CAAC,OAAQ,WAAYkT,GAAuBxJ,GAAQ,YAAa,UACjEA,IAGS0J,GAAsB,SAAC1J,GAAD,OAAWA,EAAM2J,KAAKzI,aAE5C0I,GAA+B,SAAC5J,GAAD,OAC1CA,EAAM2J,KAAKvI,aAAatE,UAAYkD,EAAM2J,KAAKvI,aAAarE,SAEjD8M,GAAuB,SAAC7J,GAAD,OAAWA,EAAM2J,KAAKvI,aAAad,OCNjEwJ,GAA+B,SAAChF,GAAD,OAAU,SAAC9E,GAC9C,IAAM/K,EAAUuU,GAAuBxJ,GACjC+J,EACJ/J,EAAMtD,OAAOoI,GAAMzE,OAAOvD,UAAYkD,EAAMtD,OAAOoI,GAAMzE,OAAOtD,QAC5DiN,EACJ1T,KAAO,CAAC,SAAUwO,EAAM,WAAY7P,EAAS,YAAa+K,IAC1D1J,KAAO,CAAC,SAAUwO,EAAM,WAAY7P,EAAS,WAAY+K,GAC3D,OAAO+J,GAAgBC,IAGZC,GAA6BH,GAA6B,QAC1DI,GAA4BJ,GAA6B,OACzDK,GAA+B,SAACnK,GAAD,OAC1CA,EAAMtD,OAAOmH,OAAO/G,UAAYkD,EAAMtD,OAAOmH,OAAO9G,SAOhDqN,GAAuB9T,IAAS,GAAI,CAAC,SAAU,SAAU,UACzD+T,GAA6BC,aACjCF,GACA9T,KAAO,CAAC,OAEJiU,GAA2BD,aAC/BF,GACA9T,KAAO,CAAC,OAGJkU,GAA6B,SAAC1F,GAAD,OACjCxO,IAAS,GAAI,CAAC,SAAUwO,EAAM,SAAU,WAEpC2F,GAA8B,SAAC3F,GAAD,OAAU,SAAC9E,GAAD,OAC5C1J,IACE,GACA,CAAC,SAAUwO,EAAM,WAAY0E,GAAuBxJ,GAAQ,SAC5DA,KAGE0K,GAA2BF,GAA2B,QACtDG,GAA4BF,GAA4B,QAExDG,GAA0BJ,GAA2B,OACrDK,GAA2BJ,GAA4B,OAEhDK,GAAiBR,cA/BQ,SAACtK,GAAD,OACpCmK,GAA6BnK,IAC7BiK,GAA2BjK,IAC3BkK,GAA0BlK,KA8B1BqK,GACAE,GACAG,GACAC,GACAC,GACAC,IACA,SACEE,EACA9D,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAKyD,EAEE,CACL9D,eACAC,aACAC,aACAC,cACAC,YACAC,cAR0B,QAc1B0D,GAAiB,CACrB,kBAAmB,MACnB,cAAmB,KACnB,YAAmB,KACnB,aAAmB,KACnB,aAAmB,KACnB,eAAmB,KACnB,iBAAmB,KACnB,WAAmB,KACnB,WAAmB,KACnB,SAAmB,KACnB,aAAmB,KACnB,WAAmB,KACnB,SAAmB,KACnB,SAAmB,MAGfC,GAA0B,SAAC,GAAD,IAAGtM,EAAH,EAAGA,GAAI3E,EAAP,EAAOA,KAAP,OAC9B6K,GAAkB,CAAElG,KAAI3E,KAAMgR,GAAehR,IAASA,KAE3CkR,GAA0BZ,aACrCQ,IACA,SAACpO,GACC,IAAKA,EAAQ,MAAO,GADV,IAIRuK,EAMEvK,EANFuK,aACAC,EAKExK,EALFwK,WACAC,EAIEzK,EAJFyK,WACAC,EAGE1K,EAHF0K,YACAC,EAEE3K,EAFF2K,UACAC,EACE5K,EADF4K,WAGF,MAAO,CACL,CACE6D,MAAO,2BACP7K,MAAO8G,EAAY5S,IAAI0Q,KAEzB,CACEiG,MAAO,8BACP7K,MAAOgH,EAAW9S,IAAI2Q,MAPnB,oBASF7O,KACDA,KACAA,MAAM,SAACgK,GAAD,MAAY,CAAEA,MAAOhK,KAAMuO,GAAmBvE,OAFnDhK,CAGD4Q,IAZG,CAaL,CACEiE,MAAO,SACP7K,MAAOhK,KAAM2U,GAAyB3U,KAAS,GAAI,IAAK2Q,KAE1D,CACEkE,MAAO,YACP7K,MAAO6G,EAAW3S,IAAI0Q,KAExB,CACEiG,MAAO,eACP7K,MAAO+G,EAAU7S,IAAI2Q,OAEvBiG,QAAO,qBAAG9K,MAAkBhO,OAAS,QC9I9B+Y,GAAuB,SAACrL,GAAD,OAAWA,EAAMsL,OAAOjL,OAAOC,OACtDiL,GAAwB,SAACvL,GAAD,OACnC1J,IACE,GACA,CAAC,SAAU,WAAYkT,GAAuBxJ,GAAQ,SACtDA,IAcSwL,GAAyB,SAACxL,GAAD,OAXD,SAACA,GAAD,OACnCA,EAAMsL,OAAOjL,OAAOvD,UAAYkD,EAAMsL,OAAOjL,OAAOtD,QAWpD0O,CAA6BzL,IATO,SAACA,GACrC,IAAM/K,EAAUuU,GAAuBxJ,GACvC,OACE1J,KAAS,EAAO,CAAC,SAAU,WAAYrB,EAAS,YAAa+K,IAC7D1J,KAAS,EAAO,CAAC,SAAU,WAAYrB,EAAS,WAAY+K,GAKvB0L,CAA8B1L,ICGxD2L,GAZU,SAACL,EAAQM,EAAcC,GAS9C,OAAOvV,KAAOA,KAAWA,MARP,SAAC,GAAqB,IAAD,oBAAnBsC,EAAmB,KAAbkT,EAAa,KAC/BC,EACJzV,KAAS,EAAO,CAACsC,EAAM,WAAYkT,GAAUD,IAC7CvV,KAAS,EAAO,CAACsC,EAAM,WAAYkT,GAAUF,GAE/C,QAAOG,GAnBS,SAAC,GAAD,IAClBZ,EADkB,EAClBA,MACAa,EAFkB,EAElBA,YACcC,EAHI,EAGlBC,aACcC,EAJI,EAIlBC,aACcC,EALI,EAKlBC,aALkB,MAMb,CACLvH,IAAKoG,EACLoB,MAAOP,EACPhH,IAAKiH,EACLhH,OAAO,GAAD,OAAKgH,EAAL,gBAAuBE,EAAvB,gBAAyCE,EAAzC,QASWG,CAAYT,MAGczV,KAASmW,SAA7CnW,CAAuDgV,I,mBCgCjDoB,GAvCiB,SAAC1M,EAAO2M,GACtC,IAAMf,EAAeP,GAAqBrL,GACpC6L,EAAgBN,GAAsBvL,GACtCtD,EAASoO,GAAe9K,GACxBoB,EAAeyI,GAAqB7J,GA6B1C,OAAO2M,EACJnY,KAAI,SAACrB,GAAD,OAAOuF,iBAAMvF,MACjBiY,QA7BoB,SAAC,GAAD,IAAGhT,EAAH,EAAGA,QAAmBY,EAAtB,EAAYC,OAAUD,KAAtB,MACT,YAAZZ,IAA0BgJ,EAAa7M,SAASyE,MA6B/CxE,KA3BuB,SAAC,GAIpB,IAHLO,EAGI,EAHJA,KAGI,iBAFJ6X,OAEI,GAFK3X,EAEL,KAFcE,EAEd,KADM6D,EACN,EADJC,OAAUD,KAEJM,EAAWwC,uBAAY3G,GACvB0X,EAAoBvT,EACtB2C,kCAAuB9G,GACvBA,EACE2X,EAAa5Q,4BAAiBnH,GAEpC,MAAO,CACL+P,KAAMzI,EACNlH,QAAS0X,EACTE,aAAc3E,GAAcyE,EAAmBC,EAAWpQ,OAAQA,GAClE3H,KAAM+X,EACNxB,OAAQK,GAAiBmB,EAAWxB,OAAQM,EAAcC,GAC1D7S,OACA/D,QAASA,EAAQ1B,MAAM,GACvB+F,WACA0T,WAAW,O,6jBC1BjB,I,GAmBIzM,YACF,eACA,gCACA,gCACA,iCARA0M,G,GAAAA,YACAC,G,GAAAA,2BACAC,G,GAAAA,2BACAC,G,GAAAA,2BAQWC,GAAY1N,YAAa,cA8CzB2N,GAAa,SAACrN,GAAD,OAAa,SAACsN,EAAUC,GAAc,IACtDrY,EAAwB8K,EAAxB9K,QAASJ,EAAekL,EAAflL,KAAMiE,EAASiH,EAATjH,KACjBgH,EAAQwN,IAGd,IAFqB3D,GAAqB7J,GAEzBzL,SAASyE,GAA1B,CAEA,IAAM4S,EAAeP,GAAqBrL,GACpC6L,EAAgBN,GAAsBvL,GACtCtD,EAASoO,GAAe9K,GAExB6M,EAAiB,MAClB5M,EADkB,CAErB6E,KAAMzI,EACN0Q,aAAc3E,GAAcjT,EAASJ,EAAK2H,OAAQA,GAClD4O,OAAQK,GAAiB5W,EAAKuW,OAAQM,EAAcC,KAGtD0B,EAASN,GAAY,CAAE3M,MAAO,CAACuM,SA4E3BY,IAAyB,qBAC5BP,IAA6B,SAAClN,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC5B3J,IAAiB0J,EAAjB,eACGC,EAAQhL,QAAU,CACjByY,QAAQ,MAAM/Q,EAAYM,eAJH,eAO5BkQ,IAA6B,SAACnN,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC5B3J,IAAiB0J,EAAjB,eACGC,EAAQhL,QAAU,CACjByY,QAAQ,MAAM/Q,EAAYO,QAAnB,CAA4BoD,MAAOL,EAAQK,cAV3B,eAa5B8M,IAA6B,SAACpN,EAAD,OAAUC,EAAV,EAAUA,QAAV,OAC5B3J,IAAiB0J,EAAjB,eACGC,EAAQhL,QAAU,CACjByY,QAAQ,MAAM/Q,EAAYQ,QAAnB,CAA4BH,MAAOiD,EAAQjD,cAhB3B,IA8BhBkD,GATCC,YAAc,UAAD,eAExB8M,IA9EqB,SAACjN,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC1BK,EAAqBL,EAArBK,MAAO0M,EAAc/M,EAAd+M,UACT/X,EAAUqB,KAAO,CAAC,EAAG,WAAYgK,GACjCqN,EAAYrX,IAAS,GAAI,CAACrB,EAAS,SAAU+K,GAC7C4N,EAAWZ,EAAS,uBAClB1M,GADkB,aACRqN,IADQ,uBAElBA,GAFkB,aAEJrN,IAChBuN,EA1Fc,SAACvN,GACrB,IAAMwN,EAAOxN,EAAMhO,OjB3CiB,IiB4CpC,OAAOwb,EAAO,EAAIxN,EAAM/M,MAAMua,GAAQxN,EAwFfyN,CAAcH,GAE/BI,EAAWJ,EAAStb,OAASub,EAAevb,OAE5C2b,EApFU,SAACC,EAAMC,EAAiBH,GACxC,OAAIA,GACKG,EAAkB,GAAKD,EAEzBA,EAgFQE,CADI9X,KAAS,EAAO,CAACrB,EAAS,UAAW+K,GACnBM,EAAMhO,OAAQ0b,GAE7CK,EAAerB,EAAY,CAAEU,QAAS,CAAEpN,MAAO,KAAS,GAE1D/D,EAAQjG,IAAS,GAAI,CAACrB,EAAS,SAAU+K,GAS7C,OARAM,EAAMzI,SAAQ,SAAC1C,GACb,IAAMsK,EAAcnJ,KAAO,CAAC,OAAQ,eAAgBnB,GAChDsK,IAAgBlD,EAAMhI,SAASkL,KACjClD,EAAK,uBAAOA,GAAP,CAAckD,QAGvBlD,EApGiB,SAACA,GAClB,IAAMuR,EAAOvR,EAAMjK,OjB/CY,IiBgD/B,OAAOwb,EAAO,EAAIvR,EAAMhJ,MAAMua,GAAQvR,EAkG9B+R,CAAW/R,GAEZjG,IAAiB0J,EAAjB,eACJ/K,EADI,MAEAoZ,EAFA,CAGH/N,MAAOuN,EACPtR,QACA0R,gBA+CuB,eAGxBZ,IA7CmB,SAACrN,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAE9BhL,EAEEgL,EAFFhL,QACQsZ,EACNtO,EADFlL,KAAQwZ,aAGJX,EAAW5N,EAAM/K,GAASqL,MAAM9L,KAAI,SAACW,GAAD,OACxCA,EAAQJ,KAAK8J,SAAW0P,GAAiBpZ,EAAQ6X,UAE7C7X,EAFJ,MACSA,EADT,CACkBqZ,WAAW,OAI/B,OAAO,MACFxO,EADL,eAEG/K,EAFH,MAGO+K,EAAM/K,GAHb,CAIIqL,MAAOsN,SA0BgB,IAItBH,IA/Lc,I,6jBClBrB,IAAMgB,GAA6B,WACjC,IACE,OAAOC,KAAKhW,MAAM8F,aAAa1H,SAC/B,SACA,MAAO,KAILwI,GAAY,IAChBqP,gBAAgB,EAChBC,WAAW,EACXC,kBAAmB,GACnBC,kBAAmB,GACnBC,YAAY,GACTN,MAGQO,GAAerP,YAAa,iBAAiB,SAACsP,EAAQvK,GASjE,OARAlG,aAAa0Q,QACX,UACAR,KAAKS,UAAL,MACKV,KADL,eAEGQ,EAASvK,MAIP,CACLuK,SACAvK,YAeWxE,GAPCC,YAAc,eAEzB6O,IAPsB,SAAChP,EAAD,WAAUC,QAAWgP,EAArB,EAAqBA,OAAQvK,EAA7B,EAA6BA,MAA7B,aACtB1E,EADsB,eAExBiP,EAASvK,OAOVpF,ICjCasE,eAAgB,CAC7BzJ,OACAmR,UACA3B,QACAjN,UACAiQ,YACA7V,aCTIsY,GAEAC,YAAgBC,KAUPC,GAFDC,YAAYC,GAAa,GAAIL,I,0BChB9BM,GAAiB,SAAC1P,GAAD,OAAWA,EAAM7F,KAAKoF,QACvCoQ,GAAoB,SAAC3P,GAAD,OAAWA,EAAM7F,KAAKnB,KAAKwG,OAC/CoQ,GAAiB,SAAC5P,GAAD,OAAWA,EAAM7F,KAAKnB,KAAK2F,IAC5CkR,GAA0B,SAAC7P,GAAD,OAAWA,EAAM7F,KAAKnB,KAAKyG,aCCrDqQ,GAAmB,SAAC9P,GAAD,OAC9B1J,IAAS,GAAI,CAAC,WAAYkT,GAAuBxJ,GAAQ,SAAUA,IAExD+P,GAAgB,SAAC/P,GAAD,OAC3B1J,IAAS,GAAI,CAAC,WAAYkT,GAAuBxJ,GAAQ,SAAUA,IAUxDgQ,GAA0B,SAAChQ,GAAD,OACrC1J,KAAS,EAAO,CACd,WACAkT,GAAuBxJ,GACvB,UACA,YAJF1J,CAKG0J,IAEQiQ,GAAiB,SAACjQ,GAAD,OAC5B1J,KAAS,EAAO,CAAC,WAAYkT,GAAuBxJ,GAAQ,UAAWA,IC6D1DkQ,GA3DU,WACvB,IAAM3C,EAAW4C,eAEX5Q,EAAS6Q,aAAYV,IACrB7Q,EAASuR,aAAYR,IACrB3O,EAAiBmP,aAAY5G,IAC7B6G,EAAmBD,aAAY3G,IAE/B6G,EAAuBF,aAAYjG,IACnCoG,EAAqBH,aAAYnG,IACjCuG,EAAoBJ,aAAYlG,IAChCuG,EAAiBL,aAAY5E,IAC7BkF,EAAkBN,aAAYJ,IAC9BW,EAAuBP,aAAYxG,IAEnCgH,EACJ3P,KACC1B,GAAS+Q,MACT/Q,GAASoR,IACVJ,GACAC,GACAC,GACAC,EAEFG,qBAAU,WACRtD,EhBLiC,uCAAM,WAAOA,GAAP,eAAArb,EAAA,6DACzCqb,EAASnL,MADgC,kBLZzCjE,EAAW,oDKY8B,OAIjCmC,EAJiC,OAOvCiN,EAASlL,GAFI,CAAE/B,WALwB,gDASvCiN,EAASjL,GAA6B,CAAEtF,MAAO,KAAE7H,WATV,yDAAN,uDgBMjCoY,EfIgC,uCAAM,WAAOA,GAAP,iBAAArb,EAAA,6DACxCqb,EAASxK,MAD+B,kBNjBxC5E,EAAW,8CMiB6B,OAIhCL,EAJgC,OAKhClE,EAAO,CAAE0G,MAAO+C,GAAqBvF,IAE3CyP,EAASvK,GAA4BpJ,IAPC,gDAStC2T,EAAStK,GAA4B,CAAEjG,MAAO,KAAE7H,WATV,yDAAN,uDeHhCoY,EnBb6B,uCAAM,WAAOA,GAAP,iBAAArb,EAAA,6DACrCqb,EAAS/M,MAD4B,kBAIZsQ,IAJY,OAI7BhT,EAJ6B,OAK7BlE,EAAO,CAAE0G,MAAOQ,GAAYhD,IAElCyP,EAAS9M,GAAyB7G,IAPC,gDASnC2T,EAAS7M,GAAyB,CAAE1D,MAAO,KAAE7H,WATV,yDAAN,yDmBc5B,CAACoY,IAEJsD,qBAAU,WNqBuB,IAAC5b,EMpB5BgM,GACFsM,GNmB8BtY,EMnBDgM,ENmBA,uCAAa,WAAOsM,GAAP,iBAAArb,EAAA,6DAC9Cqb,EAASL,GAA2B,CAAEjY,aADQ,kBAGrB8b,EAAuB9b,GAHF,OAGtC6I,EAHsC,OAItClE,EAAO,CAAE3E,UAASqL,MAAOxC,EAAS6O,UAExCY,EAASJ,GAA2BvT,IANQ,gDAQ5C2T,EAASH,GAA2B,CAAEnY,UAAS+H,MAAO,KAAE7H,WARZ,yDAAb,0DMjB9B,CAACoY,EAAUtM,IAEd4P,qBAAU,WNAqB,IAAC5b,EMC1B2b,GACFrD,GNF4BtY,EMEDgM,ENFa,SAACsM,EAAUC,GACvD,IAAMxN,EAAQwN,IACRb,EAAWrW,IACf,GACA,CAAC,WAAYrB,EAAS,UAAW,SACjC+K,GAEIpG,EAAO,CACX0G,MAAOoM,GAAwB1M,EAAO2M,GACtCK,WAAW,GAGbO,EAASN,GAAYrT,SMRlB,CAAC2T,EAAUtM,EAAgB2P,IAE9BC,qBAAU,WACJhS,IACF0O,EjB9C2B,SAAC1O,GAAD,8CAAY,WAAO0O,GAAP,iBAAArb,EAAA,6DAC3Cqb,EAASvL,IADkC,kBAIlBpD,EAAwBC,GAJN,OAInCf,EAJmC,OAKnClE,EAAO,CAAE0G,MAAOxC,EAASkT,eAE/BzD,EAAStL,GAAyBrI,IAPO,gDASzC2T,EAASrL,GAAyB,CAAElF,MAAO,KAAE7H,WATJ,yDAAZ,sDiB8ClB8b,CAAkBpS,IAC3B0O,ElBrB2B,SAAC1O,GAAD,8CAAY,WAAO0O,GAAP,eAAArb,EAAA,6DAC3Cqb,EAAS5L,MADkC,kBAGlBuP,EAAqBrS,GAHH,OAGnCf,EAHmC,OAKzCyP,EAAS3L,GAAyB,CAAEtB,MAAOwB,GAAkBhE,MALpB,gDAOzCyP,EAAS1L,GAAyB,CAAE7E,MAAO,KAAE7H,WAPJ,yDAAZ,sDkBqBlBkK,CAAkBR,OAE5B,CAAC0O,EAAU1O,IAEdgS,qBAAU,WhBhB0B,IAAC9R,EAAW9J,EgBkB1CgM,GAAkBoP,IACpB9C,GhBnBiCxO,EgBmBDsR,EhBnBYpb,EgBmBMgM,EhBnBlB,uCAAwB,WAC5DsM,GAD4D,iBAAArb,EAAA,6DAG5Dqb,EAAShL,GAA8B,CAAEtN,aAHmB,kBAMnCkc,EAA0BpS,GANS,OAMpDjB,EANoD,OAOpDlE,EAAO,CACX3E,UACAqL,MAAOoC,GAAuB5E,IAGhCyP,EAAS/K,GAA8B5I,IAZmB,gDAc1D2T,EAAS9K,GAA8B,CAAExN,UAAS+H,MAAO,KAAE7H,WAdD,yDAAxB,wDgBoBhCoY,EfV+B,SAACxO,EAAW9J,GAAZ,8CAAwB,WAC3DsY,GAD2D,iBAAArb,EAAA,6DAG3Dqb,EAASrK,GAA6B,CAAEjO,aAHmB,kBAMlCmc,EAAyBrS,GANS,OAMnDjB,EANmD,OAOnDlE,EAAO,CACX3E,UACAqL,MAAOmD,GAAsB3F,IAG/ByP,EAASpK,GAA6BvJ,IAZmB,gDAczD2T,EAASnK,GAA6B,CAAEnO,UAAS+H,MAAO,KAAE7H,WAdD,yDAAxB,sDeUtB6J,CAAsBqR,EAAkBpP,IACjDsM,EnB3B4B,SAACxO,EAAW9J,GAAZ,8CAAwB,WAAOsY,GAAP,iBAAArb,EAAA,6DACxDqb,EAAS5M,GAA0B,CAAE1L,aADmB,kBAI/Boc,EAAsBtS,GAJS,OAIhDjB,EAJgD,OAKhDlE,EAAO,CACX3E,UACAqL,MAAOQ,GAAYhD,IAGrByP,EAAS3M,GAA0BhH,IAVmB,gDAYtD2T,EAAS1M,GAA0B,CAAE5L,UAAS+H,MAAO,KAAE7H,WAZD,yDAAxB,sDmB2BnBiK,CAAmBiR,EAAkBpP,OAE/C,CAACsM,EAAUtM,EAAgBoP,KCrEjBiB,GAdS,WAAO,IAAD,EACJC,mBAASC,OAAOC,SAASrV,MADrB,oBACrBA,EADqB,KACfsV,EADe,KAW5B,OARAb,qBAAU,WACR,IAAMc,EAAmB,kBAAMD,EAAQF,OAAOC,SAASrV,OAIvD,OAFAoV,OAAOI,iBAAiB,aAAcD,GAE/B,kBAAMH,OAAOK,oBAAoB,aAAcF,MACrD,IAEIvV,GCYM0V,GAnBW,WACxB,IAAMvE,EAAW4C,eACX/T,EAAOkV,KAEbT,qBAAU,WACR,GAAIzU,GAAQA,EAAK9J,OAAS,EAAG,CAC3B,IAAM2C,EAAUmH,EAAK7I,MAAM,GAE3Bga,EAASlM,GAAkBpM,IAE3BuJ,aAAa0Q,QAAQ,cAAeja,GAEpC8c,SAAS5G,MAAQlW,EAAO,WAChBA,EADgB,cACHtB,aADG,KAEpBA,gBAEL,CAAC4Z,EAAUnR,K,oBCVD4V,OAVf,SAAqBtN,GACnB,IAAMuN,EAAMC,mBAMZ,OAJArB,qBAAU,WACRoB,EAAIE,QAAUzN,IACb,CAACA,IAEGuN,EAAIE,S,6jBCPb,IAmBeC,GAnBU,SAACjd,EAASJ,EAAME,EAAS+D,EAAM6F,GACtD,GAAuB,kBAAZ1J,EAAsB,MAAO,GAExC,IAAMmE,EAAWnE,EAAQ/B,WAAW,QAEpC,MAAO,CACL+B,QAASmE,EAAWnE,EAAQ5B,MAAM,GAAK4B,EACvCJ,KAAK,MACAA,EADD,CAEF4J,GAAI0T,OACJC,WAAW,IAAIC,MAAOC,UACtB3T,WAEF7F,OACA/D,UACAqE,a,6jBCMJ,IAyGemZ,GAzGS,SAAC7Z,EAAMuB,GAC7B,IAAMoT,EAAW4C,eAEXlP,EAAiBmP,aAAY5G,IAC7BkJ,EAAcV,GAAY/Q,GAC1BpC,EAASuR,aAAYR,IACrBrQ,EAAS6Q,aAAYV,IACrBiD,EAAYT,iBAAO,MAEzBrB,qBAAU,WACR,IAAK5P,EAAgB,OAAO,aAE5B,IAAM2R,EAAiB,kBAAMrF,EAASjM,IAAe,KAC/CuR,EAAmB,kBAAMtF,EAASjM,IAAe,KACjDwR,EAAwB,SAAClZ,GAAD,OAC5B2T,EAAShM,GAAsB3H,KAC3BmZ,EAAkB,SAACnZ,GAAD,OAAU2T,EAAS/L,GAAgB5H,KACrDoZ,EAAkB,SAACpZ,GAAD,OAAU2T,EAAS9L,GAAgB7H,KACrDqZ,EAAgB,SAACrZ,GAAD,OAAU2T,EAASD,GAAW1T,KAC9CsZ,EAAe,SAACtZ,GACpB,IXsE2BzE,EWtErB0X,EAAiB,MAAQjT,EAAR,CAAc7E,KAAK,MAAM6E,EAAK7E,KAAZ,CAAkB4J,GAAI0T,WAC/D9E,GXqE2BpY,EWrED0X,EXqEa,SAACU,GAC5C,IAAMV,EAAiB,MAClB1X,EADkB,CAErB2P,KAAMzI,IAGRkR,EAASN,GAAY,CAAE3M,MAAO,CAACuM,UWzEvBsG,EAAmB,SAACvZ,GAAD,OAAU2T,GX4EFpY,EW5EgCyE,EX4EpB,SAAC2T,GAChD,IAAMV,EAAiB,MAClB1X,EADkB,CAErB2P,KAAMzI,IAGRkR,EAASN,GAAY,CAAE3M,MAAO,CAACuM,SANG,IAAC1X,GW3E3Bie,EAAkB,SAACxZ,GAClBA,EAAK7E,KAAKwZ,cACfhB,EAASF,GAAUzT,KA0BrB,OAvBK+Y,EAAUR,QAQJO,IAAgBzR,IACzB0R,EAAUR,QAAQ1Z,KAAKia,GACvBC,EAAUR,QAAQ3Z,KAAKyI,IATvB,sBAAC,sBAAA/O,EAAA,6DACCygB,EAAUR,QAAU,IAAIvW,UAAO2D,EAAS,CAAE3G,OAAMuB,QAAS,IAD1D,SAGOwY,EAAUR,QAAQhb,UAHzB,OAKCwb,EAAUR,QAAQ3Z,KAAKyI,GALxB,0CAAD,GAYF0R,EAAUR,QAAQ3Y,GAAG,WAAYoZ,GACjCD,EAAUR,QAAQ3Y,GAAG,aAAcqZ,GACnCF,EAAUR,QAAQ3Y,GAAG,kBAAmBsZ,GACxCH,EAAUR,QAAQ3Y,GAAG,YAAauZ,GAClCJ,EAAUR,QAAQ3Y,GAAG,YAAawZ,GAClCL,EAAUR,QAAQ3Y,GAAG,UAAWyZ,GAChCN,EAAUR,QAAQ3Y,GAAG,SAAU0Z,GAC/BP,EAAUR,QAAQ3Y,GAAG,aAAc2Z,GACnCR,EAAUR,QAAQ3Y,GAAG,YAAa4Z,GAE3B,WACLT,EAAUR,QAAQ/X,IAAI,WAAYwY,GAClCD,EAAUR,QAAQ/X,IAAI,aAAcyY,GACpCF,EAAUR,QAAQ/X,IAAI,kBAAmB0Y,GACzCH,EAAUR,QAAQ/X,IAAI,YAAa2Y,GACnCJ,EAAUR,QAAQ/X,IAAI,YAAa4Y,GACnCL,EAAUR,QAAQ/X,IAAI,UAAW6Y,GACjCN,EAAUR,QAAQ/X,IAAI,SAAU8Y,GAChCP,EAAUR,QAAQ/X,IAAI,aAAc+Y,GACpCR,EAAUR,QAAQ/X,IAAI,YAAagZ,MAEpC,CAAC7F,EAAU3U,EAAMuB,EAAM8G,EAAgByR,EAAanT,IAuCvD,OAAO8T,mBArCQ,iBAAO,CACpBnb,IADoB,SAChBjD,EAASE,GAKX,SAAS4d,EAAgBnZ,GACvB,GAAIA,EAAK3E,UAAYA,EAAS,CAC5B,IAAM9B,EAAIif,GAAiBjd,EAASyE,EAAK7E,KAAME,EAAS2D,EAAMiG,GAC9D0O,EAASD,GAAWna,IAEpBmgB,KAIJ,SAASJ,EAAatZ,GAElBA,EAAK3E,UAAYA,GACjBmI,EAAoB7I,SAASqF,EAAK7E,KAAKwe,QAGvCD,IAIJ,SAASA,IACPX,EAAUR,QAAQ/X,IAAI,SAAU8Y,GAChCP,EAAUR,QAAQ/X,IAAI,YAAa2Y,GAzBhCJ,EAAUR,UAEfQ,EAAUR,QAAQja,IAAIjD,EAASE,GA0B/Bwd,EAAUR,QAAQ3Y,GAAG,SAAU0Z,GAC/BP,EAAUR,QAAQ3Y,GAAG,YAAauZ,GAElC1Y,YAAW,kBAAMiZ,MAAmB,UAIjB,CAACX,EAAWpF,EAAU3U,EAAMiG,KC5GtC2U,GAfO,SAAClO,GAAD,OACpBA,EACGnR,MAAM,KACNK,KAAI,SAACuS,GACJ,GAAgB,MAAZA,EAAK,IAAwC,MAA1BA,EAAKA,EAAKzU,OAAS,GACxC,OAAOyU,EAGT,IAAMnO,EAAOmO,EAAKxT,MAAM,GAAI,GACtBuU,EAAQC,GAASnP,GAEvB,OAAOkP,GAASA,EAAMJ,KAAOI,EAAMJ,KAAOX,KAE3CvO,KAAK,M,yPCbV,IAeeib,GAfK,SAACC,GAAkB,IAAD,EACfnC,mBAASmC,GADM,oBAC7B1T,EAD6B,KACtB0G,EADsB,KAYpC,MAAO,CAAC1G,EAVS2T,uBACf,SAACC,GACClN,GAAI,SAACmN,GAAD,O,2VAAA,IACCA,EADD,GAEED,aAAiBE,SAAWF,EAAMC,GAAaD,QAGvD,CAAClN,MCXQqN,GAAkB,SAAC/T,GAAD,MAAW,CACxC,CACEmL,MAAO,iBACP7K,MAAO,CACL,CACEwE,KAAM,SACNnG,GAAI,kBACJ/F,KAAM,iBACNuS,MAAO,kBACPa,YAAa,GACbtH,MAAO1E,EAAMlJ,QAAQ6X,gBAEvB,CACE7J,KAAM,SACNnG,GAAI,aACJ/F,KAAM,YACNuS,MAAO,aACPa,YAAa,GACbtH,MAAO1E,EAAMlJ,QAAQ8X,WAEvB,CACE9J,KAAM,SACNnG,GAAI,cACJ/F,KAAM,aACNuS,MAAO,cACPa,YAAa,GACbtH,MAAO1E,EAAMlJ,QAAQiY,gBAsBhBiF,GAA2B,SAAChU,GAAD,OAAWA,EAAMlJ,QAAQ6X,gBACpDsF,GAAsB,SAACjU,GAAD,OAAWA,EAAMlJ,QAAQ8X,WAC/CsF,GAAuB,SAAClU,GAAD,OAAWA,EAAMlJ,QAAQiY,YCxB9CoF,GA1BY,SAACC,EAAW7X,EAAO8X,GAAgC,IAAf7X,EAAc,uDAAN,EAC/DmK,EAAS,GACT2N,EAAiBF,EAAUlM,cAC3BqM,EAAuBF,EAAgBnM,cAEzCqM,EAAqBnhB,WAAWkhB,IAClC3N,EAAOyC,KAAKiL,GAN6D,2BAU3E,YAAmB9X,EAAnB,+CAA0B,CAAC,IAAhB3D,EAAe,QACxB,GAAI+N,EAAOrU,SAAWkK,EAAO,OAAOmK,EAEpC,IAAM6N,EAAY5b,EAAKsP,cAGnBsM,IAAcD,KAEK,KAAnBD,GAAyBE,EAAUphB,WAAWkhB,KAChD3N,EAAOyC,KAAKxQ,KAnB2D,kFAuB3E,OAAO+N,GChBH8N,GAAc,SAAC9N,EAAQnD,EAAM4Q,EAAW5X,GAC5C,cAAoBrK,OAAOsU,OAAOjD,GAAlC,eAAyC,CAApC,IAAMlD,EAAK,KAAyB,uBACvC,YAAoBA,EAApB,+CAA2B,CAAC,IAAjBoU,EAAgB,QACzB,GAAI/N,EAAOrU,SAAWkK,EAAO,OAAO,EAEhCkY,EAAM1a,KAAKkO,cAAc3T,SAAS6f,IACpCzN,EAAOyC,KAAKvE,GAAkB6P,KALK,mFAUzC,OAAO,GAGHC,GAAY,SAAChO,EAAQrG,EAAO8T,EAAW5X,GAAW,IAAD,uBACrD,YAAoB8D,EAApB,+CAA2B,CAAC,IAAjBoU,EAAgB,QACzB,GAAI/N,EAAOrU,SAAWkK,EAAO,OAAO,EAEhCkY,EAAM1a,KAAKkO,cAAc3T,SAAS6f,IACpCzN,EAAOyC,KAAKlE,GAAgBwP,KALqB,kFASrD,OAAO,GAGHE,GAAW,SAACjO,EAAQrG,EAAO8T,EAAW5X,GAAW,IAAD,uBACpD,YAAoB8D,EAApB,+CAA2B,CAAC,IAAjBoU,EAAgB,QACzB,GAAI/N,EAAOrU,SAAWkK,EAAO,OAAO,EAEhCkY,EAAM9b,KAAKsP,cAAc3T,SAAS6f,IACpCzN,EAAOyC,KAAKjE,GAAeuP,KALqB,kFASpD,OAAO,GA8BMG,GA3Ba,SAACT,EAAW1X,GAAwB,IAAhBF,EAAe,uDAAP,GACtD,IAAKE,EAAQ,MAAO,GAEpB,IAAMiK,EAAS,GAEbM,EAMEvK,EANFuK,aACAC,EAKExK,EALFwK,WACAC,EAIEzK,EAJFyK,WACAC,EAGE1K,EAHF0K,YACAC,EAEE3K,EAFF2K,UACAC,EACE5K,EADF4K,WAGIgN,EAAiBF,EAAUlM,cAI/ByM,GAAUhO,EAAQS,EAAakN,EAAgB9X,IAC/CoY,GAASjO,EAAQW,EAAYgN,EAAgB9X,IAC7CiY,GAAY9N,EAAQO,EAAYoN,EAAgB9X,IAChDiY,GAAY9N,EAAQM,EAAcqN,EAAgB9X,IAClDmY,GAAUhO,EAAQQ,EAAYmN,EAAgB9X,IAC9CoY,GAASjO,EAAQU,EAAWiN,EAAgB9X,GAE9C,OAAOmK,G,SCrET,SAASmO,KAA2Q,OAA9PA,GAAW3iB,OAAOC,QAAU,SAAUmT,GAAU,IAAK,IAAI3S,EAAI,EAAGA,EAAIP,UAAUC,OAAQM,IAAK,CAAE,IAAImiB,EAAS1iB,UAAUO,GAAI,IAAK,IAAI4H,KAAOua,EAAc5iB,OAAOI,UAAUC,eAAeC,KAAKsiB,EAAQva,KAAQ+K,EAAO/K,GAAOua,EAAOva,IAAY,OAAO+K,IAA2B7S,MAAMC,KAAMN,WAEhT,SAAS2iB,GAAyBD,EAAQE,GAAY,GAAc,MAAVF,EAAgB,MAAO,GAAI,IAAkEva,EAAK5H,EAAnE2S,EAEzF,SAAuCwP,EAAQE,GAAY,GAAc,MAAVF,EAAgB,MAAO,GAAI,IAA2Dva,EAAK5H,EAA5D2S,EAAS,GAAQ2P,EAAa/iB,OAAOqW,KAAKuM,GAAqB,IAAKniB,EAAI,EAAGA,EAAIsiB,EAAW5iB,OAAQM,IAAO4H,EAAM0a,EAAWtiB,GAAQqiB,EAASpM,QAAQrO,IAAQ,IAAa+K,EAAO/K,GAAOua,EAAOva,IAAQ,OAAO+K,EAFxM4P,CAA8BJ,EAAQE,GAAuB,GAAI9iB,OAAOijB,sBAAuB,CAAE,IAAIC,EAAmBljB,OAAOijB,sBAAsBL,GAAS,IAAKniB,EAAI,EAAGA,EAAIyiB,EAAiB/iB,OAAQM,IAAO4H,EAAM6a,EAAiBziB,GAAQqiB,EAASpM,QAAQrO,IAAQ,GAAkBrI,OAAOI,UAAU+iB,qBAAqB7iB,KAAKsiB,EAAQva,KAAgB+K,EAAO/K,GAAOua,EAAOva,IAAU,OAAO+K,EAMne,IAAI,GAEJ,IAAMgQ,cAAc,OAAQ,CAC1BC,KAAM,eACN9hB,EAAG,mGAGD,GAAW,SAAkB+hB,GAC/B,IAAIC,EAASD,EAAKC,OACdvK,EAAQsK,EAAKtK,MACbwK,EAAQX,GAAyBS,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAOT,GAAS,CACzCc,QAAS,YACT3D,IAAKyD,GACJC,GAAQxK,EAAQ,IAAMoK,cAAc,QAAS,KAAMpK,GAAS,KAAM,KAGnE0K,GAAa,IAAMC,YAAW,SAAUH,EAAO1D,GACjD,OAAO,IAAMsD,cAAc,GAAUT,GAAS,CAC5CY,OAAQzD,GACP0D,OAEU,I,4tBC5Bf,IAAMI,GAAQ,CACZC,MAAOC,aAAF,MAILC,OAAQD,aAAF,OAOFE,GAAaC,KAAOC,OAAOC,MAAM,CAAExR,KAAM,UAA5BsR,CAAH,MAaZ,SAACriB,GAAD,OAAOgiB,GAAMhiB,EAAEwiB,SAgBnBJ,GAAWK,aAAe,CACxBD,KAAM,UAGRJ,GAAWM,UAAY,CACrBF,KAAM9Q,KAAGE,MAAMxT,OAAOqW,KAAKuN,MAGdI,U,+gBC7Cf,IAAMO,GAAgBN,KAAOO,IAAV,MASbC,GAAcR,aAAOD,IAAYG,MAAM,CAAEC,KAAM,SAAjCH,CAAH,MAKXS,GAAYT,aAAOU,GAAPV,CAAH,MAMTW,GAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,OAChB,kBAACP,GAAD,KACE,kBAACE,GAAD,CAAaM,QAASD,GACpB,kBAACJ,GAAD,OAEDG,IAILD,GAAUP,aAAe,GAOVO,U,kSCxCf,IAgBeI,GAhBGf,aAAOgB,MAAiBd,MAAM,CAC9Ce,gCAAgC,GADhBjB,CAAH,M,88BCGf,IAAMkB,GAAkBlB,KAAOO,IAAV,MAKfY,GAAanB,KAAOO,IAAV,MAGVa,GAAWpB,KAAOO,IAAV,MAURc,GAAiBrB,KAAOO,IAAV,MAMde,GAAgBtB,KAAOO,IAAV,MACbgB,GAAQvB,KAAOwB,IAAV,MAYLC,GAAc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAChCC,EAAiBrE,uBACrB,WAAmBnZ,GAAnB,IAAG2Q,EAAH,EAAGA,MAAO7K,EAAV,EAAUA,MAAV,OACE,kBAACkX,GAAD,CAAUhd,IAAKA,KACV2Q,GAAS,kBAACsM,GAAD,KAAiBtM,GAC7B,kBAACuM,GAAD,KACGpX,EAAM9L,KAAI,gBAAGuQ,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAAb,OACT,kBAAC0S,GAAD,CACEnd,IAAKuK,EACLA,IAAKA,EACLC,IAAKA,EACLC,OAAQA,EACRiS,QAAS,kBAAMa,EAAahT,aAMtC,CAACgT,IAGH,OACE,kBAACT,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KAAYO,EAAgBtjB,IAAIwjB,OAMxCH,GAAYrB,aAAe,CACzBsB,gBAAiB,IAQJD,UClFf,SAAS,KAA2Q,OAA9P,GAAW1lB,OAAOC,QAAU,SAAUmT,GAAU,IAAK,IAAI3S,EAAI,EAAGA,EAAIP,UAAUC,OAAQM,IAAK,CAAE,IAAImiB,EAAS1iB,UAAUO,GAAI,IAAK,IAAI4H,KAAOua,EAAc5iB,OAAOI,UAAUC,eAAeC,KAAKsiB,EAAQva,KAAQ+K,EAAO/K,GAAOua,EAAOva,IAAY,OAAO+K,IAA2B7S,MAAMC,KAAMN,WAEhT,SAAS,GAAyB0iB,EAAQE,GAAY,GAAc,MAAVF,EAAgB,MAAO,GAAI,IAAkEva,EAAK5H,EAAnE2S,EAEzF,SAAuCwP,EAAQE,GAAY,GAAc,MAAVF,EAAgB,MAAO,GAAI,IAA2Dva,EAAK5H,EAA5D2S,EAAS,GAAQ2P,EAAa/iB,OAAOqW,KAAKuM,GAAqB,IAAKniB,EAAI,EAAGA,EAAIsiB,EAAW5iB,OAAQM,IAAO4H,EAAM0a,EAAWtiB,GAAQqiB,EAASpM,QAAQrO,IAAQ,IAAa+K,EAAO/K,GAAOua,EAAOva,IAAQ,OAAO+K,EAFxM,CAA8BwP,EAAQE,GAAuB,GAAI9iB,OAAOijB,sBAAuB,CAAE,IAAIC,EAAmBljB,OAAOijB,sBAAsBL,GAAS,IAAKniB,EAAI,EAAGA,EAAIyiB,EAAiB/iB,OAAQM,IAAO4H,EAAM6a,EAAiBziB,GAAQqiB,EAASpM,QAAQrO,IAAQ,GAAkBrI,OAAOI,UAAU+iB,qBAAqB7iB,KAAKsiB,EAAQva,KAAgB+K,EAAO/K,GAAOua,EAAOva,IAAU,OAAO+K,EAMne,IAAI,GAEJ,IAAMgQ,cAAc,IAAK,CACvBC,KAAM,gBACL,IAAMD,cAAc,OAAQ,CAC7B7hB,EAAG,iGACD,IAAM6hB,cAAc,OAAQ,CAC9B0C,SAAU,UACVvkB,EAAG,sEACHwkB,SAAU,aAGR,GAAgB,SAAuBzC,GACzC,IAAIC,EAASD,EAAKC,OACdvK,EAAQsK,EAAKtK,MACbwK,EAAQ,GAAyBF,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAO,GAAS,CACzCK,QAAS,YACT3D,IAAKyD,GACJC,GAAQxK,EAAQ,IAAMoK,cAAc,QAAS,KAAMpK,GAAS,KAAM,KAGnE,GAAa,IAAM2K,YAAW,SAAUH,EAAO1D,GACjD,OAAO,IAAMsD,cAAc,GAAe,GAAS,CACjDG,OAAQzD,GACP0D,OAEU,I,uvGCrBf,IAAMwC,GAAgB/B,KAAOO,IAAV,MAUbyB,GAAiBhC,KAAOO,IAAV,MAGd0B,GAAcjC,KAAOO,IAAV,MAqBX2B,GAAiBlC,KAAOO,IAAV,MASE,SAAC5iB,GAAD,OAClBA,EAAEwkB,SAAW,4BAA8B,iBAGzCC,GAAkBpC,KAAOwB,IAAV,MAMfa,GAAgBrC,KAAOO,IAAV,MAGb+B,GAAkBtC,KAAOO,IAAV,MACjB,SAAC5iB,GAAD,OACAA,EAAE4kB,eACF1C,aADA,KAaQwC,OAONG,GAAcxC,KAAOO,IAAV,MAWXkC,GAAWzC,KAAO0C,SAAV,MA+BRC,GAAe3C,aAAOD,GAAPC,CAAH,MAKZ4C,GAAiB5C,aAAO6C,GAAP7C,CAAH,MAMd8C,GAAYC,IAAMrD,YACtB,WAYEsD,GACI,IAXF9T,EAWC,EAXDA,KACAwS,EAUC,EAVDA,gBACAuB,EASC,EATDA,YACAC,EAQC,EARDA,WACAvB,EAOC,EAPDA,aACAwB,EAMC,EANDA,SACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,OAIIC,EAAezH,iBAAO,MADzB,EAEqDX,oBAAS,GAF9D,oBAEIqI,EAFJ,KAE0BC,EAF1B,KAIGC,EAAyB,kBAAMD,GAAwB,IAE7DE,aAAkBJ,EAAcG,GA8ChC,OACE,kBAAC3B,GAAD,CAAelG,IAAK0H,GAClB,kBAACvB,GAAD,KACGiB,EAAYd,UA9CO,SAAC,GAAkC,IAAhCzT,EAA+B,EAA/BA,KAAMxE,EAAyB,EAAzBA,MAAO0Z,EAAkB,EAAlBA,YAcxC,OACE,kBAAC3B,GAAD,KACG/X,EAAMhO,OACHgO,EAAM9L,IAAa,UAATsQ,EAhBC,SAAClM,EAAMqhB,GAAP,OACjB,kBAAC3B,GAAD,CAAgB9d,IAAK5B,EAAM2f,SAAU0B,IAAUD,GAC5CphB,IAIe,SAAC,EAAsBqhB,GAAvB,IAAGjV,EAAH,EAAGA,IAAKC,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,IAAhB,OAClB,kBAACuT,GAAD,CAAgB9d,IAAKuK,EAAKwT,SAAU0B,IAAUD,GAC5C,kBAACxB,GAAD,CAAiBxT,IAAKA,EAAKC,OAAQA,EAAQF,IAAKA,IAC/CA,KAQG,cA4BqBmV,CAAkBb,GAC3C,kBAACX,GAAD,CAAiBC,cAAeU,EAAYd,UAC1C,kBAACE,GAAD,KACE,kBAACI,GAAD,CACE5G,IAAKmH,EACL1U,MAAOY,EACP6U,YAAY,iBACZC,UAAW,IACXC,SAAUf,EACVC,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,OAAQA,MAEP5B,EAAgBxlB,QAnC3B,kBAACymB,GAAD,CACE7B,QAAS,kBAAM2C,GAAyBD,KAExC,kBAACZ,GAAD,SAmCGY,GA9BL,kBAAChB,GAAD,KACE,kBAAC,GAAD,CAAW3B,QAAS6C,GAClB,kBAAC,GAAD,CACEhC,gBAAiBA,EACjBC,aAAcA,WAiC1BmB,GAAU1C,aAAe,CACvBsB,gBAAiB,GACjBwB,YAAY,GAwBCH,WAAMmB,KAAKpB,ICzQ1B,SAAS,KAA2Q,OAA9P,GAAW/mB,OAAOC,QAAU,SAAUmT,GAAU,IAAK,IAAI3S,EAAI,EAAGA,EAAIP,UAAUC,OAAQM,IAAK,CAAE,IAAImiB,EAAS1iB,UAAUO,GAAI,IAAK,IAAI4H,KAAOua,EAAc5iB,OAAOI,UAAUC,eAAeC,KAAKsiB,EAAQva,KAAQ+K,EAAO/K,GAAOua,EAAOva,IAAY,OAAO+K,IAA2B7S,MAAMC,KAAMN,WAEhT,SAAS,GAAyB0iB,EAAQE,GAAY,GAAc,MAAVF,EAAgB,MAAO,GAAI,IAAkEva,EAAK5H,EAAnE2S,EAEzF,SAAuCwP,EAAQE,GAAY,GAAc,MAAVF,EAAgB,MAAO,GAAI,IAA2Dva,EAAK5H,EAA5D2S,EAAS,GAAQ2P,EAAa/iB,OAAOqW,KAAKuM,GAAqB,IAAKniB,EAAI,EAAGA,EAAIsiB,EAAW5iB,OAAQM,IAAO4H,EAAM0a,EAAWtiB,GAAQqiB,EAASpM,QAAQrO,IAAQ,IAAa+K,EAAO/K,GAAOua,EAAOva,IAAQ,OAAO+K,EAFxM,CAA8BwP,EAAQE,GAAuB,GAAI9iB,OAAOijB,sBAAuB,CAAE,IAAIC,EAAmBljB,OAAOijB,sBAAsBL,GAAS,IAAKniB,EAAI,EAAGA,EAAIyiB,EAAiB/iB,OAAQM,IAAO4H,EAAM6a,EAAiBziB,GAAQqiB,EAASpM,QAAQrO,IAAQ,GAAkBrI,OAAOI,UAAU+iB,qBAAqB7iB,KAAKsiB,EAAQva,KAAgB+K,EAAO/K,GAAOua,EAAOva,IAAU,OAAO+K,EAMne,IAAI,GAEJ,IAAMgQ,cAAc,IAAK,CACvBC,KAAM,gBACL,IAAMD,cAAc,OAAQ,CAC7B7hB,EAAG,mCACD,IAAM6hB,cAAc,OAAQ,CAC9B0C,SAAU,UACVvkB,EAAG,wlBACHwkB,SAAU,aAGR,GAAW,SAAkBzC,GAC/B,IAAIC,EAASD,EAAKC,OACdvK,EAAQsK,EAAKtK,MACbwK,EAAQ,GAAyBF,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAO,GAAS,CACzCK,QAAS,YACT3D,IAAKyD,GACJC,GAAQxK,EAAQ,IAAMoK,cAAc,QAAS,KAAMpK,GAAS,KAAM,KAGnE,GAAa,IAAM2K,YAAW,SAAUH,EAAO1D,GACjD,OAAO,IAAMsD,cAAc,GAAU,GAAS,CAC5CG,OAAQzD,GACP0D,OAEU,I,82CChCf,IAAM4E,GAAanE,KAAOO,IAAV,MAMV6D,GAAQpE,KAAO7J,MAAV,MA2BLkO,GAAQrE,KAAOsE,MAAMpE,MAAM,CAAExR,KAAM,YAA3BsR,CAAH,KAIKoE,IAwBVG,GAAS,SAAC,GAAD,IAAGhc,EAAH,EAAGA,GAAI4N,EAAP,EAAOA,MAAOqO,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,SAAUtB,EAAjC,EAAiCA,SAAjC,OACb,kBAACgB,GAAD,KACE,kBAACE,GAAD,CACE9b,GAAIA,EACJ4N,MAAOA,EACPqO,QAASA,EACTC,SAAUA,EACVtB,SAAUA,IAEZ,kBAACiB,GAAD,CAAOM,QAASnc,MAIpBgc,GAAOnE,aAAe,CACpBoE,SAAS,EACTC,UAAU,EACVtB,SAAU,cAWGoB,U,sgCClFf,IAAMI,GAAc3E,KAAOO,IAAV,MAIXqE,GAAS5E,KAAO6E,GAAV,MAON1D,GAAanB,aAAOe,GAAPf,CAAH,MAGVoB,GAAWpB,KAAOO,IAAV,MAMRc,GAAiBrB,KAAOO,IAAV,MAKde,GAAgBtB,KAAOO,IAAV,MACbuE,GAAS9E,KAAOO,IAAV,MAMNwE,GAAa/E,KAAOgF,KAAV,MAEVC,GAAU,WACd,IAAM9N,EAAW4C,eACXrZ,EAAUsZ,aAAY2D,IAEtBuH,EAAe3H,uBACnB,gBAAGhV,EAAH,EAAGA,GAAI/F,EAAP,EAAOA,KAAMuS,EAAb,EAAaA,MAAOa,EAApB,EAAoBA,YAAatH,EAAjC,EAAiCA,MAAjC,OACE,kBAACwW,GAAD,CACE1gB,IAAKmE,EACLuY,QAAS,kBAAM3J,EAASyB,GAAapW,GAAO8L,KAC5CyG,MAAOa,GAEP,kBAACmP,GAAD,KAAahQ,GACb,kBAAC,GAAD,CACExM,GAAIA,EACJ4N,MAAOpB,EACPyP,QAASlW,EACT6U,SAAU,kBAAMhM,EAASyB,GAAapW,EAAM8L,UAIlD,CAAC6I,IAGGgO,EAAwB5H,uBAC5B,WAAmBnZ,GAAnB,IAAG2Q,EAAH,EAAGA,MAAO7K,EAAV,EAAUA,MAAV,OACE,kBAAC,GAAD,CAAU9F,IAAKA,KACV2Q,GAAS,kBAAC,GAAD,KAAiBA,GAC7B,kBAAC,GAAD,KAAgB7K,EAAM9L,IAAI8mB,OAG9B,CAACA,IAGH,OACE,kBAACP,GAAD,KACE,kBAACC,GAAD,sBACA,kBAAC,GAAD,KAAalkB,EAAQtC,IAAI+mB,MAK/BF,GAAQ7E,aAAe,GAIR6E,U,ijDC9Ef,IAAMG,GAAmBpF,KAAOO,IAAV,MAMhB8E,GAAWrF,KAAOO,IAAV,MAUR+E,GAAetF,KAAOO,IAAV,MAWZgF,GAAavF,KAAOC,OAAOC,MAAM,CAAExR,KAAM,UAA5BsR,CAAH,MA8BVwF,GAAYxF,aAAOyF,GAAPzF,CAAH,MAKT0F,GAAa1F,aAAO2F,KAAP3F,CAAH,MAeV4F,GAAe,SAAC,GAA2C,IAAzCzc,EAAwC,EAAxCA,OAAQ+Z,EAAgC,EAAhCA,WAAY2C,EAAoB,EAApBA,cAAoB,EACJ1K,oBAAS,GADL,oBACvD2K,EADuD,KAChCC,EADgC,KAExDC,EAAkBlK,iBAAO,MAEzBmK,EAA0B,kBAAMF,GAAyB,IAI/D,OAFApC,aAAkBqC,EAAiBC,GAGjC,kBAACb,GAAD,KACE,kBAACC,GAAD,MACIlc,GACA,kBAACuc,GAAD,CAAYQ,GAAG,cAAf,uBAEF,kBAAC,GAAD,CACEpF,QAAS,kBAAMiF,GAA0BD,KAEzC,kBAACN,GAAD,OAEF,kBAACD,GAAD,CAAYtB,SAAUf,EAAYpC,QAAS+E,GAA3C,SAIDC,GACC,kBAACR,GAAD,CAAczJ,IAAKmK,GACjB,kBAAC,GAAD,CAAWnF,QAASoF,GAClB,kBAAC,GAAD,UAQZL,GAAaxF,aAAe,CAC1BjX,QAAQ,EACR+Z,YAAY,GASCH,WAAMmB,KAAK0B,I,ICzHCvW,KAAGC,MAAM,CAClCZ,KAAMW,KAAGE,MAAM,CAACtJ,IAAwBuJ,WACxCzQ,QAASsQ,KAAGI,OAAOD,WACnBmH,aAActH,KAAG8W,QACf9W,KAAG+W,UAAU,CACX/W,KAAGI,OACHL,GACAM,GACAC,GACAC,GACAC,GACAC,MAEFN,WACF7Q,KAAM0Q,KAAGC,MAAM,CACb+W,UAAWhX,KAAGC,MAAM,CAClBgX,WAAYjX,KAAGI,SAEjByF,OAAQ7F,KAAGC,MAAM,IACjBiX,MAAOlX,KAAGI,OACVpG,YAAagG,KAAGI,OAAOD,WACvBlJ,OAAQ+I,KAAGC,MAAM,IACjBkX,MAAOnX,KAAGI,OACVlH,GAAI8G,KAAGI,OACPgX,IAAKpX,KAAGqX,KACRC,OAAQtX,KAAGI,OACXmX,UAAWvX,KAAG+W,UAAU,CAAC/W,KAAGI,OAAQJ,KAAGwX,SACvCpe,OAAQ4G,KAAGI,SACVD,WACH0F,OAAQ7F,KAAG8W,QACT9W,KAAGC,MAAM,CACPX,IAAKU,KAAGI,OACR0G,MAAO9G,KAAGI,OACVb,IAAKS,KAAGI,OAAOD,WACfX,OAAQQ,KAAGI,UAGf7M,KAAMyM,KAAGI,OAAOD,WAChBoH,UAAWvH,KAAGqX,KACdxjB,SAAUmM,KAAGqX,KACbtO,UAAW/I,KAAGqX,OAGUrX,KAAGC,MAAM,CACjCZ,KAAMW,KAAGE,MAAM,CAACtJ,IAA+BuJ,WAC/CzQ,QAASsQ,KAAGI,OAAOD,WACnB3Q,QAASwQ,KAAGI,OAAOD,WACnB7Q,KAAM0Q,KAAGC,MAAM,CACb6N,MAAO9N,KAAGI,OAAOD,aAChBA,aAGyBH,KAAGC,MAAM,CACrCZ,KAAMW,KAAGE,MAAM,CAACtJ,IAAoCuJ,WACpDzQ,QAASsQ,KAAGI,OACZ5Q,QAASwQ,KAAGI,OAAOD,WACnB7Q,KAAM0Q,KAAGC,MAAM,CACb+W,UAAWhX,KAAGC,MAAM,CAClBgX,WAAYjX,KAAGI,SAEjByF,OAAQ7F,KAAGC,MAAM,IACjBiX,MAAOlX,KAAGI,OACVpG,YAAagG,KAAGI,OAAOD,WACvBlJ,OAAQ+I,KAAGC,MAAM,IACjB/G,GAAI8G,KAAGI,OACPrG,MAAOiG,KAAGI,OACVgX,IAAKpX,KAAGqX,KACRvJ,MAAO9N,KAAGI,OACVqX,UAAWzX,KAAGI,OACdmX,UAAWvX,KAAG+W,UAAU,CAAC/W,KAAGI,OAAQJ,KAAGwX,SACvCpe,OAAQ4G,KAAGI,OACXsX,yBAA0B1X,KAAGwX,OAC7BG,oBAAqB3X,KAAGI,OACxBwX,cAAe5X,KAAGI,OAClByX,eAAgB7X,KAAGwX,OACnBM,uBAAwB9X,KAAGwX,OAC3BO,kBAAmB/X,KAAGI,OACtB4X,6BAA8BhY,KAAGI,OACjC6X,oBAAqBjY,KAAGI,OACxB8X,0BAA2BlY,KAAGI,OAC9B+X,oBAAqBnY,KAAGI,OACxBgY,mBAAoBpY,KAAGI,OACvBiY,0BAA2BrY,KAAGqX,KAC9BiB,qBAAsBtY,KAAGwX,OACzBe,gBAAiBvY,KAAGI,OACpBoY,oBAAqBxY,KAAGI,OACxBqY,oBAAqBzY,KAAGwX,OACxBkB,mBAAoB1Y,KAAGI,OACvBuY,kBAAmB3Y,KAAGwX,SACrBrX,a,qtDC9FL,IAMMyY,GAAcjI,KAAOO,IAAV,MAEN,SAAC5iB,GAAD,OAAQA,EAAEuF,SAAWvF,EAAE4oB,MAAQ,UAC7B,SAAC5oB,GAAD,OAAQA,EAAEiZ,WAAajZ,EAAEya,UAAY,MAAQ,OATjC,SAACza,GACxB,OAAIA,EAAEuqB,UAAkB,uBACpBvqB,EAAEka,OAAe,UACd,iBAWHsQ,GAAOnI,KAAOgF,KAAV,MAEC,SAACrnB,GAAD,OAAOA,EAAE4oB,SAGdhF,GAAQvB,KAAOwB,IAAV,MAKL4G,GAAQpI,KAAOwB,IAAV,MAQL6G,GAAUrI,KAAOgF,KAAV,MACT,SAACrnB,GAAD,OACCA,EAAEwkB,UAAYxkB,EAAEuU,eACjB2N,aADC,SAID,SAACliB,GAAD,OACAA,EAAEuU,cACF2N,aADA,SAKA,SAACliB,GAAD,OACAA,EAAEwkB,UACFtC,aADA,SAME8F,GAAO3F,KAAOlkB,EAAV,MAeJwsB,GAAYtI,KAAOgF,KAAV,MAITuD,GAAQvI,KAAOwB,IAAV,MA+DLgH,GAAU,SAAC,GAgBV,IAAD,IAfJzpB,QACEA,EAcE,EAdFA,QACA4X,EAaE,EAbFA,aAaE,IAZFhY,KAAQ4nB,EAYN,EAZMA,MAAOld,EAYb,EAZaA,YAAa6S,EAY1B,EAZ0BA,UAC5BhH,EAWE,EAXFA,OACAtS,EAUE,EAVFA,KACAgU,EASE,EATFA,UACA1T,EAQE,EARFA,SACAkV,EAOE,EAPFA,UAEFqQ,EAKI,EALJA,UACA5Q,EAII,EAJJA,OACA6Q,EAGI,EAHJA,iBAEAC,EACI,EADJA,iBACI,EAC8BxN,oBAAS,GADvC,oBACGyN,EADH,KACcC,EADd,KAEEX,EAAYtlB,IAAS6lB,GAAatY,OAAOsY,EAAW,MAAM1a,KAAKhP,GAOrE,OACE,kBAACkpB,GAAD,CACErR,UAAWA,EACX1T,SAAUA,EACV2U,OAAQA,EACRqQ,UAAWA,EACX9P,UAAWA,EACXmO,MAAOA,GAENmC,GACC,kBAACJ,GAAD,KAAYvmB,aAAO,OAAQ,IAAIoa,KAAKD,KAErChH,EAAOhZ,OAAS,GA7CF,SAACgZ,GAAD,OACnBA,EAAO9W,KAAI,WAA8BgG,GAA9B,IAAGuK,EAAH,EAAGA,IAAKwH,EAAR,EAAQA,MAAOvH,EAAf,EAAeA,IAAKC,EAApB,EAAoBA,OAApB,OAET,kBAAC0Z,GAAD,CAAOnkB,IAAKA,EAAKuK,IAAKA,EAAKma,aAAY3S,EAAOvH,IAAKA,EAAKC,OAAQA,OA0CxCka,CAAa7T,GACnC,kBAACiT,GAAD,CAAM5B,MAAOA,EAAOyC,cAlBK,SAACxtB,GAC5BmtB,EAAiBtf,GACjB7N,EAAEytB,mBAiBG5f,GAEFnG,EAAW,IAAM,KACjBkV,IAAcwQ,EAEb,kBAACjD,GAAD,CAAM7E,QAAS,kBAAM+H,GAAa,KA9CZ,qBAgDtBlS,EAAavY,IArGM,SAACwE,EAAM6lB,GAAP,OAAqB,SAACS,EAAM9kB,GACrD,MAAoB,kBAAT8kB,EAA0BA,EAGrB,iBAAdA,EAAKxa,MACS,eAAdwa,EAAKxa,MACS,cAAdwa,EAAKxa,KAGH,kBAAC,GAAD,CAAOtK,IAAKA,EAAKwK,IAAKsa,EAAKta,IAAKC,OAAQqa,EAAKra,OAAQF,IAAKua,EAAKva,MAIjD,UAAdua,EAAKxa,KAEL,kBAAC0Z,GAAD,CAAOhkB,IAAKA,EAAKwK,IAAKsa,EAAKta,IAAKC,OAAQqa,EAAKra,OAAQF,IAAKua,EAAKva,MAIjD,YAAdua,EAAKxa,KAEL,kBAAC2Z,GAAD,CACEjkB,IAAKA,EACL+d,SAAU+G,EAAK/Z,SAAWsZ,EAC1BvW,aAActP,IAAS6lB,GAEtBS,EAAKha,MAKM,SAAdga,EAAKxa,KAEL,kBAACiX,GAAD,CACEvhB,IAAKA,EACL0J,KAAMob,EAAKpb,KACXqb,IAAI,sBACJha,OAAO,UAEN+Z,EAAKha,MAKL,MAyDgBka,CAAmBxmB,EAAM6lB,MAMlDD,GAAQpI,aAAe,CACrBqI,UAAW,GACX5Q,QAAQ,EACR6Q,kBAAkB,EAElBC,iBAAkB,cAYL5F,WAAMmB,KAAKsE,I,8MC3M1B,IAAMa,GAAarJ,KAAOO,IAAV,MAKM,SAAC5iB,GAAD,OAAQA,EAAEka,OAAS,UAAY,iBAG/CyR,GAAS,SAAC,GAAD,IAAcvqB,EAAd,EAAGA,QAAWA,QAAW8Y,EAAzB,EAAyBA,OAAzB,OACb,kBAACwR,GAAD,CAAYxR,OAAQA,GAAS9Y,IAG/BuqB,GAAOlJ,aAAe,CACpBvI,QAAQ,GAQKkL,WAAMmB,KAAKoF,I,4MCrB1B,IAAMC,GAAiBvJ,KAAOO,IAAV,MAkBLwC,OAAMmB,MAVF,SAAC,GAAD,IAEP4C,EAFO,EACjB/nB,QACEJ,KAAQmoB,UAFO,OAIb,kBAACyC,GAAD,KAAiBzC,MCTjB0C,GAAc,SAAC,GAOd,IANLzqB,EAMI,EANJA,QACA0pB,EAKI,EALJA,UACA5Q,EAII,EAJJA,OACA6Q,EAGI,EAHJA,iBACAe,EAEI,EAFJA,YACAd,EACI,EADJA,iBAEA,OAAI5pB,EAAQ2P,OAASzI,EAEjB,kBAAC,GAAD,CACElH,QAASA,EACT0pB,UAAWA,EACX5Q,OAAQA,EACR6Q,iBAAkBA,EAClBe,YAAaA,EACbd,iBAAkBA,IAKpB5pB,EAAQ2P,OAASzI,EACZ,kBAAC,GAAD,CAAQlH,QAASA,EAAS8Y,OAAQA,IAGvC9Y,EAAQ2P,OAASzI,EACZ,kBAAC,GAAD,CAAYlH,QAASA,IAGvB,MAGTyqB,GAAYpJ,aAAe,CACzBqI,UAAW,GACX5Q,QAAQ,EACR6Q,kBAAkB,EAClBe,YAAa,aACbd,iBAAkB,cAYL5F,WAAMmB,KAAKsF,I,8kBCnD1B,IAEME,GAAe1J,KAAOO,IAAV,MAIZoJ,GAAkB3J,aAAOe,GAAPf,CAAH,MAKf4J,GAAqB5J,KAAOC,OAAV,MAIX,SAACtiB,GAAD,OAAQA,EAAEksB,QAAU,QAAU,UAWrCC,GAAW,SAAC,GAOX,IANLvT,EAMI,EANJA,SACAkS,EAKI,EALJA,UACA5Q,EAII,EAJJA,OACAkS,EAGI,EAHJA,YACArB,EAEI,EAFJA,iBACAC,EACI,EADJA,iBACI,EAIAxN,oBAAS,GAJT,oBAEF6O,EAFE,KAGFC,EAHE,KAiBEC,EAAepO,iBAAO,MAEtBqO,EAAuB,WACvBD,EAAanO,SAAWmO,EAAanO,QAAQqO,gBAC/CF,EAAanO,QAAQqO,kBAIzB3P,qBAAU,WACHuP,GACHG,MAGD,CAAC5T,IAEJ,IAAMyB,EAAY,SAAC5T,GACjB,QAAK2lB,IACElS,EAASzT,EAAM,IAAM,EAAIA,EAAM,IAAM,IAG9C,OACE,kBAACslB,GAAD,KACE,kBAACC,GAAD,CAAiBU,SAjCM,SAAC,GAIrB,IAHLC,EAGI,EAHJA,aACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,UAKAP,EAFkBO,EA7CO,IA4CJD,EAAsBD,IA4BMzO,IAAKqO,GACjD3T,EAASnY,KAAI,SAACW,EAASqF,GAAV,OACZ,kBAAC,GAAD,CACEA,IAAKrF,EAAQJ,KAAK4J,GAClBxJ,QAASA,EACT0pB,UAAWA,EACX5Q,OAAQG,EAAU5T,GAClBskB,iBAAkBA,EAClBC,iBAAkBA,QAIxB,kBAACiB,GAAD,CACE9I,QAASqJ,EACTN,QAASG,GAFX,yBAUNF,GAAS1J,aAAe,CACtB7J,SAAU,GACVkS,UAAW,GACX5Q,QAAQ,EACRkS,aAAa,EACbrB,kBAAkB,EAClBC,iBAAkB,cAYL5F,WAAMmB,KAAK4F,I,g4BCtF1B,IAAMW,GAAWzK,KAAOO,IAAV,MAKRmK,GAAc1K,KAAOO,IAAV,MAGN,SAAC5iB,GAAD,OAAQA,EAAEgtB,aAAe,QAAU,UAOxCC,GAA0B,CAC9Blc,KAAM,KACNyT,UAAU,EACVjY,MAAO,GACP0Z,YAAa,EACbvlB,MAAO,EACPG,IAAK,GAGDqsB,GAAwB,SAAC,GAAD,IAAGjH,EAAH,EAAGA,YAAa1Z,EAAhB,EAAgBA,MAAU4gB,EAA1B,mDAC5BlH,YAA6B,IAAhBA,EAAoB1Z,EAAMhO,OAAS,EAAI0nB,EAAc,EAClE1Z,SACG4gB,IAGCC,GAA0B,SAAC,GAAD,IAAGnH,EAAH,EAAGA,YAAa1Z,EAAhB,EAAgBA,MAAU4gB,EAA1B,mDAC9BlH,YAAaA,IAAgB1Z,EAAMhO,OAAS,EAAI,EAAI0nB,EAAc,EAClE1Z,SACG4gB,IAuNUE,GApNF,SAAC,GAAuB,IAArBnF,EAAoB,EAApBA,cAAoB,EACV1K,mBAAS,IADC,oBAC3BjM,EAD2B,KACrB+b,EADqB,KAE5B1U,EAAWyD,aAAYN,IACvB+O,EAAYzO,aAAYT,IACxB0E,EAAkBjE,aAAYP,IAC9BiI,EAAkB1H,aAAYlF,IAC9BxO,EAAS0T,aAAYtF,IACrBvO,EAAQ6T,aAAYL,IACpBxQ,EAAS6Q,aAAYV,IACrBxO,EAAckP,aAAY1G,IAC1BuE,EAASmC,aAAYH,IACrB6O,EAAmB1O,aAAY4D,IAC/BmM,EAAc/P,aAAY6D,IAC1B8M,EAAe3Q,aAAY8D,IAC3ByF,EAAezH,iBAAO,MAdM,EAeIuB,GAAYuN,IAfhB,oBAe3B3H,EAf2B,KAediI,EAfc,KAkB5BC,EAAUrP,iBAAO5M,GACvBic,EAAQpP,QAAU7M,EAClB,IAAMkc,EAAWtP,iBAAO3V,GACxBilB,EAASrP,QAAU5V,EACnB,IAAMklB,EAAYvP,iBAAOxV,GACzB+kB,EAAUtP,QAAUzV,EACpB,IAAMglB,EAAiBxP,iBAAOmH,GAC9BqI,EAAevP,QAAUkH,EAEzB,IAAMC,GAAc/Z,IAAW2B,EAEzBygB,EAAuBhO,uBAC3B,SAAC/a,GACCyoB,GAAQ,SAACxvB,GAAD,MAAO,UAAGA,EAAE+F,OAAL,aAAgBgB,EAAhB,KAAwBgpB,cACnCjI,EAAaxH,SACfwH,EAAaxH,QAAQ0P,UAGzB,CAACR,EAAS1H,IAGNmI,EAAmBnO,uBACvB,SAACoO,GACCV,GAAQ,SAACxvB,GAAD,MAAO,UAAGA,EAAE+F,OAAL,YAAemqB,EAAf,KAA4BH,gBAE7C,CAACP,IAGGW,EAAoBrO,uBAAY,WAC/B4N,EAAQpP,UACb8J,EAAcsF,EAAQpP,SACtBkP,EAAQ,OACP,CAACpF,EAAesF,EAASF,IAEtBY,EAAatO,uBAAY,WAC7B2N,EAAe,CAAE/I,UAAU,MAC1B,CAAC+I,IAEEY,EAAevO,uBACnB,SAAC/hB,GAAO,IAAD,EAC6BA,EAAE2T,OAA5Bb,EADH,EACGA,MAAOyd,EADV,EACUA,eAEfd,EAAQ3c,GAER,IAAM0d,EAAmB1d,EAAM2d,YAAY,IAAKF,EAAiB,GAC3DG,EAAkB5d,EAAMmE,QAAQ,IAAKsZ,GAErC1tB,GAA8B,IAAtB2tB,EAA0B,EAAIA,EAAmB,EACzDxtB,GAA2B,IAArB0tB,EAAyB5d,EAAMpS,OAASgwB,EAE9Cvb,EAAOrC,EAAMsE,UAAUvU,EAAOG,GAE9B2tB,EAAajmB,EAAiBC,MAAME,MAAM+lB,KAAKzb,GAErD,GAAIwb,EAAJ,CAAiB,IACNnO,EADK,aACQmO,EADR,MAERjiB,EAAQ6T,GACZC,EACAoN,EAASrP,QACTkC,EACA/X,EAAiBC,MAAMC,OAGzB8kB,EAAe,CACbxc,KAAMxI,EAAiBC,MAAM3D,KAC7B2f,UAAU,EACVjY,QACA0Z,YAAa,EACbvlB,QACAG,YAfJ,CAqBA,IAAM6tB,EAAcnmB,EAAiBI,OAAOD,MAAM+lB,KAAKzb,GAEvD,GAAI0b,EAAJ,CAAkB,IACPrO,EADM,aACOqO,EADP,MAETniB,EAAQuU,GACZT,EACAqN,EAAUtP,QACV7V,EAAiBI,OAAOF,OAG1B8kB,EAAe,CACbxc,KAAMxI,EAAiBI,OAAO9D,KAC9B2f,UAAU,EACVjY,QACA0Z,YAAa,EACbvlB,QACAG,aAMA8sB,EAAevP,QAAQoG,UACzB+I,EAAeN,OAGnB,CAACK,EAASC,EAAgBI,EAAgBrN,IAGtCqO,EAAc/O,uBAAY,cAAU,IAEpCgP,EAAgBhP,uBACpB,SAAC/hB,GACC,GAAI8vB,EAAevP,QAAQoG,SAAU,CACnC,GAAc,UAAV3mB,EAAE4I,KAA6B,QAAV5I,EAAE4I,IAqBzB,OApBA5I,EAAEytB,iBACFgC,GAAQ,SAACxvB,GAAO,IAAD,EAOT6vB,EAAevP,QALjBrN,EAFW,EAEXA,KACAxE,EAHW,EAGXA,MACA0Z,EAJW,EAIXA,YACAvlB,EALW,EAKXA,MACAG,EANW,EAMXA,IAEIguB,EAActiB,EAAM0Z,GACpB6I,EACK,UAAT/d,EAAA,WAAuB8d,GAAgBA,EAAY7d,IAE/CoE,EAAatX,EAAEmX,UAAU,EAAGvU,GAC5BquB,EAAYjxB,EAAEmX,UAAUpU,IAAQ,IAEtC,MAAM,GAAN,OAAUuU,GAAV,OAAuB0Z,GAAvB,OAAsCC,WAExCxB,EAAeN,IAKjB,GAAc,YAAVpvB,EAAE4I,IAGJ,OAFA5I,EAAEytB,sBACFiC,EAAeL,IAIjB,GAAc,cAAVrvB,EAAE4I,IAGJ,OAFA5I,EAAEytB,sBACFiC,EAAeH,IAKdO,EAAevP,QAAQoG,UACZ,UAAV3mB,EAAE4I,MACJ5I,EAAEytB,iBACF2C,OAIN,CAACA,EAAmBV,EAAgBI,IAGtC,OACE,kBAACb,GAAD,KACE,kBAACC,GAAD,CAAaC,aAAcA,GACzB,kBAAC,GAAD,CACEpU,SAAUA,EACVkS,UAAWA,EACX5Q,SAAQkS,GAAclS,EACtB6Q,iBAAkBA,EAClBqB,YAAaA,EACbpB,iBAAkB4C,IAEpB,kBAAC,GAAD,CACE1P,IAAK0H,EACLrU,KAAMA,EACNwS,gBAAiBA,EACjBuB,YAAaA,EACbC,WAAYA,EACZ/Z,OAAQA,EACRwY,aAAc+J,EACdvI,SAAU2I,EACV1I,QAASkJ,EACTjJ,UAAWkJ,EACXjJ,OAAQuI,IAEV,kBAAC,GAAD,CACE3I,WAAYA,EACZ/Z,OAAQA,EACR0c,cAAe+F,OC/NVe,GAnCF,WACX,IAAMxV,EAAW4C,eAEX0O,EAAYzO,aAAYT,IACxB1O,EAAiBmP,aAAY5G,IAE7BwZ,EAASvQ,GAAgBoM,EAAWrgB,aAAaC,aAEvDqT,KACA5B,KAEAW,qBAAU,WACR,IAAMoS,EAAUzkB,aAAa0kB,QAAQ,QAErC,GAAID,EAAS,CACX,IAAMjqB,EAAO0V,KAAKhW,MAAMuqB,GAExB1V,EAAS7N,EAAU,CAAEH,QAAQ,EAAMvG,aAIpC,CAACuU,IAEJ,IAAMyU,EAAoBrO,uBACxB,SAACxe,GACC,GAAK6tB,EAAL,CACA,IAAMnW,EAAoB2G,GAAcre,EAAQyC,QAChDorB,EAAO9qB,IAAI+I,EAAgB4L,MAE7B,CAACmW,EAAQ/hB,IAGX,OAAO,kBAAC,GAAD,CAAMgb,cAAe+F,KCtCxBmB,GAAa,CACjBC,UrDLkCzvB,kCqDMlC0vB,arDJA1vB,uCqDKA2vB,cAAe,iBACfC,MAAO,CACL,SACA,mBACA,YACA,YACA,gBACA,gBACA,mBACA,mBACA,sBACA/qB,KAAK,KACPgrB,OAAQ9U,KAAKS,UAAU,CACrBsU,SAAU,CAAEC,eAAgB,KAAMC,QAAS,KAAMC,mBAAoB,SAa1DC,GARI,WACjB,IAAMC,EAAS3xB,OAAOmC,QAAQ6uB,IAC3B3uB,KAAI,oCAAEgG,EAAF,KAAOkK,EAAP,qBAAqBlK,EAArB,YAA4BkK,MAChClM,KAAK,KAER,MAAM,GAAN,OrDhCkC,wCqDgClC,YAAkCsrB,ICxBrBC,GANF,WAGX,OAFAvS,OAAOC,SAASvN,KAAO2f,KAEhB,M,qBC4BMG,GA3BM,WACnB,IAAMzW,EAAW4C,eACXzC,EAAUuW,eAEhB,IAAKzS,OAAOC,SAASrV,KAAM,OAAO,KAElC,IAAMwQ,EAAS,IAAIsX,gBAAgB1S,OAAOC,SAASrV,KAAK7I,MAAM,IAExDkL,EAAcmO,EAAOnS,IAAI,gBACzB0pB,EAAUvX,EAAOnS,IAAI,YAE3B,IAAKgE,IAAgB0lB,EAAS,OAAO,KAErC3lB,aAAa0Q,QAAQ,cAAezQ,GACpCD,aAAa0Q,QAAQ,UAAWiV,GAIhC5W,EpDHuB,SAAC5O,GAAD,8CAAQ,WAAO4O,GAAP,uBAAArb,EAAA,6DAC/Bqb,EAAS3N,KADsB,kBAINwkB,EAAazlB,GAJP,OAIvBb,EAJuB,SAKgBA,EAASlE,KAAK,GAAnD4F,EALqB,EAKrBA,MAAqBC,EALA,EAKd4kB,aACTrrB,EAAO,CAAE2F,KAAIa,QAAOC,eAC1BjB,aAAa0Q,QAAQ,OAAQR,KAAKS,UAAUnW,IAE5CuU,EAAS1N,EAAiB7G,IATG,kDAW7BuU,EAASzN,EAAiB,CAAE9C,MAAO,KAAE7H,WAXR,0DAAR,sDoDGduJ,CAFW4lB,KAAIC,OAAOJ,GAAvBnpB,MAIR,IAAMwpB,EAAchmB,aAAa0kB,QAAQ,eAIzC,OAFAxV,EAAQtE,KAAKob,EAAW,iBAAaA,GAAgB,UAE9C,M,2NC5BMvO,oBAAf,M,wECAeA,oBAAf,M,wECAeA,oBAAf,M,sHCIewO,oBAAf,KAEMC,GACAC,GAEFC,ICqBWC,GAlBH,SAAC,GAAD,IAAGtV,EAAH,EAAGA,MAAH,OACV,oCACE,kBAAC,KAAD,CAAUA,MAAOA,GACf,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOuV,OAAK,EAACC,KAAK,SAASC,UAPnC7oB,EAAeqV,OAAOC,SAASrV,MAAQ4nB,GAAejB,KAQ9C,kBAAC,KAAD,CAAO+B,OAAK,EAACC,KAAK,aAAaC,UAAWjB,QAIhD,kBAAC,GAAD,QCZF,GAFAkB,IAAQC,WAAW,mBAEd/oB,EAAeqV,OAAOC,SAASrV,MAAO,CACzC,IAAM+oB,GACJ3T,OAAOC,SAAS2T,SAAW5T,OAAOC,SAASqS,OAAStS,OAAOC,SAASrV,KACtE6oB,IAAQI,SAASF,IAIrBG,IAASC,OAAO,kBAAC,GAAD,CAAKhW,MAAOA,KAAWwC,SAASyT,eAAe,U,gCChB7DC,EAAOpwB,QAAU,EAAQ,O","file":"static/js/main.43afe3f8.chunk.js","sourcesContent":["\"use strict\";\n\nvar e,\n    t = (e = require(\"tls\")) && \"object\" == typeof e && \"default\" in e ? e.default : e,\n    r = require(\"net\"),\n    n = require(\"events\"),\n    s = require(\"tekko\");\n\nfunction a() {\n  return (a = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n\n      for (var n in r) {\n        Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n      }\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nvar i,\n    o = function o() {\n  return \"justinfan\" + Math.floor(1e5 * Math.random()).toString().padStart(5, \"0\");\n},\n    m = function m(e) {\n  return e.startsWith(\"\u0001ACTION \") && e.endsWith(\"\u0001\");\n},\n    c = function c(e) {\n  return e.slice(8, -1);\n},\n    u = function u(e) {\n  return e.middle[0].slice(1);\n},\n    d = !(\"undefined\" == typeof process || !process.versions || !process.versions.node),\n    g = [\"mod\", \"emote-only\", \"r9k\", \"rituals\", \"subs-only\", \"msg-param-should-share-streak\"],\n    p = [\"tmi-sent-ts\", \"bits\", \"ban-duration\", \"msg-param-cumulative-months\", \"msg-param-months\", \"msg-param-promo-gift-total\", \"msg-param-streak-months\", \"msg-param-viewerCount\", \"msg-param-threshold\"],\n    l = {\n  \"badge-info\": \"badgeInfo\",\n  \"display-name\": \"displayName\",\n  \"emote-sets\": \"emoteSets\",\n  \"room-id\": \"roomId\",\n  \"tmi-sent-ts\": \"tmiSentTs\",\n  \"user-id\": \"userId\",\n  \"target-msg-id\": \"targetMsgId\",\n  \"msg-id\": \"msgId\",\n  \"system-msg\": \"systemMsg\",\n  \"emote-only\": \"emoteOnly\",\n  \"followers-only\": \"followersOnly\",\n  \"subs-only\": \"subsOnly\",\n  \"ban-duration\": \"banDuration\",\n  \"message-id\": \"messageId\",\n  \"thread-id\": \"threadId\",\n  \"msg-param-cumulative-months\": \"msgParamCumulativeMonths\",\n  \"msg-param-displayName\": \"msgParamDisplayName\",\n  \"msg-param-login\": \"msgParamLogin\",\n  \"msg-param-months\": \"msgParamMonths\",\n  \"msg-param-promo-gift-total\": \"msgParamPromoGiftTotal\",\n  \"msg-param-promo-name\": \"msgParamPromoName\",\n  \"msg-param-recipient-display-name\": \"msgParamRecipientDisplayName\",\n  \"msg-param-recipient-id\": \"msgParamRecipientId\",\n  \"msg-param-recipient-user-name\": \"msgParamRecipientUserName\",\n  \"msg-param-sender-login\": \"msgParamSenderLogin\",\n  \"msg-param-sender-name\": \"msgParamSenderName\",\n  \"msg-param-should-share-streak\": \"msgParamShouldShareStreak\",\n  \"msg-param-streak-months\": \"msgParamStreakMonths\",\n  \"msg-param-sub-plan\": \"msgParamSubPlan\",\n  \"msg-param-sub-plan-name\": \"msgParamSubPlanName\",\n  \"msg-param-viewerCount\": \"msgParamViewerCount\",\n  \"msg-param-ritual-name\": \"msgParamRitualName\",\n  \"msg-param-threshold\": \"msgParamThreshold\"\n},\n    f = [\"subscriber\", \"turbo\", \"user-type\"],\n    h = function h(e) {\n  return void 0 === e && (e = \"\"), e ? e.split(\",\").reduce(function (e, t) {\n    var r,\n        n = t.split(\"/\");\n    return a({}, e, ((r = {})[n[0]] = n[1], r));\n  }, {}) : {};\n},\n    v = function v(e) {\n  return e ? Object.entries(e).reduce(function (e, t) {\n    var r,\n        n = t[0],\n        s = t[1];\n    return f.includes(n) ? e : a({}, e, ((r = {})[l[n] || n] = function (e, t) {\n      if (\"emotes\" === e) return void 0 === (r = t) && (r = \"\"), r ? r.split(\"/\").reduce(function (e, t) {\n        var r,\n            n = t.split(\":\");\n        return a({}, e, ((r = {})[n[0]] = n[1].split(\",\").map(function (e) {\n          var t = e.split(\"-\"),\n              r = t[1];\n          return {\n            start: Number.parseInt(t[0], 10),\n            end: Number.parseInt(r, 10)\n          };\n        }), r));\n      }, {}) : {};\n      var r;\n      if (\"badges\" === e) return h(t);\n      if (\"badge-info\" === e) return h(t);\n\n      if (\"followers-only\" === e) {\n        var n = !1;\n        return \"-1\" === t ? n = !1 : \"0\" === t ? n = !0 : \"string\" == typeof t && (n = parseInt(t, 10)), n;\n      }\n\n      if (\"slow\" === e) {\n        var s = !1;\n        return \"0\" === t ? s = !1 : \"string\" == typeof t && (s = parseInt(t, 10)), s;\n      }\n\n      return g.includes(e) ? \"1\" === t : p.includes(e) ? parseInt(t, 10) : \"string\" == typeof t ? t.replace(\"\\\\s\", \" \") : t;\n    }(n, s), r));\n  }, {}) : {};\n},\n    S = function S(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n},\n    w = function w(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    message: e.trailing,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n};\n\n(i = exports.Commands || (exports.Commands = {})).REPLY001 = \"001\", i.PING = \"PING\", i.PONG = \"PONG\", i.JOIN = \"JOIN\", i.PART = \"PART\", i.PRIVMSG = \"PRIVMSG\", i.NOTICE = \"NOTICE\", i.USERNOTICE = \"USERNOTICE\", i.GLOBALUSERSTATE = \"GLOBALUSERSTATE\", i.USERSTATE = \"USERSTATE\", i.ROOMSTATE = \"ROOMSTATE\", i.CLEARCHAT = \"CLEARCHAT\", i.CLEARMSG = \"CLEARMSG\", i.HOSTTARGET = \"HOSTTARGET\", i.WHISPER = \"WHISPER\";\n\nvar R,\n    P = function (e) {\n  var n, i;\n\n  function g(t) {\n    var r;\n    return void 0 === t && (t = {}), (r = e.call(this) || this).socket = null, r.globalUserState = null, r.channels = {}, r._connected = !1, r._connecting = !1, r._registered = !1, r.options = a({\n      secure: !0\n    }, t), r;\n  }\n\n  i = e, (n = g).prototype = Object.create(i.prototype), n.prototype.constructor = n, n.__proto__ = i;\n  var p,\n      l = g.prototype;\n  return l.connect = function () {\n    try {\n      var e = this,\n          t = d ? e._connectInNode() : e._connectInBrowser();\n      return Promise.resolve(t).then(function () {\n        return e._register();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, l.receiveRaw = function (e) {\n    var t = this;\n    e.trim().split(\"\\r\\n\").forEach(function (e) {\n      return t._handleMessage(e);\n    });\n  }, l.sendRaw = function (e) {\n    return !(null === this.socket || !e || (d ? this.socket.write(e) : this.socket.send(e), 0));\n  }, l.say = function (e, t) {\n    var r = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: t\n    });\n    return this.sendRaw(r);\n  }, l.sendCommand = function (e, t, r) {\n    void 0 === r && (r = \"\");\n    var n = Array.isArray(r) ? r.join(\" \") : r,\n        a = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: \"/\" + t + \" \" + n\n    });\n    return this.sendRaw(a);\n  }, l.join = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.JOIN,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, l.part = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.PART,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, l._handleMessage = function (e) {\n    var t = s.parse(e);\n    t.raw = e;\n    var r = t.command;\n    if (r === exports.Commands.PING) return this.sendRaw(exports.Commands.PONG + \" :tmi.twitch.tv\"), void this.emit(\"ping\", {\n      raw: e\n    });\n    if (r === exports.Commands.REPLY001) return this.options.name = t.middle[0], this._registered = !0, void this.emit(\"register\");\n\n    if (r !== exports.Commands.PRIVMSG) {\n      if (r === exports.Commands.USERSTATE) {\n        var n = u(t),\n            a = S(t);\n        return this._updateUserState(n, a.tags), void this.emit(\"userstate\", a);\n      }\n\n      if (r !== exports.Commands.JOIN) {\n        if (r !== exports.Commands.PART) {\n          if (r === exports.Commands.ROOMSTATE) {\n            var i = u(t),\n                o = S(t);\n            return this._updateRoomState(i, o.tags), void this.emit(\"roomstate\", o);\n          }\n\n          if (r !== exports.Commands.NOTICE) {\n            if (r !== exports.Commands.USERNOTICE) {\n              if (r !== exports.Commands.CLEARCHAT) {\n                if (r !== exports.Commands.CLEARMSG) {\n                  if (r !== exports.Commands.HOSTTARGET) {\n                    if (r !== exports.Commands.WHISPER) {\n                      var d, g;\n\n                      if (r === exports.Commands.GLOBALUSERSTATE) {\n                        var p = function (e) {\n                          var t = e.tags;\n                          return {\n                            raw: e.raw,\n\n                            get tags() {\n                              return v(t);\n                            }\n\n                          };\n                        }(t);\n\n                        return this._updateGlobalUserState(p.tags), void this.emit(\"globaluserstate\", p);\n                      }\n                    } else {\n                      var l = (g = (d = t).tags, {\n                        raw: d.raw,\n                        message: d.trailing,\n                        channel: d.middle[0],\n                        user: d.prefix.name,\n\n                        get tags() {\n                          return v(g);\n                        }\n\n                      });\n                      this.emit(\"whisper\", l);\n                    }\n                  } else {\n                    var f = w(t);\n                    this.emit(\"hosttarget\", f);\n                  }\n                } else {\n                  var h = w(t);\n                  this.emit(\"clearmessage\", h);\n                }\n              } else {\n                var R = w(t);\n                this.emit(\"clearchat\", R);\n              }\n            } else {\n              var P = w(t);\n              this.emit(\"usernotice\", P);\n            }\n          } else {\n            var b = w(t);\n            this.emit(\"notice\", b);\n          }\n        } else {\n          var C = u(t);\n          this.emit(\"part\", {\n            channel: C\n          });\n        }\n      } else {\n        var T = u(t);\n        this.emit(\"join\", {\n          channel: T\n        });\n      }\n    } else {\n      var y = function (e) {\n        var t = e.raw,\n            r = e.trailing,\n            n = e.tags,\n            s = e.prefix.name,\n            a = m(r);\n        return {\n          raw: t,\n          message: a ? c(r) : r,\n          channel: u(e),\n          user: s,\n\n          get tags() {\n            return v(n);\n          },\n\n          isAction: a\n        };\n      }(t);\n\n      this.emit(\"message\", y);\n    }\n  }, l._connectInNode = function () {\n    var e = this,\n        n = \"irc.chat.twitch.tv\",\n        s = this.options.secure ? 6697 : 6667;\n    return new Promise(function (a, i) {\n      e._connecting = !0;\n\n      var o = function o() {\n        e._connecting = !1, e._connected = !0, e.emit(\"connect\"), a();\n      };\n\n      e.options.secure ? e.socket = t.connect(s, n, {}, o) : (e.socket = new r.Socket(), e.socket.connect(s, n, o)), e.socket.on(\"error\", function (t) {\n        e._connected = !1, e._connecting = !1, e.emit(\"disconnect\", t), i(t);\n      }), e.socket.on(\"data\", function (t) {\n        e.receiveRaw(t.toString());\n      }), e.socket.on(\"close\", function () {\n        e._connected = !1, e._connecting = !1, e._registered = !1, e.emit(\"disconnect\");\n      });\n    });\n  }, l._connectInBrowser = function () {\n    var e = this,\n        t = this.options.secure ? \"wss://irc-ws.chat.twitch.tv:443\" : \"ws://irc-ws.chat.twitch.tv:80\";\n    return new Promise(function (r, n) {\n      e._connecting = !0, e.socket = new WebSocket(t), e.socket.onopen = function () {\n        e._connected = !0, e._connecting = !1, e.emit(\"connect\"), r();\n      }, e.socket.onmessage = function (t) {\n        return e.receiveRaw(t.data);\n      }, e.socket.onerror = function () {}, e.socket.onclose = function (t) {\n        var r = t.wasClean,\n            s = t.code,\n            a = t.reason;\n        if (e.socket = null, e._connected = !1, e._connecting = !1, e._registered = !1, r) e.emit(\"disconnect\");else {\n          var i = new Error(\"[\" + s + \"] \" + a);\n          e.emit(\"disconnect\", i), n(i);\n        }\n      };\n    });\n  }, l._register = function () {\n    var e = this;\n    if (!this._connected) return Promise.reject();\n    if (this._registered) return Promise.resolve();\n    var t = this.options,\n        r = t.auth,\n        n = t.name || o(),\n        s = r ? \"oauth:\" + r : \"SCHMOOPIIE\";\n    return this.sendRaw(\"CAP REQ :twitch.tv/tags twitch.tv/commands\"), this.sendRaw(\"PASS \" + s), this.sendRaw(\"NICK \" + n), new Promise(function (t, r) {\n      var n = function r() {\n        t(), e.off(\"register\", r);\n      };\n\n      e.on(\"register\", n), setTimeout(function () {\n        r(), e.off(\"register\", n);\n      }, 1e4);\n    });\n  }, l._updateGlobalUserState = function (e) {\n    this.globalUserState = a({}, this.globalUserState, {}, e);\n  }, l._updateUserState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      userState: t\n    }), r));\n  }, l._updateRoomState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      roomState: t\n    }), r));\n  }, (p = [{\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"registered\",\n    get: function get() {\n      return this._registered;\n    }\n  }]) && function (e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var n = t[r];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }(g.prototype, p), g;\n}(n.EventEmitter);\n\n(R = exports.UserNoticeType || (exports.UserNoticeType = {})).sub = \"sub\", R.resub = \"resub\", R.subgift = \"subgift\", R.anonsubgift = \"anonsubgift\", R.submysterygift = \"submysterygift\", R.giftpaidupgrade = \"giftpaidupgrade\", R.rewardgift = \"rewardgift\", R.anongiftpaidupgrade = \"anongiftpaidupgrade\", R.raid = \"raid\", R.unraid = \"unraid\", R.ritual = \"ritual\", R.bitsbadgetier = \"bitsbadgetier\", exports.Client = P, exports.getChannelFromMessage = u, exports.getIsAction = m, exports.getRandomUsername = o, exports.isNode = d, exports.normalizeActionMessage = c, exports.parseMessageTags = v;","const isAuthRedirect = (hash) => hash.startsWith('#access_token=');\n\nexport default isAuthRedirect;\n","export const TWITCH_API_AUTH_BASE = 'https://id.twitch.tv/oauth2/authorize';\n\nexport const TWITCH_API_CLIENT_ID = process.env.REACT_APP_TWITCH_API_CLIENT_ID;\nexport const TWITCH_API_REDIRECT_URI =\n  process.env.REACT_APP_TWITCH_API_REDIRECT_URI;\n\nexport const CHANNEL_MESSAGES_LIMIT = 500;\nexport const STORE_USERS_LIMIT = 500;\n\nexport const API_REQUESTS_TIMEOUT = 10000;\n\nexport const MESSAGE_TYPES = {\n  MESSAGE: 'MESSAGE',\n  NOTICE_MESSAGE: 'NOTICE_MESSAGE',\n  USER_NOTICE_MESSAGE: 'USER_NOTICE_MESSAGE',\n};\n\nexport const SUGGESTION_TYPES = {\n  users: {\n    name: 'users',\n    limit: 5,\n    regex: /^@([\\w\\d_]*)$/,\n  },\n  emotes: {\n    name: 'emotes',\n    limit: 10,\n    regex: /^:([\\w\\d_]{2,})$/,\n  },\n};\n\nexport const STORE_FLAGS = {\n  DEFAULT: {\n    isLoading: false,\n    isLoaded: false,\n    isError: false,\n    error: null,\n  },\n  REQUEST: {\n    isLoading: true,\n    isLoaded: false,\n    isError: false,\n    error: null,\n  },\n  SUCCESS: {\n    isLoading: false,\n    isLoaded: true,\n    isError: false,\n    error: null,\n  },\n  FAILURE: {\n    isLoading: false,\n    isLoaded: false,\n    isError: true,\n  },\n};\n\nexport const NOTICE_MESSAGE_TAGS = [\n  'msg_banned',\n  'msg_bad_characters',\n  'msg_channel_blocked',\n  'msg_channel_suspended',\n  'msg_duplicate',\n  'msg_emoteonly',\n  'msg_facebook',\n  'msg_followersonly',\n  'msg_followersonly_followed',\n  'msg_followersonly_zero',\n  'msg_r9k',\n  'msg_ratelimit',\n  'msg_rejected',\n  'msg_rejected_mandatory',\n  'msg_room_not_found',\n  'msg_slowmode',\n  'msg_subsonly',\n  'msg_suspended',\n  'msg_timedout',\n  'msg_verified_email',\n];\n","const fetchRequest = async (url, options = {}) => {\n  let fetchOptions = { ...options };\n\n  if (options.timeout) {\n    const controller = new AbortController();\n    delete fetchOptions.timeout;\n    fetchOptions = { ...fetchOptions, signal: controller.signal };\n    setTimeout(() => controller.abort(), options.timeout);\n  }\n\n  const response = await fetch(url, fetchOptions);\n\n  const body = await response.json();\n\n  if (!response.ok) {\n    const error = Error(response.statusText);\n    error.data = body;\n    throw error;\n  }\n\n  return body;\n};\n\nexport default fetchRequest;\n","import fetchRequest from 'utils/fetchRequest';\nimport { API_REQUESTS_TIMEOUT } from 'utils/constants';\n\nconst TWITCH_API_HELIX = 'https://api.twitch.tv/helix';\nconst TWITCH_API_KRAKEN = 'https://api.twitch.tv/kraken';\n\nconst getHelixHeaders = () => ({\n  Authorization: `Bearer ${localStorage.accessToken}`,\n});\n\nconst getKrakenHeaders = () => ({\n  Accept: 'application/vnd.twitchtv.v5+json',\n  'Client-ID': process.env.REACT_APP_TWITCH_API_CLIENT_ID,\n  Authorization: `OAuth ${localStorage.accessToken}`,\n});\n\nconst apiRequest = (url, options) =>\n  fetchRequest(url, { ...options, timeout: API_REQUESTS_TIMEOUT });\n\nconst apiRequestHelix = (url, options) =>\n  apiRequest(`${TWITCH_API_HELIX}${url}`, {\n    ...options,\n    headers: getHelixHeaders(),\n  });\n\nconst apiRequestKraken = (url, options) =>\n  apiRequest(`${TWITCH_API_KRAKEN}${url}`, {\n    ...options,\n    headers: getKrakenHeaders(),\n  });\n\nexport const fetchUser = (id) => apiRequestHelix(`/users?id=${id}`);\n\nexport const fetchTwitchEmotesBySets = (userId) =>\n  apiRequestKraken(`/users/${userId}/emotes`);\n\nexport const fetchBttvGlobalEmotes = () =>\n  apiRequest('https://api.betterttv.net/3/cached/emotes/global');\nexport const fetchBttvChannelEmotes = (channelId) =>\n  apiRequest(`https://api.betterttv.net/3/cached/users/twitch/${channelId}`);\n\nexport const fetchFfzGlobalEmotes = () =>\n  apiRequest('https://api.frankerfacez.com/v1/set/global');\nexport const fetchFfzChannelEmotes = (channelId) =>\n  apiRequest(`https://api.frankerfacez.com/v1/room/id/${channelId}`);\n\nexport const fetchRecentMessages = (channel) =>\n  apiRequest(\n    `https://recent-messages.robotty.de/api/v2/recent-messages/${channel}?clearchatToNotice=true`,\n  );\n\nexport const fetchGlobalBadges = (language = 'en') =>\n  apiRequest(\n    `https://badges.twitch.tv/v1/badges/global/display?language=${language}`,\n  );\nexport const fetchChannelBadges = (channelId, language = 'en') =>\n  apiRequest(\n    `https://badges.twitch.tv/v1/badges/channels/${channelId}/display?language=${language}`,\n  );\n\nexport const fetchBlockedUsers = (userId) =>\n  apiRequestKraken(`/users/${userId}/blocks`);\n","import { createAction, handleActions } from 'redux-actions';\nimport * as R from 'ramda';\n\nimport { STORE_FLAGS } from 'utils/constants';\nimport { fetchUser as apiFetchUser } from 'utils/api';\n\nconst defaultState = {\n  isAuth: false,\n  user: {\n    ...STORE_FLAGS.default,\n    id: null,\n    login: null,\n    displayName: null,\n  },\n};\n\nexport const setIsAuth = createAction('SET_IS_AUTH');\nconst fetchUserRequest = createAction('FETCH_USER_REQUEST');\nconst fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\nconst fetchUserFailure = createAction('FETCH_USER_FAILURE');\n\nexport const fetchUser = (id) => async (dispatch) => {\n  dispatch(fetchUserRequest());\n\n  try {\n    const response = await apiFetchUser(id);\n    const { login, display_name: displayName } = response.data[0];\n    const user = { id, login, displayName };\n    localStorage.setItem('user', JSON.stringify(user));\n\n    dispatch(fetchUserSuccess(user));\n  } catch (e) {\n    dispatch(fetchUserFailure({ error: e.message }));\n  }\n};\n\nconst handleSetIsAuth = (state, { payload: { isAuth, user } }) => ({\n  ...state,\n  isAuth: isAuth === undefined ? state.isAuth : isAuth,\n  user: { ...state.user, ...user },\n});\n\nconst handleFetchUser = {\n  [fetchUserRequest]: (state) =>\n    R.mergeDeepRight(state, {\n      isAuth: false,\n      user: { ...STORE_FLAGS.REQUEST },\n    }),\n  [fetchUserSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      isAuth: true,\n      user: {\n        ...STORE_FLAGS.SUCCESS,\n        ...payload,\n      },\n    }),\n  [fetchUserFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      isAuth: false,\n      user: {\n        ...STORE_FLAGS.FAILURE,\n        error: payload.error,\n      },\n    }),\n};\n\nconst reducer = handleActions(\n  {\n    [setIsAuth]: handleSetIsAuth,\n    ...handleFetchUser,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { createActions, handleActions } from 'redux-actions';\nimport * as R from 'ramda';\n\nimport {\n  fetchGlobalBadges as apiFetchGlobalBadges,\n  fetchChannelBadges as apiFetchChannelBadges,\n} from 'utils/api';\nimport { STORE_FLAGS } from 'utils/constants';\n\nconst defaultState = {\n  global: {\n    ...STORE_FLAGS.DEFAULT,\n    items: {},\n  },\n  channels: {\n    // [channel]: {\n    //   isLoading: false,\n    //   isLoaded: false,\n    //   isError: false,\n    //   error: null,\n    //   items: {},\n    // },\n  },\n};\n\nconst {\n  fetchGlobalBadgesRequest,\n  fetchGlobalBadgesSuccess,\n  fetchGlobalBadgesFailure,\n  fetchChannelBadgesRequest,\n  fetchChannelBadgesSuccess,\n  fetchChannelBadgesFailure,\n} = createActions(\n  'FETCH_GLOBAL_BADGES_REQUEST',\n  'FETCH_GLOBAL_BADGES_SUCCESS',\n  'FETCH_GLOBAL_BADGES_FAILURE',\n  'FETCH_CHANNEL_BADGES_REQUEST',\n  'FETCH_CHANNEL_BADGES_SUCCESS',\n  'FETCH_CHANNEL_BADGES_FAILURE',\n);\n\nconst parseBadges = R.pathOr({}, ['badge_sets']);\n\nexport const fetchGlobalBadges = () => async (dispatch) => {\n  dispatch(fetchGlobalBadgesRequest());\n\n  try {\n    const response = await apiFetchGlobalBadges();\n    const data = { items: parseBadges(response) };\n\n    dispatch(fetchGlobalBadgesSuccess(data));\n  } catch (e) {\n    dispatch(fetchGlobalBadgesFailure({ error: e.message }));\n  }\n};\n\nexport const fetchChannelBadges = (channelId, channel) => async (dispatch) => {\n  dispatch(fetchChannelBadgesRequest({ channel }));\n\n  try {\n    const response = await apiFetchChannelBadges(channelId);\n    const data = {\n      channel,\n      items: parseBadges(response),\n    };\n\n    dispatch(fetchChannelBadgesSuccess(data));\n  } catch (e) {\n    dispatch(fetchChannelBadgesFailure({ channel, error: e.message }));\n  }\n};\n\nconst handleFetchGlobalBadges = {\n  [fetchGlobalBadgesRequest]: (state) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.REQUEST },\n    }),\n  [fetchGlobalBadgesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n    }),\n  [fetchGlobalBadgesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.FAILURE, error: payload.error },\n    }),\n};\n\nconst handleFetchChannelBadges = {\n  [fetchChannelBadgesRequest]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.REQUEST },\n      },\n    }),\n  [fetchChannelBadgesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n      },\n    }),\n  [fetchChannelBadgesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.FAILURE, error: payload.error },\n      },\n    }),\n};\n\nconst reducer = handleActions(\n  {\n    ...handleFetchGlobalBadges,\n    ...handleFetchChannelBadges,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { createActions, handleActions } from 'redux-actions';\nimport * as R from 'ramda';\n\nimport { fetchBlockedUsers as apiFetchBlockedUsers } from 'utils/api';\nimport { STORE_FLAGS } from 'utils/constants';\n\nconst defaultState = {\n  currentChannel: null,\n  isConnected: false,\n  globalState: {},\n  channels: {\n    // [channel]: {\n    //   userState: {},\n    //   roomState: {},\n    // }\n  },\n  blockedUsers: {\n    ...STORE_FLAGS.DEFAULT,\n    items: [],\n  },\n};\n\nexport const {\n  setCurrentChannel,\n  setIsConnected,\n  updateGlobalUserState,\n  updateUserState,\n  updateRoomState,\n  removeChannel,\n} = createActions(\n  'SET_CURRENT_CHANNEL',\n  'SET_IS_CONNECTED',\n  'UPDATE_GLOBAL_USER_STATE',\n  'UPDATE_USER_STATE',\n  'UPDATE_ROOM_STATE',\n  'REMOVE_CHANNEL',\n);\n\nconst {\n  fetchBlockedUsersRequest,\n  fetchBlockedUsersSuccess,\n  fetchBlockedUsersFailure,\n} = createActions(\n  'FETCH_BLOCKED_USERS_REQUEST',\n  'FETCH_BLOCKED_USERS_SUCCESS',\n  'FETCH_BLOCKED_USERS_FAILURE',\n);\n\nconst parseBlockedUsers = R.pipe(\n  R.prop('blocks'),\n  R.map(R.path(['user', 'name'])),\n);\n\nexport const fetchBlockedUsers = (userId) => async (dispatch) => {\n  dispatch(fetchBlockedUsersRequest());\n  try {\n    const response = await apiFetchBlockedUsers(userId);\n\n    dispatch(fetchBlockedUsersSuccess({ items: parseBlockedUsers(response) }));\n  } catch (e) {\n    dispatch(fetchBlockedUsersFailure({ error: e.message }));\n  }\n};\n\nconst handleSetCurrentChannel = (state, { payload }) => ({\n  ...state,\n  currentChannel: payload,\n});\nconst handleSetIsConnected = (state, { payload }) => ({\n  ...state,\n  isConnected: payload,\n});\nconst handleUpdateGlobalUserState = (state, { payload: { tags } }) => ({\n  ...state,\n  globalState: { ...state.globalState, ...tags },\n});\nconst handleUpdateUserState = (state, { payload: { channel, tags } }) =>\n  R.mergeDeepRight(state, {\n    channels: {\n      [channel]: { userState: tags },\n    },\n  });\nconst handleUpdateRoomState = (state, { payload: { channel, tags } }) =>\n  R.mergeDeepRight(state, {\n    channels: {\n      [channel]: { roomState: tags },\n    },\n  });\nconst handleRemoveChannel = (state, { payload: channel }) => ({\n  ...state,\n  channels: R.omit([channel], state.channels),\n});\nconst handleFetchBlockUsers = {\n  [fetchBlockedUsersRequest]: (state) =>\n    R.mergeDeepRight(state, {\n      blockedUsers: { ...STORE_FLAGS.REQUEST },\n    }),\n  [fetchBlockedUsersSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      blockedUsers: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n    }),\n  [fetchBlockedUsersFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      blockedUsers: { ...STORE_FLAGS.FAILURE, error: payload.error },\n    }),\n};\n\nconst reducer = handleActions(\n  {\n    [setCurrentChannel]: handleSetCurrentChannel,\n    [setIsConnected]: handleSetIsConnected,\n    [updateGlobalUserState]: handleUpdateGlobalUserState,\n    [updateUserState]: handleUpdateUserState,\n    [updateRoomState]: handleUpdateRoomState,\n    [removeChannel]: handleRemoveChannel,\n    ...handleFetchBlockUsers,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { createActions, handleActions } from 'redux-actions';\n\nimport { STORE_FLAGS } from 'utils/constants';\nimport { fetchTwitchEmotesBySets } from 'utils/api';\n\nconst defaultState = {\n  ...STORE_FLAGS.DEFAULT,\n  items: {\n    // [setId]: [\n    //   {\n    //     code: \"PartyPoro\",\n    //     id: 300949540,\n    //   },\n    // ],\n  },\n};\n\nconst {\n  fetchTwitchEmotesRequest,\n  fetchTwitchEmotesSuccess,\n  fetchTwitchEmotesFailure,\n} = createActions(\n  'FETCH_TWITCH_EMOTES_REQUEST',\n  'FETCH_TWITCH_EMOTES_SUCCESS',\n  'FETCH_TWITCH_EMOTES_FAILURE',\n);\n\nexport const fetchTwitchEmotes = (userId) => async (dispatch) => {\n  dispatch(fetchTwitchEmotesRequest);\n\n  try {\n    const response = await fetchTwitchEmotesBySets(userId);\n    const data = { items: response.emoticon_sets };\n\n    dispatch(fetchTwitchEmotesSuccess(data));\n  } catch (e) {\n    dispatch(fetchTwitchEmotesFailure({ error: e.message }));\n  }\n};\n\nconst handleFetchTwitchEmotes = {\n  [fetchTwitchEmotesRequest]: (state) => ({\n    ...state,\n    ...STORE_FLAGS.REQUEST,\n  }),\n  [fetchTwitchEmotesSuccess]: (state, { payload }) => ({\n    ...state,\n    ...STORE_FLAGS.SUCCESS,\n    items: payload.items,\n  }),\n  [fetchTwitchEmotesFailure]: (state, { payload }) => ({\n    ...state,\n    ...STORE_FLAGS.FAILURE,\n    error: payload.error,\n  }),\n};\n\nconst reducer = handleActions(handleFetchTwitchEmotes, defaultState);\n\nexport default reducer;\n","import { createActions, handleActions } from 'redux-actions';\nimport * as R from 'ramda';\n\nimport {\n  fetchBttvGlobalEmotes as apiFetchBttvGlobalEmotes,\n  fetchBttvChannelEmotes as apiFetchBttvChannelEmotes,\n} from 'utils/api';\nimport { STORE_FLAGS } from 'utils/constants';\n\nconst defaultState = {\n  global: {\n    isLoading: false,\n    isLoaded: false,\n    isError: false,\n    error: null,\n    items: [],\n  },\n  channels: {\n    // [channel]: {\n    //   isLoading: false,\n    //   isLoaded: false,\n    //   isError: false,\n    //   error: null,\n    //   items: [],\n    // },\n  },\n};\n\nconst {\n  fetchBttvGlobalEmotesRequest,\n  fetchBttvGlobalEmotesSuccess,\n  fetchBttvGlobalEmotesFailure,\n  fetchBttvChannelEmotesRequest,\n  fetchBttvChannelEmotesSuccess,\n  fetchBttvChannelEmotesFailure,\n} = createActions(\n  'FETCH_BTTV_GLOBAL_EMOTES_REQUEST',\n  'FETCH_BTTV_GLOBAL_EMOTES_SUCCESS',\n  'FETCH_BTTV_GLOBAL_EMOTES_FAILURE',\n  'FETCH_BTTV_CHANNEL_EMOTES_REQUEST',\n  'FETCH_BTTV_CHANNEL_EMOTES_SUCCESS',\n  'FETCH_BTTV_CHANNEL_EMOTES_FAILURE',\n);\n\nconst parseBttvChannelEmotes = ({ channelEmotes, sharedEmotes }) => [\n  ...channelEmotes,\n  ...sharedEmotes,\n];\n\nexport const fetchBttvGlobalEmotes = () => async (dispatch) => {\n  dispatch(fetchBttvGlobalEmotesRequest());\n\n  try {\n    const items = await apiFetchBttvGlobalEmotes();\n    const data = { items };\n\n    dispatch(fetchBttvGlobalEmotesSuccess(data));\n  } catch (e) {\n    dispatch(fetchBttvGlobalEmotesFailure({ error: e.message }));\n  }\n};\n\nexport const fetchBttvChannelEmotes = (channelId, channel) => async (\n  dispatch,\n) => {\n  dispatch(fetchBttvChannelEmotesRequest({ channel }));\n\n  try {\n    const response = await apiFetchBttvChannelEmotes(channelId);\n    const data = {\n      channel,\n      items: parseBttvChannelEmotes(response),\n    };\n\n    dispatch(fetchBttvChannelEmotesSuccess(data));\n  } catch (e) {\n    dispatch(fetchBttvChannelEmotesFailure({ channel, error: e.message }));\n  }\n};\n\nconst handleFetchBttvGlobalEmotes = {\n  [fetchBttvGlobalEmotesRequest]: (state) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.REQUEST },\n    }),\n  [fetchBttvGlobalEmotesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n    }),\n  [fetchBttvGlobalEmotesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.FAILURE, error: payload.error },\n    }),\n};\n\nconst handleFetchBttvChannelEmotes = {\n  [fetchBttvChannelEmotesRequest]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.REQUEST },\n      },\n    }),\n  [fetchBttvChannelEmotesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n      },\n    }),\n  [fetchBttvChannelEmotesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.FAILURE, error: payload.error },\n      },\n    }),\n};\n\nconst reducer = handleActions(\n  {\n    ...handleFetchBttvGlobalEmotes,\n    ...handleFetchBttvChannelEmotes,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { createActions, handleActions } from 'redux-actions';\nimport * as R from 'ramda';\n\nimport {\n  fetchFfzGlobalEmotes as apiFetchFfzGlobalEmotes,\n  fetchFfzChannelEmotes as apiFetchFfzChannelEmotes,\n} from 'utils/api';\nimport { STORE_FLAGS } from 'utils/constants';\n\nconst defaultState = {\n  global: {\n    isLoading: false,\n    isLoaded: false,\n    isError: false,\n    error: null,\n    items: [],\n  },\n  channels: {\n    // [channel]: {\n    //   isLoading: false,\n    //   isLoaded: false,\n    //   isError: false,\n    //   error: null,\n    //   items: [],\n    // },\n  },\n};\n\nconst {\n  fetchFfzGlobalEmotesRequest,\n  fetchFfzGlobalEmotesSuccess,\n  fetchFfzGlobalEmotesFailure,\n  fetchFfzChannelEmotesRequest,\n  fetchFfzChannelEmotesSuccess,\n  fetchFfzChannelEmotesFailure,\n} = createActions(\n  'FETCH_FFZ_GLOBAL_EMOTES_REQUEST',\n  'FETCH_FFZ_GLOBAL_EMOTES_SUCCESS',\n  'FETCH_FFZ_GLOBAL_EMOTES_FAILURE',\n  'FETCH_FFZ_CHANNEL_EMOTES_REQUEST',\n  'FETCH_FFZ_CHANNEL_EMOTES_SUCCESS',\n  'FETCH_FFZ_CHANNEL_EMOTES_FAILURE',\n);\n\nconst parseFfzGlobalEmotes = ({ default_sets: defaultSets, sets }) =>\n  R.pipe(\n    R.pick(defaultSets),\n    R.values,\n    R.map(R.propOr([], 'emoticons')),\n    R.flatten,\n  )(sets);\n\nconst parseFfzChannelEmotes = R.pipe(\n  R.pathOr({}, ['sets']),\n  R.values,\n  R.map(R.pathOr([], ['emoticons'])),\n  R.flatten,\n);\n\nexport const fetchFfzGlobalEmotes = () => async (dispatch) => {\n  dispatch(fetchFfzGlobalEmotesRequest());\n\n  try {\n    const response = await apiFetchFfzGlobalEmotes();\n    const data = { items: parseFfzGlobalEmotes(response) };\n\n    dispatch(fetchFfzGlobalEmotesSuccess(data));\n  } catch (e) {\n    dispatch(fetchFfzGlobalEmotesFailure({ error: e.message }));\n  }\n};\n\nexport const fetchFfzChannelEmotes = (channelId, channel) => async (\n  dispatch,\n) => {\n  dispatch(fetchFfzChannelEmotesRequest({ channel }));\n\n  try {\n    const response = await apiFetchFfzChannelEmotes(channelId);\n    const data = {\n      channel,\n      items: parseFfzChannelEmotes(response),\n    };\n\n    dispatch(fetchFfzChannelEmotesSuccess(data));\n  } catch (e) {\n    dispatch(fetchFfzChannelEmotesFailure({ channel, error: e.message }));\n  }\n};\n\nconst handleFetchFfzGlobalEmotes = {\n  [fetchFfzGlobalEmotesRequest]: (state) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.REQUEST },\n    }),\n  [fetchFfzGlobalEmotesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n    }),\n  [fetchFfzGlobalEmotesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      global: { ...STORE_FLAGS.FAILURE, error: payload.error },\n    }),\n};\n\nconst handleFetchFfzChannelEmotes = {\n  [fetchFfzChannelEmotesRequest]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.REQUEST },\n      },\n    }),\n  [fetchFfzChannelEmotesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n      },\n    }),\n  [fetchFfzChannelEmotesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      channels: {\n        [payload.channel]: { ...STORE_FLAGS.FAILURE, error: payload.error },\n      },\n    }),\n};\n\nconst reducer = handleActions(\n  {\n    ...handleFetchFfzGlobalEmotes,\n    ...handleFetchFfzChannelEmotes,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport twitch from './twitch';\nimport bttv from './bttv';\nimport ffz from './ffz';\n\nexport default combineReducers({\n  twitch,\n  bttv,\n  ffz,\n});\n","// https://regex101.com/r/cpaNXh/1\nconst isStartsWithProtocolRegex = /^(?:(?:[a-z]+:)?\\/\\/)/;\n\nconst normalizeHref = (href) =>\n  isStartsWithProtocolRegex.test(href) ? href : `//${href}`;\n\nexport default normalizeHref;\n","import pt from 'prop-types';\nimport { parse as twemojiParser } from 'twemoji-parser';\nimport emojilib from 'emojilib/emojis';\nimport urlRegex from 'url-regex';\nimport * as R from 'ramda';\n\nimport normalizeHref from 'utils/normalizeHref';\n\nconst TWITCH_EMOTES_CDN = '//static-cdn.jtvnw.net/emoticons/v1';\nconst BTTV_EMOTES_CDN = '//cdn.betterttv.net/emote';\n\nconst mentionRegex = /^@([\\p{Letter}\\p{Number}_]+)/u;\nconst linkRegex = urlRegex({ strict: false });\n\nconst normalizeEmotesFromTags = R.pipe(\n  R.toPairs,\n  R.map(([id, value]) => R.map((v) => ({ id, ...v }), value)),\n  R.flatten,\n);\n\nconst getFfzSrcSet = R.pipe(\n  R.toPairs,\n  R.map(([dpi, url]) => `${url} ${dpi}x`),\n  R.join(', '),\n);\n\nexport const createTwitchEmote = ({ id, code }) => ({\n  type: 'twitch-emote',\n  alt: code,\n  src: `${TWITCH_EMOTES_CDN}/${id}/1.0`,\n  srcSet: `${TWITCH_EMOTES_CDN}/${id}/1.0 1x, ${TWITCH_EMOTES_CDN}/${id}/2.0 2x, ${TWITCH_EMOTES_CDN}/${id}/3.0 4x`,\n});\nexport const createBttvEmote = ({ id, code }) => ({\n  type: 'bttv-emote',\n  alt: code,\n  src: `${BTTV_EMOTES_CDN}/${id}/1x`,\n  srcSet: `${BTTV_EMOTES_CDN}/${id}/2x 2x, ${BTTV_EMOTES_CDN}/${id}/3x 4x`,\n});\nexport const createFfzEmote = ({ name, urls }) => ({\n  type: 'ffz-emote',\n  alt: name,\n  src: urls[1],\n  srcSet: getFfzSrcSet(urls),\n});\nexport const createEmoji = (alt, src) => ({\n  type: 'emoji',\n  alt: `:${alt}:`,\n  src,\n  srcSet: null,\n});\nexport const createMention = (text, target) => ({\n  type: 'mention',\n  text,\n  target,\n});\nexport const createLink = (href) => ({\n  type: 'link',\n  text: href,\n  href: normalizeHref(href),\n});\n\nexport const twitchEmoteType = pt.shape({\n  type: pt.oneOf(['twitch-emote']).isRequired,\n  alt: pt.string.isRequired,\n  src: pt.string.isRequired,\n  srcSet: pt.string.isRequired,\n});\nexport const bttvEmoteType = pt.shape({\n  type: pt.oneOf(['bttv-emote']).isRequired,\n  alt: pt.string.isRequired,\n  src: pt.string.isRequired,\n  srcSet: pt.string.isRequired,\n});\nexport const ffzEmoteType = pt.shape({\n  type: pt.oneOf(['ffz-emote']).isRequired,\n  alt: pt.string.isRequired,\n  src: pt.string.isRequired,\n  srcSet: pt.string.isRequired,\n});\nexport const emojiType = pt.shape({\n  type: pt.oneOf(['emoji']).isRequired,\n  alt: pt.string.isRequired,\n  src: pt.string.isRequired,\n  srcSet: pt.string,\n});\nexport const mentionType = pt.shape({\n  type: pt.oneOf(['mention']).isRequired,\n  text: pt.string.isRequired,\n  target: pt.string.isRequired,\n});\nexport const linkType = pt.shape({\n  type: pt.oneOf(['link']).isRequired,\n  text: pt.string.isRequired,\n  href: pt.string.isRequired,\n});\n\nconst regexMap = {\n  4: '>\\\\(', // '\\\\&gt\\\\;\\\\('\n  9: '<3', // '\\\\&lt\\\\;3'\n};\n\nconst findTwitchEmote = (name, items) =>\n  R.find(({ id, code }) => {\n    // 1-14 - match by regex\n    if (id >= 1 && id <= 14) {\n      const regexString = regexMap[id] || code;\n      return RegExp(`^${regexString}$`).test(name);\n    }\n\n    return name === code;\n  }, items);\nconst findTwitchEmoteInSets = (name, sets) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const set of Object.values(sets)) {\n    const result = findTwitchEmote(name, set);\n\n    if (result) return result;\n  }\n\n  return null;\n};\n\nconst findBttvEmote = (name, items) => R.find(R.propEq('code', name), items);\nconst findFfzEmote = (name, items) => R.find(R.propEq('name', name), items);\nconst findEmoji = (char) =>\n  R.pipe(R.filter(R.propEq('char', char)), R.keys, R.head)(emojilib);\n\nconst findEntity = (word, emotes, { parseTwitch = false }) => {\n  if (!emotes) return null;\n\n  const {\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  } = emotes;\n\n  if (parseTwitch) {\n    const twitchEmote =\n      findTwitchEmoteInSets(word, twitchGlobal) ||\n      findTwitchEmoteInSets(word, twitchUser);\n\n    if (twitchEmote) {\n      return createTwitchEmote({ id: twitchEmote.id, code: word });\n    }\n  }\n\n  const bttvEmote =\n    findBttvEmote(word, bttvGlobal) || findBttvEmote(word, bttvChannel);\n\n  if (bttvEmote) {\n    return createBttvEmote(bttvEmote);\n  }\n\n  const ffzEmote =\n    findFfzEmote(word, ffzGlobal) || findFfzEmote(word, ffzChannel);\n\n  if (ffzEmote) {\n    return createFfzEmote(ffzEmote);\n  }\n\n  // Don't parse two or more emotes without spaces between\n  // Don't parse emote if it's not in the emojilib package\n  const emojiMatch = twemojiParser(word, { assetType: 'png' });\n\n  if (\n    emojiMatch &&\n    emojiMatch.length === 1 &&\n    emojiMatch[0].text.length === word.length\n  ) {\n    const emoji = findEmoji(word);\n\n    if (emoji) {\n      const [{ url }] = emojiMatch;\n\n      return createEmoji(emoji, url);\n    }\n  }\n\n  const mentionMatch = word.match(mentionRegex);\n\n  if (mentionMatch) {\n    const [text, target] = mentionMatch;\n\n    return [\n      createMention(text, target.toLowerCase()),\n      word.length - text.length,\n    ];\n  }\n\n  const linkMatch = word.match(linkRegex);\n\n  if (linkMatch && linkMatch[0].length === word.length) {\n    return createLink(word);\n  }\n\n  return null;\n};\n\nconst formatMessage = (message, embeddedEmotes, emotes) => {\n  // If the message was sent by the current user, there is no embedded emotes\n  // So we need to parse twitch emotes manually\n\n  const isOwnMessage = embeddedEmotes === undefined || embeddedEmotes === null;\n  const hasEmbeddedEmotes =\n    embeddedEmotes && Object.keys(embeddedEmotes).length > 0;\n  const normalizedEmbeddedEmotes = normalizeEmotesFromTags(embeddedEmotes);\n\n  const result = [];\n  let offset = 0;\n  // Before that offset all content was added to the result array\n  let arrayOffset = 0;\n\n  // Check every word. From offset to the next space index\n  do {\n    const spaceIndex = message.indexOf(' ', offset + 1);\n\n    const isStart = offset === 0;\n    const isEnd = spaceIndex === -1;\n\n    const startIndex = isStart ? offset : offset + 1;\n    const endIndex = isEnd ? message.length : spaceIndex;\n\n    const word = message.substring(startIndex, endIndex);\n\n    if (word) {\n      let entity = null;\n\n      // Check embedded twitch emotes\n      if (hasEmbeddedEmotes) {\n        const embeddedEmote = R.find(\n          R.propEq('start', startIndex),\n          normalizedEmbeddedEmotes,\n        );\n\n        if (embeddedEmote) {\n          entity = createTwitchEmote({ id: embeddedEmote.id, code: word });\n        }\n      }\n\n      // Check other entities\n      if (!entity) {\n        entity = findEntity(word, emotes, { parseTwitch: isOwnMessage });\n      }\n\n      if (entity) {\n        // Push all text before this entity\n        if (arrayOffset !== startIndex) {\n          const textBefore = message.substring(arrayOffset, startIndex);\n          result.push(textBefore);\n        }\n\n        // If entity it's an array it means entity may be not full word\n        // The second element is the difference between word length and entity length\n        if (Array.isArray(entity)) {\n          const [entityObject, difference] = entity;\n          result.push(entityObject);\n          arrayOffset = endIndex - difference;\n        } else {\n          result.push(entity);\n          arrayOffset = endIndex;\n        }\n      }\n    }\n\n    // If it's the last word and it wasn't added to the result add it now\n    if (spaceIndex === -1 && arrayOffset !== endIndex) {\n      const textAfter = message.substring(arrayOffset, endIndex);\n      result.push(textAfter);\n    }\n\n    offset = spaceIndex;\n  } while (offset !== -1);\n\n  return result;\n};\n\nexport default formatMessage;\n","import * as R from 'ramda';\n\nexport const currentChannelSelector = R.pathOr('', ['chat', 'currentChannel']);\n\nexport const currentChannelIdSelector = (state) =>\n  R.pathOr(\n    null,\n    ['chat', 'channels', currentChannelSelector(state), 'roomState', 'roomId'],\n    state,\n  );\n\nexport const isConnectedSelector = (state) => state.chat.isConnected;\n\nexport const isBlockedUsersLoadedSelector = (state) =>\n  state.chat.blockedUsers.isLoaded || state.chat.blockedUsers.isError;\n\nexport const blockedUsersSelector = (state) => state.chat.blockedUsers.items;\n","import { createSelector } from 'reselect';\nimport * as R from 'ramda';\n\nimport {\n  createTwitchEmote,\n  createBttvEmote,\n  createFfzEmote,\n} from 'utils/formatMessage';\nimport { currentChannelSelector } from 'reducers/chat/selectors';\n\nconst createIsEmotesLoadedSelector = (type) => (state) => {\n  const channel = currentChannelSelector(state);\n  const globalLoaded =\n    state.emotes[type].global.isLoaded || state.emotes[type].global.isError;\n  const channelLoaded =\n    R.path(['emotes', type, 'channels', channel, 'isLoaded'], state) ||\n    R.path(['emotes', type, 'channels', channel, 'isError'], state);\n  return globalLoaded && channelLoaded;\n};\n\nexport const isBttvEmotesLoadedSelector = createIsEmotesLoadedSelector('bttv');\nexport const isFfzEmotesLoadedSelector = createIsEmotesLoadedSelector('ffz');\nexport const isTwitchEmotesLoadedSelector = (state) =>\n  state.emotes.twitch.isLoaded || state.emotes.twitch.isError;\n\nexport const isEmotesLoadedSelector = (state) =>\n  isTwitchEmotesLoadedSelector(state) &&\n  isBttvEmotesLoadedSelector(state) &&\n  isFfzEmotesLoadedSelector(state);\n\nconst twitchEmotesSelector = R.pathOr([], ['emotes', 'twitch', 'items']);\nconst twitchGlobalEmotesSelector = createSelector(\n  twitchEmotesSelector,\n  R.pick(['0']),\n);\nconst twitchUserEmotesSelector = createSelector(\n  twitchEmotesSelector,\n  R.omit(['0']),\n);\n\nconst createGlobalEmotesSelector = (type) =>\n  R.pathOr([], ['emotes', type, 'global', 'items']);\n\nconst createChannelEmotesSelector = (type) => (state) =>\n  R.pathOr(\n    [],\n    ['emotes', type, 'channels', currentChannelSelector(state), 'items'],\n    state,\n  );\n\nconst bttvGlobalEmotesSelector = createGlobalEmotesSelector('bttv');\nconst bttvChannelEmotesSelector = createChannelEmotesSelector('bttv');\n\nconst ffzGlobalEmotesSelector = createGlobalEmotesSelector('ffz');\nconst ffzChannelEmotesSelector = createChannelEmotesSelector('ffz');\n\nexport const emotesSelector = createSelector(\n  isEmotesLoadedSelector,\n  twitchGlobalEmotesSelector,\n  twitchUserEmotesSelector,\n  bttvGlobalEmotesSelector,\n  bttvChannelEmotesSelector,\n  ffzGlobalEmotesSelector,\n  ffzChannelEmotesSelector,\n  (\n    isEmotesLoaded,\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  ) => {\n    if (!isEmotesLoaded) return null;\n\n    return {\n      twitchGlobal,\n      twitchUser,\n      bttvGlobal,\n      bttvChannel,\n      ffzGlobal,\n      ffzChannel,\n    };\n  },\n);\n\n// prettier-ignore\nconst regexEmotesMap = {\n  '[oO](_|\\\\.)[oO]': 'O_o',\n  '\\\\&gt\\\\;\\\\(':     '>(',\n  '\\\\&lt\\\\;3':       '<3',\n  '\\\\:-?(o|O)':      ':O',\n  '\\\\:-?(p|P)':      ':P',\n  '\\\\:-?[\\\\\\\\/]':    ':/',\n  '\\\\:-?[z|Z|\\\\|]':  ':Z',\n  '\\\\:-?\\\\(':        ':(',\n  '\\\\:-?\\\\)':        ':)',\n  '\\\\:-?D':          ':D',\n  '\\\\;-?(p|P)':      ';P',\n  '\\\\;-?\\\\)':        ';)',\n  'R-?\\\\)':          'R)',\n  'B-?\\\\)':          'B)',\n};\n\nconst createGlobalTwitchEmote = ({ id, code }) =>\n  createTwitchEmote({ id, code: regexEmotesMap[code] || code });\n\nexport const emoteCategoriesSelector = createSelector(\n  emotesSelector,\n  (emotes) => {\n    if (!emotes) return [];\n\n    const {\n      twitchGlobal,\n      twitchUser,\n      bttvGlobal,\n      bttvChannel,\n      ffzGlobal,\n      ffzChannel,\n    } = emotes;\n\n    return [\n      {\n        title: 'BetterTTV Channel Emotes',\n        items: bttvChannel.map(createBttvEmote),\n      },\n      {\n        title: 'FrankerFaceZ Channel Emotes',\n        items: ffzChannel.map(createFfzEmote),\n      },\n      ...R.pipe(\n        R.values,\n        R.map((items) => ({ items: R.map(createTwitchEmote, items) })),\n      )(twitchUser),\n      {\n        title: 'Twitch',\n        items: R.map(createGlobalTwitchEmote, R.propOr([], '0', twitchGlobal)),\n      },\n      {\n        title: 'BetterTTV',\n        items: bttvGlobal.map(createBttvEmote),\n      },\n      {\n        title: 'FrankerFaceZ',\n        items: ffzGlobal.map(createFfzEmote),\n      },\n    ].filter(({ items }) => items.length > 0);\n  },\n);\n","import * as R from 'ramda';\n\nimport { currentChannelSelector } from 'reducers/chat/selectors';\n\nexport const globalBadgesSelector = (state) => state.badges.global.items;\nexport const channelBadgesSelector = (state) =>\n  R.pathOr(\n    {},\n    ['badges', 'channels', currentChannelSelector(state), 'items'],\n    state,\n  );\n\nconst isGlobalBadgesLoadedSelector = (state) =>\n  state.badges.global.isLoaded || state.badges.global.isError;\n\nconst isChannelBadgesLoadedSelector = (state) => {\n  const channel = currentChannelSelector(state);\n  return (\n    R.pathOr(false, ['badges', 'channels', channel, 'isLoaded'], state) ||\n    R.pathOr(false, ['badges', 'channels', channel, 'isError'], state)\n  );\n};\n\nexport const isBadgesLoadedSelector = (state) =>\n  isGlobalBadgesLoadedSelector(state) && isChannelBadgesLoadedSelector(state);\n","import * as R from 'ramda';\n\nconst createBadge = ({\n  title,\n  description,\n  image_url_1x: imageUrl1x,\n  image_url_2x: imageUrl2x,\n  image_url_4x: imageUrl4x,\n}) => ({\n  alt: title,\n  label: description,\n  src: imageUrl1x,\n  srcSet: `${imageUrl1x} 1x, ${imageUrl2x} 2x, ${imageUrl4x} 4x`,\n});\n\nconst getMessageBadges = (badges, globalBadges, channelBadges) => {\n  const mapBadges = ([name, version]) => {\n    const badge =\n      R.pathOr(false, [name, 'versions', version], channelBadges) ||\n      R.pathOr(false, [name, 'versions', version], globalBadges);\n\n    return badge ? createBadge(badge) : false;\n  };\n\n  return R.pipe(R.toPairs, R.map(mapBadges), R.filter(Boolean))(badges);\n};\n\nexport default getMessageBadges;\n","import { parse } from 'tekko';\n\nimport {\n  globalBadgesSelector,\n  channelBadgesSelector,\n} from 'reducers/badges/selectors';\nimport { emotesSelector } from 'reducers/emotes/selectors';\nimport { blockedUsersSelector } from 'reducers/chat/selectors';\nimport { MESSAGE_TYPES } from 'utils/constants';\nimport {\n  getIsAction,\n  normalizeActionMessage,\n  parseMessageTags,\n} from 'twitch-simple-irc';\nimport formatMessage from 'utils/formatMessage';\nimport getMessageBadges from 'utils/getMessageBadges';\n\nconst normalizeRecentMessages = (state, messages) => {\n  const globalBadges = globalBadgesSelector(state);\n  const channelBadges = channelBadgesSelector(state);\n  const emotes = emotesSelector(state);\n  const blockedUsers = blockedUsersSelector(state);\n\n  const filterMessages = ({ command, prefix: { user } }) =>\n    command === 'PRIVMSG' && !blockedUsers.includes(user);\n\n  const normalizeMessages = ({\n    tags,\n    params: [channel, message],\n    prefix: { user },\n  }) => {\n    const isAction = getIsAction(message);\n    const normalizedMessage = isAction\n      ? normalizeActionMessage(message)\n      : message;\n    const parsedTags = parseMessageTags(tags);\n\n    return {\n      type: MESSAGE_TYPES.MESSAGE,\n      message: normalizedMessage,\n      messageArray: formatMessage(normalizedMessage, parsedTags.emotes, emotes),\n      tags: parsedTags,\n      badges: getMessageBadges(parsedTags.badges, globalBadges, channelBadges),\n      user,\n      channel: channel.slice(1),\n      isAction,\n      isHistory: true,\n    };\n  };\n\n  return messages\n    .map((m) => parse(m))\n    .filter(filterMessages)\n    .map(normalizeMessages);\n};\n\nexport default normalizeRecentMessages;\n","import { createAction, createActions, handleActions } from 'redux-actions';\nimport * as R from 'ramda';\n\nimport { emotesSelector } from 'reducers/emotes/selectors';\nimport {\n  globalBadgesSelector,\n  channelBadgesSelector,\n} from 'reducers/badges/selectors';\nimport { blockedUsersSelector } from 'reducers/chat/selectors';\nimport { fetchRecentMessages as apiFetchRecentMessages } from 'utils/api';\nimport {\n  CHANNEL_MESSAGES_LIMIT,\n  STORE_USERS_LIMIT,\n  MESSAGE_TYPES,\n  STORE_FLAGS,\n} from 'utils/constants';\nimport formatMessage from 'utils/formatMessage';\nimport getMessageBadges from 'utils/getMessageBadges';\nimport normalizeRecentMessages from 'utils/normalizeRecentMessages';\n\nconst defaultState = {\n  // [channel]: {\n  //   history: {\n  //     isLoading: true,\n  //     isLoaded: false,\n  //     isError: false,\n  //     error: null,\n  //   },\n  //   isEven: false,\n  //   items: [],\n  //   users: [],\n  // },\n};\n\nconst {\n  addMessages,\n  fetchRecentMessagesRequest,\n  fetchRecentMessagesSuccess,\n  fetchRecentMessagesFailure,\n} = createActions(\n  'ADD_MESSAGES',\n  'FETCH_RECENT_MESSAGES_REQUEST',\n  'FETCH_RECENT_MESSAGES_SUCCESS',\n  'FETCH_RECENT_MESSAGES_FAILURE',\n);\n\nexport const clearChat = createAction('CLEAR_CHAT');\n\nconst sliceMessages = (items) => {\n  const diff = items.length - CHANNEL_MESSAGES_LIMIT;\n  return diff > 0 ? items.slice(diff) : items;\n};\n\nconst sliceUsers = (users) => {\n  const diff = users.length - STORE_USERS_LIMIT;\n  return diff > 0 ? users.slice(diff) : users;\n};\n\nconst getIsEven = (prev, addedItemsCount, isSliced) => {\n  if (isSliced) {\n    return addedItemsCount % 2 ? !prev : prev;\n  }\n  return prev;\n};\n\nexport const addRecentMessages = (channel) => (dispatch, getState) => {\n  const state = getState();\n  const messages = R.pathOr(\n    [],\n    ['messages', channel, 'history', 'items'],\n    state,\n  );\n  const data = {\n    items: normalizeRecentMessages(state, messages),\n    isHistory: true,\n  };\n\n  dispatch(addMessages(data));\n};\n\nexport const fetchRecentMessages = (channel) => async (dispatch) => {\n  dispatch(fetchRecentMessagesRequest({ channel }));\n  try {\n    const response = await apiFetchRecentMessages(channel);\n    const data = { channel, items: response.messages };\n\n    dispatch(fetchRecentMessagesSuccess(data));\n  } catch (e) {\n    dispatch(fetchRecentMessagesFailure({ channel, error: e.message }));\n  }\n};\n\nexport const addMessage = (payload) => (dispatch, getState) => {\n  const { message, tags, user } = payload;\n  const state = getState();\n  const blockedUsers = blockedUsersSelector(state);\n\n  if (blockedUsers.includes(user)) return;\n\n  const globalBadges = globalBadgesSelector(state);\n  const channelBadges = channelBadgesSelector(state);\n  const emotes = emotesSelector(state);\n\n  const normalizedMessage = {\n    ...payload,\n    type: MESSAGE_TYPES.MESSAGE,\n    messageArray: formatMessage(message, tags.emotes, emotes),\n    badges: getMessageBadges(tags.badges, globalBadges, channelBadges),\n  };\n\n  dispatch(addMessages({ items: [normalizedMessage] }));\n};\n\nexport const addNoticeMessage = (message) => (dispatch) => {\n  const normalizedMessage = {\n    ...message,\n    type: MESSAGE_TYPES.NOTICE_MESSAGE,\n  };\n\n  dispatch(addMessages({ items: [normalizedMessage] }));\n};\n\nexport const addUserNoticeMessage = (message) => (dispatch) => {\n  const normalizedMessage = {\n    ...message,\n    type: MESSAGE_TYPES.USER_NOTICE_MESSAGE,\n  };\n\n  dispatch(addMessages({ items: [normalizedMessage] }));\n};\n\nconst handleAddMessages = (state, { payload }) => {\n  const { items, isHistory } = payload;\n  const channel = R.path([0, 'channel'], items);\n  const prevItems = R.pathOr([], [channel, 'items'], state);\n  const newItems = isHistory\n    ? [...items, ...prevItems]\n    : [...prevItems, ...items];\n  const slicedMessages = sliceMessages(newItems);\n\n  const isSliced = newItems.length > slicedMessages.length;\n  const prevIsEven = R.pathOr(false, [channel, 'isEven'], state);\n  const isEven = getIsEven(prevIsEven, items.length, isSliced);\n\n  const clearHistory = isHistory ? { history: { items: [] } } : {};\n\n  let users = R.pathOr([], [channel, 'users'], state);\n  items.forEach((message) => {\n    const displayName = R.path(['tags', 'displayName'], message);\n    if (displayName && !users.includes(displayName)) {\n      users = [...users, displayName];\n    }\n  });\n  users = sliceUsers(users);\n\n  return R.mergeDeepRight(state, {\n    [channel]: {\n      ...clearHistory,\n      items: slicedMessages,\n      users,\n      isEven,\n    },\n  });\n};\n\nconst handleClearChat = (state, { payload }) => {\n  const {\n    channel,\n    tags: { targetUserId },\n  } = payload;\n\n  const newItems = state[channel].items.map((message) =>\n    message.tags.userId === targetUserId && !message.isHistory\n      ? { ...message, isDeleted: true }\n      : message,\n  );\n\n  return {\n    ...state,\n    [channel]: {\n      ...state[channel],\n      items: newItems,\n    },\n  };\n};\n\nconst handleFetchRecentMessages = {\n  [fetchRecentMessagesRequest]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      [payload.channel]: {\n        history: { ...STORE_FLAGS.REQUEST },\n      },\n    }),\n  [fetchRecentMessagesSuccess]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      [payload.channel]: {\n        history: { ...STORE_FLAGS.SUCCESS, items: payload.items },\n      },\n    }),\n  [fetchRecentMessagesFailure]: (state, { payload }) =>\n    R.mergeDeepRight(state, {\n      [payload.channel]: {\n        history: { ...STORE_FLAGS.FAILURE, error: payload.error },\n      },\n    }),\n};\n\nconst reducer = handleActions(\n  {\n    [addMessages]: handleAddMessages,\n    [clearChat]: handleClearChat,\n    ...handleFetchRecentMessages,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { createAction, handleActions } from 'redux-actions';\n\nconst getOptionsFromLocalStorage = () => {\n  try {\n    return JSON.parse(localStorage.options);\n  } catch {\n    return {};\n  }\n};\n\nconst defaultState = {\n  showTimestamps: false,\n  splitChat: true,\n  blacklistKeywords: '',\n  highlightKeywords: '',\n  fixedWidth: false,\n  ...getOptionsFromLocalStorage(),\n};\n\nexport const changeOption = createAction('CHANGE_OPTION', (option, value) => {\n  localStorage.setItem(\n    'options',\n    JSON.stringify({\n      ...getOptionsFromLocalStorage(),\n      [option]: value,\n    }),\n  );\n\n  return {\n    option,\n    value,\n  };\n});\nconst handleChangeOption = (state, { payload: { option, value } }) => ({\n  ...state,\n  [option]: value,\n});\n\nconst reducer = handleActions(\n  {\n    [changeOption]: handleChangeOption,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport auth from './auth';\nimport badges from './badges';\nimport chat from './chat';\nimport emotes from './emotes/index';\nimport messages from './messages';\nimport options from './options';\n\nexport default combineReducers({\n  auth,\n  badges,\n  chat,\n  emotes,\n  messages,\n  options,\n});\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from 'reducers';\n\nconst enhancer =\n  process.env.NODE_ENV === 'production'\n    ? applyMiddleware(thunk)\n    : compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__\n          ? window.__REDUX_DEVTOOLS_EXTENSION__()\n          : (noop) => noop,\n      );\n\nconst store = createStore(rootReducer, {}, enhancer);\n\nexport default store;\n","export const isAuthSelector = (state) => state.auth.isAuth;\nexport const userLoginSelector = (state) => state.auth.user.login;\nexport const userIdSelector = (state) => state.auth.user.id;\nexport const userDisplayNameSelector = (state) => state.auth.user.displayName;\n","import * as R from 'ramda';\n\nimport { currentChannelSelector } from 'reducers/chat/selectors';\n\nexport const messagesSelector = (state) =>\n  R.pathOr([], ['messages', currentChannelSelector(state), 'items'], state);\n\nexport const usersSelector = (state) =>\n  R.pathOr([], ['messages', currentChannelSelector(state), 'users'], state);\n\nexport const isHistoryLoadingSelector = (state) =>\n  R.pathOr(false, [\n    'messages',\n    currentChannelSelector(state),\n    'history',\n    'isLoading',\n  ])(state);\n\nexport const isHistoryLoadedSelector = (state) =>\n  R.pathOr(false, [\n    'messages',\n    currentChannelSelector(state),\n    'history',\n    'isLoaded',\n  ])(state);\n\nexport const isEvenSelector = (state) =>\n  R.pathOr(false, ['messages', currentChannelSelector(state), 'isEven'], state);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { isAuthSelector, userIdSelector } from 'reducers/auth/selectors';\nimport { fetchTwitchEmotes } from 'reducers/emotes/twitch';\nimport {\n  fetchBttvGlobalEmotes,\n  fetchBttvChannelEmotes,\n} from 'reducers/emotes/bttv';\nimport {\n  fetchFfzGlobalEmotes,\n  fetchFfzChannelEmotes,\n} from 'reducers/emotes/ffz';\nimport {\n  isTwitchEmotesLoadedSelector,\n  isBttvEmotesLoadedSelector,\n  isFfzEmotesLoadedSelector,\n} from 'reducers/emotes/selectors';\nimport { fetchRecentMessages, addRecentMessages } from 'reducers/messages';\nimport { isHistoryLoadedSelector } from 'reducers/messages/selectors';\nimport { fetchBlockedUsers } from 'reducers/chat';\nimport {\n  currentChannelSelector,\n  currentChannelIdSelector,\n  isBlockedUsersLoadedSelector,\n} from 'reducers/chat/selectors';\nimport { fetchGlobalBadges, fetchChannelBadges } from 'reducers/badges';\nimport { isBadgesLoadedSelector } from 'reducers/badges/selectors';\n\nconst useFetchChatData = () => {\n  const dispatch = useDispatch();\n\n  const isAuth = useSelector(isAuthSelector);\n  const userId = useSelector(userIdSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const currentChannelId = useSelector(currentChannelIdSelector);\n\n  const isTwitchEmotesLoaded = useSelector(isTwitchEmotesLoadedSelector);\n  const isBttvEmotesLoaded = useSelector(isBttvEmotesLoadedSelector);\n  const isFfzEmotesLoaded = useSelector(isFfzEmotesLoadedSelector);\n  const isBadgesLoaded = useSelector(isBadgesLoadedSelector);\n  const isHistoryLoaded = useSelector(isHistoryLoadedSelector);\n  const isBlockedUsersLoaded = useSelector(isBlockedUsersLoadedSelector);\n\n  const isReadyToAddRecentMessages =\n    currentChannel &&\n    (isAuth ? isTwitchEmotesLoaded : true) &&\n    (isAuth ? isBlockedUsersLoaded : true) &&\n    isBttvEmotesLoaded &&\n    isFfzEmotesLoaded &&\n    isBadgesLoaded &&\n    isHistoryLoaded;\n\n  useEffect(() => {\n    dispatch(fetchBttvGlobalEmotes());\n    dispatch(fetchFfzGlobalEmotes());\n    dispatch(fetchGlobalBadges());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentChannel) {\n      dispatch(fetchRecentMessages(currentChannel));\n    }\n  }, [dispatch, currentChannel]);\n\n  useEffect(() => {\n    if (isReadyToAddRecentMessages) {\n      dispatch(addRecentMessages(currentChannel));\n    }\n  }, [dispatch, currentChannel, isReadyToAddRecentMessages]);\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(fetchTwitchEmotes(userId));\n      dispatch(fetchBlockedUsers(userId));\n    }\n  }, [dispatch, userId]);\n\n  useEffect(() => {\n    // TODO: check if emotes for the current channel is already in the store\n    if (currentChannel && currentChannelId) {\n      dispatch(fetchBttvChannelEmotes(currentChannelId, currentChannel));\n      dispatch(fetchFfzChannelEmotes(currentChannelId, currentChannel));\n      dispatch(fetchChannelBadges(currentChannelId, currentChannel));\n    }\n  }, [dispatch, currentChannel, currentChannelId]);\n};\n\nexport default useFetchChatData;\n","import { useState, useEffect } from 'react';\n\nconst useLocationHash = () => {\n  const [hash, setHash] = useState(window.location.hash);\n\n  useEffect(() => {\n    const handleHashChange = () => setHash(window.location.hash);\n\n    window.addEventListener('hashchange', handleHashChange);\n\n    return () => window.removeEventListener('hashchange', handleHashChange);\n  }, []);\n\n  return hash;\n};\n\nexport default useLocationHash;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useLocationHash from 'hooks/useLocationHash';\nimport { setCurrentChannel } from 'reducers/chat';\n\nconst useCurrentChannel = () => {\n  const dispatch = useDispatch();\n  const hash = useLocationHash();\n\n  useEffect(() => {\n    if (hash && hash.length > 1) {\n      const channel = hash.slice(1);\n\n      dispatch(setCurrentChannel(channel));\n\n      localStorage.setItem('lastChannel', channel);\n\n      document.title = channel\n        ? `#${channel} - ${process.env.REACT_APP_NAME} `\n        : process.env.REACT_APP_NAME;\n    }\n  }, [dispatch, hash]);\n};\n\nexport default useCurrentChannel;\n","import { useRef, useEffect } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport default usePrevious;\n","import uuid from 'uuid/v4';\n\nconst createOwnMessage = (message, tags, channel, user, userId) => {\n  if (typeof message !== 'string') return {};\n\n  const isAction = message.startsWith('/me ');\n\n  return {\n    message: isAction ? message.slice(4) : message,\n    tags: {\n      ...tags,\n      id: uuid(),\n      tmiSentTs: new Date().getTime(),\n      userId,\n    },\n    user,\n    channel,\n    isAction,\n  };\n};\n\nexport default createOwnMessage;\n","import { useEffect, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport { Client } from 'twitch-simple-irc';\n\nimport usePrevious from 'hooks/usePrevious';\nimport {\n  addMessage,\n  addNoticeMessage,\n  addUserNoticeMessage,\n  clearChat,\n} from 'reducers/messages';\nimport {\n  setIsConnected,\n  updateGlobalUserState,\n  updateUserState,\n  updateRoomState,\n} from 'reducers/chat';\nimport { currentChannelSelector } from 'reducers/chat/selectors';\nimport { isAuthSelector, userIdSelector } from 'reducers/auth/selectors';\nimport { NOTICE_MESSAGE_TAGS } from 'utils/constants';\nimport createOwnMessage from 'utils/createOwnMessage';\n\nconst useTwitchClient = (name, auth) => {\n  const dispatch = useDispatch();\n\n  const currentChannel = useSelector(currentChannelSelector);\n  const prevChannel = usePrevious(currentChannel);\n  const userId = useSelector(userIdSelector);\n  const isAuth = useSelector(isAuthSelector);\n  const clientRef = useRef(null);\n\n  useEffect(() => {\n    if (!currentChannel) return () => {};\n\n    const handleRegister = () => dispatch(setIsConnected(true));\n    const handleDisconnect = () => dispatch(setIsConnected(true));\n    const handleGlobalUserState = (data) =>\n      dispatch(updateGlobalUserState(data));\n    const handleUserState = (data) => dispatch(updateUserState(data));\n    const handleRoomState = (data) => dispatch(updateRoomState(data));\n    const handleMessage = (data) => dispatch(addMessage(data));\n    const handleNotice = (data) => {\n      const normalizedMessage = { ...data, tags: { ...data.tags, id: uuid() } };\n      dispatch(addNoticeMessage(normalizedMessage));\n    };\n    const handleUserNotice = (data) => dispatch(addUserNoticeMessage(data));\n    const handleClearChat = (data) => {\n      if (!data.tags.targetUserId) return;\n      dispatch(clearChat(data));\n    };\n\n    if (!clientRef.current) {\n      (async () => {\n        clientRef.current = new Client(isAuth ? { name, auth } : {});\n\n        await clientRef.current.connect();\n\n        clientRef.current.join(currentChannel);\n      })();\n    } else if (prevChannel !== currentChannel) {\n      clientRef.current.part(prevChannel);\n      clientRef.current.join(currentChannel);\n    }\n\n    clientRef.current.on('register', handleRegister);\n    clientRef.current.on('disconnect', handleDisconnect);\n    clientRef.current.on('globaluserstate', handleGlobalUserState);\n    clientRef.current.on('userstate', handleUserState);\n    clientRef.current.on('roomstate', handleRoomState);\n    clientRef.current.on('message', handleMessage);\n    clientRef.current.on('notice', handleNotice);\n    clientRef.current.on('usernotice', handleUserNotice);\n    clientRef.current.on('clearchat', handleClearChat);\n\n    return () => {\n      clientRef.current.off('register', handleRegister);\n      clientRef.current.off('disconnect', handleDisconnect);\n      clientRef.current.off('globaluserstate', handleGlobalUserState);\n      clientRef.current.off('userstate', handleUserState);\n      clientRef.current.off('roomstate', handleRoomState);\n      clientRef.current.off('message', handleMessage);\n      clientRef.current.off('notice', handleNotice);\n      clientRef.current.off('usernotice', handleUserNotice);\n      clientRef.current.off('clearchat', handleClearChat);\n    };\n  }, [dispatch, name, auth, currentChannel, prevChannel, isAuth]);\n\n  const client = () => ({\n    say(channel, message) {\n      if (!clientRef.current) return;\n\n      clientRef.current.say(channel, message);\n\n      function handleUserState(data) {\n        if (data.channel === channel) {\n          const m = createOwnMessage(message, data.tags, channel, name, userId);\n          dispatch(addMessage(m));\n          // eslint-disable-next-line no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function handleNotice(data) {\n        if (\n          data.channel === channel &&\n          NOTICE_MESSAGE_TAGS.includes(data.tags.msgId)\n        ) {\n          // eslint-disable-next-line no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function removeListeners() {\n        clientRef.current.off('notice', handleNotice);\n        clientRef.current.off('userstate', handleUserState);\n      }\n\n      clientRef.current.on('notice', handleNotice);\n      clientRef.current.on('userstate', handleUserState);\n\n      setTimeout(() => removeListeners(), 10000);\n    },\n  });\n\n  return useMemo(client, [clientRef, dispatch, name, userId]);\n};\n\nexport default useTwitchClient;\n","import emojilib from 'emojilib/emojis';\n\nconst replaceEmojis = (text) =>\n  text\n    .split(' ')\n    .map((word) => {\n      if (word[0] !== ':' || word[word.length - 1] !== ':') {\n        return word;\n      }\n\n      const name = word.slice(1, -1);\n      const emoji = emojilib[name];\n\n      return emoji && emoji.char ? emoji.char : word;\n    })\n    .join(' ');\n\nexport default replaceEmojis;\n","import { useCallback, useState } from 'react';\n\nconst useSetState = (initialState) => {\n  const [state, set] = useState(initialState);\n  const setState = useCallback(\n    (patch) => {\n      set((prevState) => ({\n        ...prevState,\n        ...(patch instanceof Function ? patch(prevState) : patch),\n      }));\n    },\n    [set],\n  );\n\n  return [state, setState];\n};\n\nexport default useSetState;\n","export const optionsSelector = (state) => [\n  {\n    title: 'My preferences',\n    items: [\n      {\n        type: 'SWITCH',\n        id: 'show-timestamps',\n        name: 'showTimestamps',\n        title: 'Show Timestamps',\n        description: '',\n        value: state.options.showTimestamps,\n      },\n      {\n        type: 'SWITCH',\n        id: 'split-chat',\n        name: 'splitChat',\n        title: 'Split Chat',\n        description: '',\n        value: state.options.splitChat,\n      },\n      {\n        type: 'SWITCH',\n        id: 'fixed-width',\n        name: 'fixedWidth',\n        title: 'Fixed Width',\n        description: '',\n        value: state.options.fixedWidth,\n      },\n      // {\n      //   type: 'INPUT',\n      //   id: 'blacklist-keywords',\n      //   name: 'blacklistKeywords',\n      //   title: 'Set Blacklist Keywords',\n      //   description: '',\n      //   value: state.options.blacklistKeywords,\n      // },\n      // {\n      //   type: 'INPUT',\n      //   id: 'highlight-keywords',\n      //   name: 'highlightKeywords',\n      //   title: 'Set Highlight Keywords',\n      //   description: '',\n      //   value: state.options.highlightKeywords,\n      // },\n    ],\n  },\n];\n\nexport const isShowTimestampsSelector = (state) => state.options.showTimestamps;\nexport const isSplitChatSelector = (state) => state.options.splitChat;\nexport const isFixedWidthSelector = (state) => state.options.fixedWidth;\n","const getUserSuggestions = (beginText, users, userDisplayName, limit = 5) => {\n  const result = [];\n  const beginTextLower = beginText.toLowerCase();\n  const userDisplayNameLower = userDisplayName.toLowerCase();\n\n  if (userDisplayNameLower.startsWith(beginTextLower)) {\n    result.push(userDisplayName);\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const name of users) {\n    if (result.length === limit) return result;\n\n    const nameLower = name.toLowerCase();\n\n    // eslint-disable-next-line no-continue\n    if (nameLower === userDisplayNameLower) continue;\n\n    if (beginTextLower === '' || nameLower.startsWith(beginTextLower)) {\n      result.push(name);\n    }\n  }\n\n  return result;\n};\n\nexport default getUserSuggestions;\n","/* eslint-disable no-restricted-syntax */\nimport {\n  createTwitchEmote,\n  createBttvEmote,\n  createFfzEmote,\n} from 'utils/formatMessage';\n\nconst checkTwitch = (result, sets, beginText, limit) => {\n  for (const items of Object.values(sets)) {\n    for (const emote of items) {\n      if (result.length === limit) return true;\n\n      if (emote.code.toLowerCase().includes(beginText)) {\n        result.push(createTwitchEmote(emote));\n      }\n    }\n  }\n\n  return false;\n};\n\nconst checkBttv = (result, items, beginText, limit) => {\n  for (const emote of items) {\n    if (result.length === limit) return true;\n\n    if (emote.code.toLowerCase().includes(beginText)) {\n      result.push(createBttvEmote(emote));\n    }\n  }\n\n  return false;\n};\n\nconst checkFfz = (result, items, beginText, limit) => {\n  for (const emote of items) {\n    if (result.length === limit) return true;\n\n    if (emote.name.toLowerCase().includes(beginText)) {\n      result.push(createFfzEmote(emote));\n    }\n  }\n\n  return false;\n};\n\nconst getEmoteSuggestions = (beginText, emotes, limit = 10) => {\n  if (!emotes) return [];\n\n  const result = [];\n  const {\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  } = emotes;\n\n  const beginTextLower = beginText.toLowerCase();\n\n  // eslint-disable-next-line no-unused-vars\n  const isOver =\n    checkBttv(result, bttvChannel, beginTextLower, limit) ||\n    checkFfz(result, ffzChannel, beginTextLower, limit) ||\n    checkTwitch(result, twitchUser, beginTextLower, limit) ||\n    checkTwitch(result, twitchGlobal, beginTextLower, limit) ||\n    checkBttv(result, bttvGlobal, beginTextLower, limit) ||\n    checkFfz(result, ffzGlobal, beginTextLower, limit);\n\n  return result;\n};\n\nexport default getEmoteSuggestions;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M8.5 10L4 5.5 5.5 4 10 8.5 14.5 4 16 5.5 11.5 10l4.5 4.5-1.5 1.5-4.5-4.5L5.5 16 4 14.5 8.5 10z\"\n});\n\nvar SvgClose = function SvgClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close.992b249e.svg\";\nexport { ForwardRef as ReactComponent };","import pt from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst sizes = {\n  small: css`\n    width: 24px;\n    height: 24px;\n  `,\n  medium: css`\n    width: 30px;\n    height: 30px;\n  `,\n  // large: css``,\n};\n\nconst IconButton = styled.button.attrs({ type: 'button' })`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  outline: none;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  ${(p) => sizes[p.size]};\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n\n  &:active {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n`;\n\nIconButton.defaultProps = {\n  size: 'medium',\n};\n\nIconButton.propTypes = {\n  size: pt.oneOf(Object.keys(sizes)),\n};\n\nexport default IconButton;\n","import React from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\n\nimport { ReactComponent as CloseIconSvg } from 'icons/close.svg';\nimport IconButton from 'components/IconButton';\n\nconst ChatModalRoot = styled.div`\n  height: 100%;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 4px 8px 0px,\n    rgba(0, 0, 0, 0.4) 0px 0px 4px 0px;\n  background-color: #18181b;\n  white-space: normal;\n  color: #fff;\n  border-radius: 4px;\n`;\nconst CloseButton = styled(IconButton).attrs({ size: 'small' })`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\nconst CloseIcon = styled(CloseIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\nconst ChatModal = ({ children, onClose }) => (\n  <ChatModalRoot>\n    <CloseButton onClick={onClose}>\n      <CloseIcon />\n    </CloseButton>\n    {children}\n  </ChatModalRoot>\n);\n\nChatModal.defaultProps = {};\n\nChatModal.propTypes = {\n  children: pt.node.isRequired,\n  onClose: pt.func.isRequired,\n};\n\nexport default ChatModal;\n","import CustomScrollbar from 'react-scrollbars-custom';\nimport styled from 'styled-components';\n\nconst Scrollbar = styled(CustomScrollbar).attrs({\n  disableTracksWidthCompensation: true,\n})`\n  overflow-y: auto;\n\n  .ScrollbarsCustom-TrackY {\n    background: none !important;\n  }\n\n  .ScrollbarsCustom-ThumbY {\n    margin-left: auto;\n    margin-right: auto;\n    width: 6px !important;\n  }\n`;\n\nexport default Scrollbar;\n","import React, { useCallback } from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\n\nimport Scrollbar from 'components/Scrollbar';\n\nconst EmotePickerRoot = styled.div`\n  padding-top: 32px;\n  padding-bottom: 16px;\n  height: 100%;\n`;\nconst Categories = styled.div`\n  height: 100%;\n`;\nconst Category = styled.div`\n  padding-top: 10px;\n  padding-right: 16px;\n  padding-left: 16px;\n\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding-bottom: 10px;\n  font-size: 12px;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst CategoryItems = styled.div``;\nconst Emote = styled.img`\n  padding: 2px;\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n\n  &:hover {\n    background-color: rgba(119, 44, 232, 0.2);\n    cursor: pointer;\n  }\n`;\n\nconst EmotePicker = ({ emoteCategories, onEmoteClick }) => {\n  const renderCategory = useCallback(\n    ({ title, items }, key) => (\n      <Category key={key}>\n        {!!title && <CategoryHeader>{title}</CategoryHeader>}\n        <CategoryItems>\n          {items.map(({ alt, src, srcSet }) => (\n            <Emote\n              key={alt}\n              alt={alt}\n              src={src}\n              srcSet={srcSet}\n              onClick={() => onEmoteClick(alt)}\n            />\n          ))}\n        </CategoryItems>\n      </Category>\n    ),\n    [onEmoteClick],\n  );\n\n  return (\n    <EmotePickerRoot>\n      <Categories>\n        <Scrollbar>{emoteCategories.map(renderCategory)}</Scrollbar>\n      </Categories>\n    </EmotePickerRoot>\n  );\n};\n\nEmotePicker.defaultProps = {\n  emoteCategories: [],\n};\n\nEmotePicker.propTypes = {\n  onEmoteClick: pt.func.isRequired,\n  emoteCategories: pt.arrayOf(pt.shape({})),\n};\n\nexport default EmotePicker;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M7 11a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-4 4a2 2 0 002-2H8a2 2 0 002 2z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0a6 6 0 11-12 0 6 6 0 0112 0z\",\n  clipRule: \"evenodd\"\n}));\n\nvar SvgSmileyFace = function SvgSmileyFace(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSmileyFace, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/smiley-face.1cc055ed.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useRef } from 'react';\nimport pt from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport useOnClickOutside from 'use-onclickoutside';\n\nimport {\n  twitchEmoteType,\n  bttvEmoteType,\n  ffzEmoteType,\n} from 'utils/formatMessage';\nimport ChatModal from 'components/ChatModal';\nimport IconButton from 'components/IconButton';\nimport EmotePicker from 'components/EmotePicker';\nimport { ReactComponent as SmileyFaceIconSvg } from 'icons/smiley-face.svg';\n\nconst ChatInputRoot = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n  background-color: #18181b;\n\n  & > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst ChatInputInner = styled.div`\n  position: relative;\n`;\nconst Suggestions = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n  margin-left: -5px;\n  margin-bottom: -5px;\n  margin-right: -5px;\n  margin-bottom: 0;\n  padding-top: 10px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-bottom: none;\n  background-color: #18181b;\n  color: #fff;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  /* box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0px 2px rgba(0, 0, 0, 0.1); */\n`;\nconst SuggestionItem = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 2px;\n  background-color: ${(p) =>\n    p.isActive ? 'rgba(255, 255, 255, 0.15)' : 'transparent'};\n  cursor: pointer;\n`;\nconst SuggestionImage = styled.img`\n  margin-right: 8px;\n  width: 28px;\n  height: 28px;\n  object-fit: contain;\n`;\nconst TextareaInput = styled.div`\n  position: relative;\n`;\nconst TextareaWrapper = styled.div`\n  ${(p) =>\n    p.isSuggestions &&\n    css`\n      margin-left: -5px;\n      margin-bottom: -5px;\n      margin-right: -5px;\n      padding: 5px;\n      border: 1px solid rgba(255, 255, 255, 0.15);\n      border-top: none;\n      border-bottom-left-radius: 6px;\n      border-bottom-right-radius: 6px;\n      /* box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.1),\n        0 2px 2px -2px rgba(0, 0, 0, 0.02); */\n\n      & > ${TextareaInput} {\n        margin-left: -1px;\n        margin-bottom: -1px;\n        margin-right: -1px;\n      }\n    `};\n`;\nconst EmotesModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 0;\n  bottom: 100%;\n  margin-bottom: 8px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nconst Textarea = styled.textarea`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  height: 38px;\n  max-height: 91px;\n  min-height: 40px;\n  overflow: hidden;\n  border: 2px solid transparent;\n  background-color: rgba(255, 255, 255, 0.15);\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 4px;\n  outline: none;\n  color: #fff;\n  resize: none;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n  transition-property: box-shadow, border, background-color;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\nconst EmotesButton = styled(IconButton)`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n`;\nconst SmileyFaceIcon = styled(SmileyFaceIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\nconst ChatInput = React.forwardRef(\n  (\n    {\n      text,\n      emoteCategories,\n      suggestions,\n      isDisabled,\n      onEmoteClick,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onBlur,\n    },\n    textareaRef,\n  ) => {\n    const chatInputRef = useRef(null);\n    const [isEmotesModalVisible, setIsEmotesModalVisible] = useState(false);\n\n    const handleCloseEmotesModal = () => setIsEmotesModalVisible(false);\n\n    useOnClickOutside(chatInputRef, handleCloseEmotesModal);\n\n    /* eslint-disable react/prop-types */\n    const renderSuggestions = ({ type, items, activeIndex }) => {\n      const renderUser = (name, index) => (\n        <SuggestionItem key={name} isActive={index === activeIndex}>\n          {name}\n        </SuggestionItem>\n      );\n\n      const renderEmote = ({ src, srcSet, alt }, index) => (\n        <SuggestionItem key={alt} isActive={index === activeIndex}>\n          <SuggestionImage src={src} srcSet={srcSet} alt={alt} />\n          {alt}\n        </SuggestionItem>\n      );\n\n      return (\n        <Suggestions>\n          {items.length\n            ? items.map(type === 'users' ? renderUser : renderEmote)\n            : 'No matches'}\n        </Suggestions>\n      );\n    };\n    /* eslint-enable react/prop-types */\n\n    const renderEmotesButton = () => (\n      <EmotesButton\n        onClick={() => setIsEmotesModalVisible(!isEmotesModalVisible)}\n      >\n        <SmileyFaceIcon />\n      </EmotesButton>\n    );\n\n    const renderEmotesModal = () => (\n      <EmotesModal>\n        <ChatModal onClose={handleCloseEmotesModal}>\n          <EmotePicker\n            emoteCategories={emoteCategories}\n            onEmoteClick={onEmoteClick}\n          />\n        </ChatModal>\n      </EmotesModal>\n    );\n\n    return (\n      <ChatInputRoot ref={chatInputRef}>\n        <ChatInputInner>\n          {suggestions.isActive && renderSuggestions(suggestions)}\n          <TextareaWrapper isSuggestions={suggestions.isActive}>\n            <TextareaInput>\n              <Textarea\n                ref={textareaRef}\n                value={text}\n                placeholder=\"Send a message\"\n                maxLength={500}\n                disabled={isDisabled}\n                onChange={onChange}\n                onKeyUp={onKeyUp}\n                onKeyDown={onKeyDown}\n                onBlur={onBlur}\n              />\n              {!!emoteCategories.length && renderEmotesButton()}\n            </TextareaInput>\n          </TextareaWrapper>\n          {isEmotesModalVisible && renderEmotesModal()}\n        </ChatInputInner>\n      </ChatInputRoot>\n    );\n  },\n);\n\nChatInput.defaultProps = {\n  emoteCategories: [],\n  isDisabled: false,\n};\n\nChatInput.propTypes = {\n  text: pt.string.isRequired,\n  emoteCategories: pt.arrayOf(pt.shape({})),\n  suggestions: pt.shape({\n    isActive: pt.bool,\n    items: pt.oneOfType([\n      pt.arrayOf(pt.string),\n      pt.arrayOf(pt.oneOfType([twitchEmoteType, bttvEmoteType, ffzEmoteType])),\n    ]),\n    activeIndex: pt.number,\n    cursorPosition: pt.number,\n    prefix: pt.string,\n  }).isRequired,\n  isDisabled: pt.bool,\n  onEmoteClick: pt.func.isRequired,\n  onChange: pt.func.isRequired,\n  onKeyUp: pt.func.isRequired,\n  onKeyDown: pt.func.isRequired,\n  onBlur: pt.func.isRequired,\n};\n\nexport default React.memo(ChatInput);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M10 8a2 2 0 100 4 2 2 0 000-4z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M9 2h2a2.01 2.01 0 001.235 1.855l.53.22a2.01 2.01 0 002.185-.439l1.414 1.414a2.01 2.01 0 00-.439 2.185l.22.53A2.01 2.01 0 0018 9v2a2.01 2.01 0 00-1.855 1.235l-.22.53a2.01 2.01 0 00.44 2.185l-1.415 1.414a2.01 2.01 0 00-2.184-.439l-.531.22A2.01 2.01 0 0011 18H9a2.01 2.01 0 00-1.235-1.854l-.53-.22a2.009 2.009 0 00-2.185.438L3.636 14.95a2.009 2.009 0 00.438-2.184l-.22-.531A2.01 2.01 0 002 11V9c.809 0 1.545-.487 1.854-1.235l.22-.53a2.009 2.009 0 00-.438-2.185L5.05 3.636a2.01 2.01 0 002.185.438l.53-.22A2.01 2.01 0 009 2zm-4 8l1.464 3.536L10 15l3.535-1.464L15 10l-1.465-3.536L10 5 6.464 6.464 5 10z\",\n  clipRule: \"evenodd\"\n}));\n\nvar SvgGears = function SvgGears(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGears, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/gears.5f76af43.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\n\nconst SwitchRoot = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  line-height: 20px;\n`;\nconst Label = styled.label`\n  content: '';\n  position: relative;\n  display: inline-block;\n  order: 0;\n  width: 35px;\n  height: 20px;\n  vertical-align: bottom;\n  border-radius: 10px/50%;\n  background-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.1s ease;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    bottom: 2px;\n    display: block;\n    width: 16px;\n    border-radius: 50%;\n    background-color: #fff;\n    transition: left 0.1s ease;\n  }\n`;\nconst Input = styled.input.attrs({ type: 'checkbox' })`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + ${Label} {\n    background-color: #9147ff;\n\n    &:after {\n      content: '';\n      top: 2px;\n      left: calc(100% - 18px);\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 9px;\n      left: 10px;\n      display: block;\n      height: 3px;\n      width: 7px;\n      border-bottom: 2px solid #fff;\n      border-left: 2px solid #fff;\n      transform: translate3d(-50%, -50%, 0) rotate(-45deg);\n    }\n  }\n`;\n\nconst Switch = ({ id, label, checked, readOnly, onChange }) => (\n  <SwitchRoot>\n    <Input\n      id={id}\n      label={label}\n      checked={checked}\n      readOnly={readOnly}\n      onChange={onChange}\n    />\n    <Label htmlFor={id} />\n  </SwitchRoot>\n);\n\nSwitch.defaultProps = {\n  checked: false,\n  readOnly: false,\n  onChange: () => {},\n};\n\nSwitch.propTypes = {\n  id: pt.string.isRequired,\n  label: pt.string.isRequired,\n  checked: pt.bool,\n  readOnly: pt.bool,\n  onChange: pt.func,\n};\n\nexport default Switch;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import pt from 'prop-types';\nimport styled from 'styled-components';\n\nimport { changeOption } from 'reducers/options';\nimport { optionsSelector } from 'reducers/options/selectors';\nimport Scrollbar from 'components/Scrollbar';\nimport Switch from 'components/Switch';\n\nconst OptionsRoot = styled.div`\n  padding: 16px;\n  height: 100%;\n`;\nconst Header = styled.h2`\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst Categories = styled(Scrollbar)`\n  height: 100%;\n`;\nconst Category = styled.div`\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding: 8px 0;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst CategoryItems = styled.div``;\nconst Option = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 4px 0;\n  cursor: pointer;\n`;\nconst OptionText = styled.span``;\n\nconst Options = () => {\n  const dispatch = useDispatch();\n  const options = useSelector(optionsSelector);\n\n  const renderOption = useCallback(\n    ({ id, name, title, description, value }) => (\n      <Option\n        key={id}\n        onClick={() => dispatch(changeOption(name, !value))}\n        title={description}\n      >\n        <OptionText>{title}</OptionText>\n        <Switch\n          id={id}\n          label={title}\n          checked={value}\n          onChange={() => dispatch(changeOption(name, value))}\n        />\n      </Option>\n    ),\n    [dispatch],\n  );\n\n  const renderOptionsCategory = useCallback(\n    ({ title, items }, key) => (\n      <Category key={key}>\n        {!!title && <CategoryHeader>{title}</CategoryHeader>}\n        <CategoryItems>{items.map(renderOption)}</CategoryItems>\n      </Category>\n    ),\n    [renderOption],\n  );\n\n  return (\n    <OptionsRoot>\n      <Header>Chat settings</Header>\n      <Categories>{options.map(renderOptionsCategory)}</Categories>\n    </OptionsRoot>\n  );\n};\n\nOptions.defaultProps = {};\n\nOptions.propTypes = {};\n\nexport default Options;\n","import React, { useState, useRef } from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport useOnClickOutside from 'use-onclickoutside';\n\nimport { ReactComponent as GearsIconSvg } from 'icons/gears.svg';\nimport IconButton from 'components/IconButton';\nimport ChatModal from 'components/ChatModal';\nimport Options from 'components/Options';\n\nconst ChatControlsRoot = styled.div`\n  position: relative;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n`;\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n\n  & > :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\nconst OptionsModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 0;\n  bottom: 100%;\n  margin-bottom: 10px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nconst SendButton = styled.button.attrs({ type: 'button' })`\n  padding: 0 10px;\n  height: 30px;\n  border: none;\n  color: #fff;\n  background-color: #9147ff;\n  outline: none;\n  font-size: 12px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #772ce8;\n  }\n\n  &:active {\n    background-color: #5c16c5;\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n\n  &[disabled] {\n    background-color: rgba(255, 255, 255, 0.26);\n    color: rgba(255, 255, 255, 0.8);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nconst GearsIcon = styled(GearsIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\nconst StyledLink = styled(Link)`\n  color: #bf94ff;\n  text-decoration: none;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\n\nconst ChatControls = ({ isAuth, isDisabled, onSendMessage }) => {\n  const [isOptionsModalVisible, setIsOptionsModalVisible] = useState(false);\n  const optionsModalRef = useRef(null);\n\n  const handleCloseOptionsModal = () => setIsOptionsModalVisible(false);\n\n  useOnClickOutside(optionsModalRef, handleCloseOptionsModal);\n\n  return (\n    <ChatControlsRoot>\n      <Controls>\n        {!isAuth && (\n          <StyledLink to=\"/chat/auth\">Sign in with Twitch</StyledLink>\n        )}\n        <IconButton\n          onClick={() => setIsOptionsModalVisible(!isOptionsModalVisible)}\n        >\n          <GearsIcon />\n        </IconButton>\n        <SendButton disabled={isDisabled} onClick={onSendMessage}>\n          Chat\n        </SendButton>\n      </Controls>\n      {isOptionsModalVisible && (\n        <OptionsModal ref={optionsModalRef}>\n          <ChatModal onClose={handleCloseOptionsModal}>\n            <Options />\n          </ChatModal>\n        </OptionsModal>\n      )}\n    </ChatControlsRoot>\n  );\n};\n\nChatControls.defaultProps = {\n  isAuth: false,\n  isDisabled: false,\n};\n\nChatControls.propTypes = {\n  isAuth: pt.bool,\n  isDisabled: pt.bool,\n  onSendMessage: pt.func.isRequired,\n};\n\nexport default React.memo(ChatControls);\n","import pt from 'prop-types';\n\nimport { MESSAGE_TYPES } from 'utils/constants';\nimport {\n  twitchEmoteType,\n  bttvEmoteType,\n  ffzEmoteType,\n  emojiType,\n  mentionType,\n  linkType,\n} from 'utils/formatMessage';\n\nexport const messageType = pt.shape({\n  type: pt.oneOf([MESSAGE_TYPES.MESSAGE]).isRequired,\n  message: pt.string.isRequired,\n  messageArray: pt.arrayOf(\n    pt.oneOfType([\n      pt.string,\n      twitchEmoteType,\n      bttvEmoteType,\n      ffzEmoteType,\n      emojiType,\n      mentionType,\n      linkType,\n    ]),\n  ).isRequired,\n  tags: pt.shape({\n    badgeInfo: pt.shape({\n      subscriber: pt.string,\n    }),\n    badges: pt.shape({}),\n    color: pt.string,\n    displayName: pt.string.isRequired,\n    emotes: pt.shape({}),\n    flags: pt.string,\n    id: pt.string,\n    mod: pt.bool,\n    roomId: pt.string,\n    tmiSentId: pt.oneOfType([pt.string, pt.number]),\n    userId: pt.string,\n  }).isRequired,\n  badges: pt.arrayOf(\n    pt.shape({\n      alt: pt.string,\n      label: pt.string,\n      src: pt.string.isRequired,\n      srcSet: pt.string,\n    }),\n  ),\n  user: pt.string.isRequired,\n  isHistory: pt.bool,\n  isAction: pt.bool,\n  isDeleted: pt.bool,\n});\n\nexport const noticeType = pt.shape({\n  type: pt.oneOf([MESSAGE_TYPES.NOTICE_MESSAGE]).isRequired,\n  message: pt.string.isRequired,\n  channel: pt.string.isRequired,\n  tags: pt.shape({\n    msgId: pt.string.isRequired,\n  }).isRequired,\n});\n\nexport const userNoticeType = pt.shape({\n  type: pt.oneOf([MESSAGE_TYPES.USER_NOTICE_MESSAGE]).isRequired,\n  message: pt.string,\n  channel: pt.string.isRequired,\n  tags: pt.shape({\n    badgeInfo: pt.shape({\n      subscriber: pt.string,\n    }),\n    badges: pt.shape({}),\n    color: pt.string,\n    displayName: pt.string.isRequired,\n    emotes: pt.shape({}),\n    id: pt.string,\n    login: pt.string,\n    mod: pt.bool,\n    msgId: pt.string,\n    systemMsg: pt.string,\n    tmiSentId: pt.oneOfType([pt.string, pt.number]),\n    userId: pt.string,\n    msgParamCumulativeMonths: pt.number,\n    msgParamDisplayName: pt.string,\n    msgParamLogin: pt.string,\n    msgParamMonths: pt.number,\n    msgParamPromoGiftTotal: pt.number,\n    msgParamPromoName: pt.string,\n    msgParamRecipientDisplayName: pt.string,\n    msgParamRecipientId: pt.string,\n    msgParamRecipientUserName: pt.string,\n    msgParamSenderLogin: pt.string,\n    msgParamSenderName: pt.string,\n    msgParamShouldShareStreak: pt.bool,\n    msgParamStreakMonths: pt.number,\n    msgParamSubPlan: pt.string,\n    msgParamSubPlanName: pt.string,\n    msgParamViewerCount: pt.number,\n    msgParamRitualName: pt.string,\n    msgParamThreshold: pt.number,\n  }).isRequired,\n});\n","import React, { useState } from 'react';\nimport pt from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { format } from 'date-fns/fp';\n\nimport { messageType } from './types';\n\nconst getChatMessageBg = (p) => {\n  if (p.isMention) return 'rgba(255, 0, 0, 0.3)';\n  if (p.isEven) return '#1f1925';\n  return 'transparent';\n};\n\nconst MessageRoot = styled.div`\n  padding: 5px 20px;\n  color: ${(p) => (p.isAction ? p.color : '#fff')};\n  opacity: ${(p) => (p.isHistory || p.isDeleted ? '0.5' : '1')};\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${getChatMessageBg};\n`;\nconst Name = styled.span`\n  font-weight: bold;\n  color: ${(p) => p.color};\n  cursor: pointer;\n`;\nconst Emote = styled.img`\n  display: inline-block;\n  margin: -5px 0;\n  vertical-align: middle;\n`;\nconst Emoji = styled.img`\n  display: inline-block;\n  margin-top: -5px;\n  margin-bottom: -4px;\n  width: 20px;\n  height: auto;\n  vertical-align: middle;\n`;\nconst Mention = styled.span`\n  ${(p) =>\n    (p.isActive || p.isOwnMessage) &&\n    css`\n      padding: 2px 4px;\n    `};\n  ${(p) =>\n    p.isOwnMessage &&\n    css`\n      background-color: #40404a;\n      color: #fff;\n    `};\n  ${(p) =>\n    p.isActive &&\n    css`\n      background-color: #fafafa;\n      color: #18181b;\n    `};\n`;\nconst Link = styled.a`\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Timestamp = styled.span`\n  margin-right: 5px;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst Badge = styled.img`\n  margin-bottom: 2px;\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst renderMessageArray = (user, userLogin) => (item, key) => {\n  if (typeof item !== 'object') return item;\n\n  if (\n    item.type === 'twitch-emote' ||\n    item.type === 'bttv-emote' ||\n    item.type === 'ffz-emote'\n  ) {\n    return (\n      <Emote key={key} src={item.src} srcSet={item.srcSet} alt={item.alt} />\n    );\n  }\n\n  if (item.type === 'emoji') {\n    return (\n      <Emoji key={key} src={item.src} srcSet={item.srcSet} alt={item.alt} />\n    );\n  }\n\n  if (item.type === 'mention') {\n    return (\n      <Mention\n        key={key}\n        isActive={item.target === userLogin}\n        isOwnMessage={user === userLogin}\n      >\n        {item.text}\n      </Mention>\n    );\n  }\n\n  if (item.type === 'link') {\n    return (\n      <Link\n        key={key}\n        href={item.href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n      >\n        {item.text}\n      </Link>\n    );\n  }\n\n  return null;\n};\n\nconst renderBadges = (badges) =>\n  badges.map(({ alt, label, src, srcSet }, key) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <Badge key={key} alt={alt} aria-label={label} src={src} srcSet={srcSet} />\n  ));\n\nconst MESSAGE_DELETED_LABEL = '<message deleted>';\n\nconst Message = ({\n  message: {\n    message,\n    messageArray,\n    tags: { color, displayName, tmiSentTs },\n    badges,\n    user,\n    isHistory,\n    isAction,\n    isDeleted,\n  },\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const isMention = user !== userLogin && RegExp(userLogin, 'gi').test(message);\n\n  const handleNameRightClick = (e) => {\n    onNameRightClick(displayName);\n    e.preventDefault();\n  };\n\n  return (\n    <MessageRoot\n      isHistory={isHistory}\n      isAction={isAction}\n      isEven={isEven}\n      isMention={isMention}\n      isDeleted={isDeleted}\n      color={color}\n    >\n      {isShowTimestamps && (\n        <Timestamp>{format('h:mm', new Date(tmiSentTs))}</Timestamp>\n      )}\n      {badges.length > 0 && renderBadges(badges)}\n      <Name color={color} onContextMenu={handleNameRightClick}>\n        {displayName}\n      </Name>\n      {isAction ? ' ' : ': '}\n      {isDeleted && !isVisible ? (\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\n        <Link onClick={() => setIsVisible(true)}>{MESSAGE_DELETED_LABEL}</Link>\n      ) : (\n        messageArray.map(renderMessageArray(user, userLogin))\n      )}\n    </MessageRoot>\n  );\n};\n\nMessage.defaultProps = {\n  userLogin: '',\n  isEven: false,\n  isShowTimestamps: false,\n  // onNameClick: () => {},\n  onNameRightClick: () => {},\n};\n\nMessage.propTypes = {\n  message: messageType.isRequired,\n  userLogin: pt.string,\n  isEven: pt.bool,\n  isShowTimestamps: pt.bool,\n  // onNameClick: pt.func,\n  onNameRightClick: pt.func,\n};\n\nexport default React.memo(Message);\n","import React from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\n\nimport { noticeType } from './types';\n\nconst NoticeRoot = styled.div`\n  padding: 5px 20px;\n  color: rgba(255, 255, 255, 0.6);\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${(p) => (p.isEven ? '#1f1925' : 'transparent')};\n`;\n\nconst Notice = ({ message: { message }, isEven }) => (\n  <NoticeRoot isEven={isEven}>{message}</NoticeRoot>\n);\n\nNotice.defaultProps = {\n  isEven: false,\n};\n\nNotice.propTypes = {\n  message: noticeType.isRequired,\n  isEven: pt.bool,\n};\n\nexport default React.memo(Notice);\n","import React from 'react';\n// import pt from 'prop-types';\nimport styled from 'styled-components';\n\nimport { userNoticeType } from './types';\n\nconst UserNoticeRoot = styled.div`\n  padding: 5px 20px 5px 16px;\n  line-height: 20px;\n  word-wrap: break-word;\n  border-left: 4px solid #9147ff;\n  color: #fff;\n`;\n\nconst UserNotice = ({\n  message: {\n    tags: { systemMsg },\n  },\n}) => <UserNoticeRoot>{systemMsg}</UserNoticeRoot>;\n\nUserNotice.propTypes = {\n  message: userNoticeType.isRequired,\n};\n\nexport default React.memo(UserNotice);\n","import React from 'react';\nimport pt from 'prop-types';\n\nimport { MESSAGE_TYPES } from 'utils/constants';\nimport { messageType, noticeType, userNoticeType } from './types';\nimport Message from './Message';\nimport Notice from './Notice';\nimport UserNotice from './UserNotice';\n\nconst ChatMessage = ({\n  message,\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  onNameClick,\n  onNameRightClick,\n}) => {\n  if (message.type === MESSAGE_TYPES.MESSAGE) {\n    return (\n      <Message\n        message={message}\n        userLogin={userLogin}\n        isEven={isEven}\n        isShowTimestamps={isShowTimestamps}\n        onNameClick={onNameClick}\n        onNameRightClick={onNameRightClick}\n      />\n    );\n  }\n\n  if (message.type === MESSAGE_TYPES.NOTICE_MESSAGE) {\n    return <Notice message={message} isEven={isEven} />;\n  }\n\n  if (message.type === MESSAGE_TYPES.USER_NOTICE_MESSAGE) {\n    return <UserNotice message={message} />;\n  }\n\n  return null;\n};\n\nChatMessage.defaultProps = {\n  userLogin: '',\n  isEven: false,\n  isShowTimestamps: false,\n  onNameClick: () => {},\n  onNameRightClick: () => {},\n};\n\nChatMessage.propTypes = {\n  message: pt.oneOfType([messageType, noticeType, userNoticeType]).isRequired,\n  userLogin: pt.string,\n  isEven: pt.bool,\n  isShowTimestamps: pt.bool,\n  onNameClick: pt.func,\n  onNameRightClick: pt.func,\n};\n\nexport default React.memo(ChatMessage);\n","import React, { useState, useEffect, useRef } from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\n\nimport Scrollbar from 'components/Scrollbar';\nimport ChatMessage from 'components/ChatMessage';\n\nconst MORE_MESSAGES_OFFSET = 100;\n\nconst MessagesRoot = styled.div`\n  position: relative;\n  flex-grow: 1;\n`;\nconst StyledScrollbar = styled(Scrollbar)`\n  .ScrollbarsCustom-Content {\n    padding-bottom: 10px !important;\n  }\n`;\nconst MoreMessagesButton = styled.button`\n  position: absolute;\n  left: 50%;\n  bottom: 10px;\n  display: ${(p) => (p.visible ? 'block' : 'none')};\n  padding: 5px 20px;\n  background: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: translateX(-50%);\n`;\n\nconst Messages = ({\n  messages,\n  userLogin,\n  isEven,\n  isSplitChat,\n  isShowTimestamps,\n  onNameRightClick,\n}) => {\n  const [\n    isMoreMessagesButtonVisible,\n    setIsMoreMessagesButtonVisible,\n  ] = useState(false);\n\n  const handleScrollUpdate = ({\n    clientHeight,\n    contentScrollHeight,\n    scrollTop,\n  }) => {\n    const maxScrollTop = contentScrollHeight - clientHeight;\n    const isVisible = scrollTop + MORE_MESSAGES_OFFSET < maxScrollTop;\n\n    setIsMoreMessagesButtonVisible(isVisible);\n  };\n\n  const scrollbarRef = useRef(null);\n\n  const handleScrollToBottom = () => {\n    if (scrollbarRef.current && scrollbarRef.current.scrollToBottom) {\n      scrollbarRef.current.scrollToBottom();\n    }\n  };\n\n  useEffect(() => {\n    if (!isMoreMessagesButtonVisible) {\n      handleScrollToBottom();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messages]);\n\n  const getIsEven = (key) => {\n    if (!isSplitChat) return false;\n    return isEven ? key % 2 === 1 : key % 2 === 0;\n  };\n\n  return (\n    <MessagesRoot>\n      <StyledScrollbar onUpdate={handleScrollUpdate} ref={scrollbarRef}>\n        {messages.map((message, key) => (\n          <ChatMessage\n            key={message.tags.id}\n            message={message}\n            userLogin={userLogin}\n            isEven={getIsEven(key)}\n            isShowTimestamps={isShowTimestamps}\n            onNameRightClick={onNameRightClick}\n          />\n        ))}\n      </StyledScrollbar>\n      <MoreMessagesButton\n        onClick={handleScrollToBottom}\n        visible={isMoreMessagesButtonVisible}\n      >\n        More messages below\n      </MoreMessagesButton>\n    </MessagesRoot>\n  );\n};\n\nMessages.defaultProps = {\n  messages: [],\n  userLogin: '',\n  isEven: false,\n  isSplitChat: true,\n  isShowTimestamps: false,\n  onNameRightClick: () => {},\n};\n\nMessages.propTypes = {\n  messages: pt.arrayOf(pt.shape({})),\n  userLogin: pt.string,\n  isEven: pt.bool,\n  isSplitChat: pt.bool,\n  isShowTimestamps: pt.bool,\n  onNameRightClick: pt.func,\n};\n\nexport default React.memo(Messages);\n","import React, { useState, useCallback, useRef } from 'react';\nimport pt from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport useSetState from 'hooks/useSetState';\nimport {\n  messagesSelector,\n  isEvenSelector,\n  usersSelector,\n} from 'reducers/messages/selectors';\nimport { isConnectedSelector } from 'reducers/chat/selectors';\nimport {\n  isShowTimestampsSelector,\n  isSplitChatSelector,\n  isFixedWidthSelector,\n} from 'reducers/options/selectors';\nimport {\n  userLoginSelector,\n  userDisplayNameSelector,\n  isAuthSelector,\n} from 'reducers/auth/selectors';\nimport {\n  emotesSelector,\n  emoteCategoriesSelector,\n} from 'reducers/emotes/selectors';\nimport { SUGGESTION_TYPES } from 'utils/constants';\nimport getUserSuggestions from 'utils/getUserSuggestions';\nimport getEmoteSuggestions from 'utils/getEmoteSuggestions';\nimport ChatInput from 'components/ChatInput';\nimport ChatControls from 'components/ChatControls';\nimport Messages from 'components/Messages';\n\nconst ChatRoot = styled.div`\n  height: 100vh;\n  font-size: 12px;\n  background-color: #0e0e10;\n`;\nconst ChatWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${(p) => (p.isFixedWidth ? '340px' : 'auto')};\n  height: 100%;\n  background-color: #18181b;\n`;\n\n// TODO: check if the user has a rights to send messages\n\nconst suggestionsInitialState = {\n  type: null,\n  isActive: false,\n  items: [],\n  activeIndex: 0,\n  start: 0,\n  end: 0,\n};\n\nconst setSuggestionsIndexUp = ({ activeIndex, items, ...rest }) => ({\n  activeIndex: activeIndex === 0 ? items.length - 1 : activeIndex - 1,\n  items,\n  ...rest,\n});\n\nconst setSuggestionsIndexDown = ({ activeIndex, items, ...rest }) => ({\n  activeIndex: activeIndex === items.length - 1 ? 0 : activeIndex + 1,\n  items,\n  ...rest,\n});\n\nconst Chat = ({ onSendMessage }) => {\n  const [text, setText] = useState('');\n  const messages = useSelector(messagesSelector);\n  const userLogin = useSelector(userLoginSelector);\n  const userDisplayName = useSelector(userDisplayNameSelector);\n  const emoteCategories = useSelector(emoteCategoriesSelector);\n  const emotes = useSelector(emotesSelector);\n  const users = useSelector(usersSelector);\n  const isAuth = useSelector(isAuthSelector);\n  const isConnected = useSelector(isConnectedSelector);\n  const isEven = useSelector(isEvenSelector);\n  const isShowTimestamps = useSelector(isShowTimestampsSelector);\n  const isSplitChat = useSelector(isSplitChatSelector);\n  const isFixedWidth = useSelector(isFixedWidthSelector);\n  const chatInputRef = useRef(null);\n  const [suggestions, setSuggestions] = useSetState(suggestionsInitialState);\n\n  // Refs to avoid multiple renders\n  const textRef = useRef(text);\n  textRef.current = text;\n  const usersRef = useRef(users);\n  usersRef.current = users;\n  const emotesRef = useRef(emotes);\n  emotesRef.current = emotes;\n  const suggestionsRef = useRef(suggestions);\n  suggestionsRef.current = suggestions;\n\n  const isDisabled = !isAuth || !isConnected;\n\n  const handleNameRightClick = useCallback(\n    (name) => {\n      setText((t) => `${t.trim()} @${name} `.trimLeft());\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n    },\n    [setText, chatInputRef],\n  );\n\n  const handleEmoteClick = useCallback(\n    (emoteName) => {\n      setText((t) => `${t.trim()} ${emoteName} `.trimLeft());\n    },\n    [setText],\n  );\n\n  const handleSendMessage = useCallback(() => {\n    if (!textRef.current) return;\n    onSendMessage(textRef.current);\n    setText('');\n  }, [onSendMessage, textRef, setText]);\n\n  const handleBlur = useCallback(() => {\n    setSuggestions({ isActive: false });\n  }, [setSuggestions]);\n\n  const handleChange = useCallback(\n    (e) => {\n      const { value, selectionStart } = e.target;\n\n      setText(value);\n\n      const spaceIndexBefore = value.lastIndexOf(' ', selectionStart - 1);\n      const spaceIndexAfter = value.indexOf(' ', selectionStart);\n\n      const start = spaceIndexBefore === -1 ? 0 : spaceIndexBefore + 1;\n      const end = spaceIndexAfter === -1 ? value.length : spaceIndexAfter;\n\n      const word = value.substring(start, end);\n\n      const usersMatch = SUGGESTION_TYPES.users.regex.exec(word);\n\n      if (usersMatch) {\n        const [, beginText] = usersMatch;\n        const items = getUserSuggestions(\n          beginText,\n          usersRef.current,\n          userDisplayName,\n          SUGGESTION_TYPES.users.limit,\n        );\n\n        setSuggestions({\n          type: SUGGESTION_TYPES.users.name,\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      const emotesMatch = SUGGESTION_TYPES.emotes.regex.exec(word);\n\n      if (emotesMatch) {\n        const [, beginText] = emotesMatch;\n        const items = getEmoteSuggestions(\n          beginText,\n          emotesRef.current,\n          SUGGESTION_TYPES.emotes.limit,\n        );\n\n        setSuggestions({\n          type: SUGGESTION_TYPES.emotes.name,\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      if (suggestionsRef.current.isActive) {\n        setSuggestions(suggestionsInitialState);\n      }\n    },\n    [setText, setSuggestions, suggestionsRef, userDisplayName],\n  );\n\n  const handleKeyUp = useCallback(() => {}, []);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (suggestionsRef.current.isActive) {\n        if (e.key === 'Enter' || e.key === 'Tab') {\n          e.preventDefault();\n          setText((t) => {\n            const {\n              type,\n              items,\n              activeIndex,\n              start,\n              end,\n            } = suggestionsRef.current;\n            const currentItem = items[activeIndex];\n            const insertedText =\n              type === 'users' ? `@${currentItem}` : currentItem.alt;\n\n            const textBefore = t.substring(0, start);\n            const testAfter = t.substring(end) || ' ';\n\n            return `${textBefore}${insertedText}${testAfter}`;\n          });\n          setSuggestions(suggestionsInitialState);\n\n          return;\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexUp);\n          return;\n        }\n\n        if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexDown);\n          return;\n        }\n      }\n\n      if (!suggestionsRef.current.isActive) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          handleSendMessage();\n        }\n      }\n    },\n    [handleSendMessage, setSuggestions, suggestionsRef],\n  );\n\n  return (\n    <ChatRoot>\n      <ChatWrapper isFixedWidth={isFixedWidth}>\n        <Messages\n          messages={messages}\n          userLogin={userLogin}\n          isEven={isSplitChat ? isEven : false}\n          isShowTimestamps={isShowTimestamps}\n          isSplitChat={isSplitChat}\n          onNameRightClick={handleNameRightClick}\n        />\n        <ChatInput\n          ref={chatInputRef}\n          text={text}\n          emoteCategories={emoteCategories}\n          suggestions={suggestions}\n          isDisabled={isDisabled}\n          isAuth={isAuth}\n          onEmoteClick={handleEmoteClick}\n          onChange={handleChange}\n          onKeyUp={handleKeyUp}\n          onKeyDown={handleKeyDown}\n          onBlur={handleBlur}\n        />\n        <ChatControls\n          isDisabled={isDisabled}\n          isAuth={isAuth}\n          onSendMessage={handleSendMessage}\n        />\n      </ChatWrapper>\n    </ChatRoot>\n  );\n};\n\nChat.propTypes = {\n  onSendMessage: pt.func.isRequired,\n};\n\nexport default Chat;\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useFetchChatData from 'hooks/useFetchChatData';\r\nimport useCurrentChannel from 'hooks/useCurrentChannel';\r\nimport useTwitchClient from 'hooks/useTwitchClient';\r\nimport { userLoginSelector } from 'reducers/auth/selectors';\r\nimport { currentChannelSelector } from 'reducers/chat/selectors';\r\nimport { setIsAuth } from 'reducers/auth';\r\nimport replaceEmojis from 'utils/replaceEmojis';\r\nimport Chat from 'components/Chat';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(userLoginSelector);\r\n  const currentChannel = useSelector(currentChannelSelector);\r\n\r\n  const client = useTwitchClient(userLogin, localStorage.accessToken);\r\n\r\n  useCurrentChannel();\r\n  useFetchChatData();\r\n\r\n  useEffect(() => {\r\n    const rawUser = localStorage.getItem('user');\r\n\r\n    if (rawUser) {\r\n      const user = JSON.parse(rawUser);\r\n\r\n      dispatch(setIsAuth({ isAuth: true, user }));\r\n    }\r\n\r\n    // TODO: try to connect to the chat. if there is an error, set isAuth to false and connect without login\r\n  }, [dispatch]);\r\n\r\n  const handleSendMessage = useCallback(\r\n    (message) => {\r\n      if (!client) return;\r\n      const normalizedMessage = replaceEmojis(message.trim());\r\n      client.say(currentChannel, normalizedMessage);\r\n    },\r\n    [client, currentChannel],\r\n  );\r\n\r\n  return <Chat onSendMessage={handleSendMessage} />;\r\n};\r\n\r\nexport default Home;\r\n","import {\n  TWITCH_API_AUTH_BASE,\n  TWITCH_API_CLIENT_ID,\n  TWITCH_API_REDIRECT_URI,\n} from 'utils/constants';\n\nconst authParams = {\n  client_id: TWITCH_API_CLIENT_ID,\n  redirect_uri: TWITCH_API_REDIRECT_URI,\n  response_type: 'token+id_token',\n  scope: [\n    'openid',\n    'channel:moderate',\n    'chat:edit',\n    'chat:read',\n    'whispers:read',\n    'whispers:edit',\n    'user_blocks_read',\n    'user_blocks_edit',\n    'user_subscriptions',\n  ].join('+'),\n  claims: JSON.stringify({\n    id_token: { email_verified: null, picture: null, preferred_username: null },\n  }),\n  // state: uid(),\n};\n\nconst getAuthUrl = () => {\n  const search = Object.entries(authParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${TWITCH_API_AUTH_BASE}?${search}`;\n};\n\nexport default getAuthUrl;\n","import getAuthUrl from 'utils/getAuthUrl';\n\nconst Auth = () => {\n  window.location.href = getAuthUrl();\n\n  return null;\n};\n\nexport default Auth;\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\n\nimport { fetchUser } from 'reducers/auth';\n\nconst AuthCallback = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  if (!window.location.hash) return null;\n\n  const params = new URLSearchParams(window.location.hash.slice(1));\n\n  const accessToken = params.get('access_token');\n  const idToken = params.get('id_token');\n\n  if (!accessToken || !idToken) return null;\n\n  localStorage.setItem('accessToken', accessToken);\n  localStorage.setItem('idToken', idToken);\n\n  const { sub: id } = jwt.decode(idToken);\n\n  dispatch(fetchUser(id));\n\n  const lastChannel = localStorage.getItem('lastChannel');\n\n  history.push(lastChannel ? `/chat/#${lastChannel}` : '/chat/');\n\n  return null;\n};\n\nexport default AuthCallback;\n","import { css } from 'styled-components';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    font-family: Roobert, Helvetica Neue, Helvetica, Arial, sans-serif;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\nimport colors from 'styles/colors';\nimport vars from 'styles/vars';\n\nexport default createGlobalStyle`\n  :root {\n    ${colors};\n    ${vars};\n  }\n  ${common};\n`;\n","import React from 'react';\nimport pt from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport isAuthRedirect from 'utils/isAuthRedirect';\nimport Home from 'components/Home';\nimport Auth from 'components/Auth';\nimport AuthCallback from 'components/AuthCallback';\nimport GlobalStyles from 'styles';\n\nconst getHomeComponent = () =>\n  isAuthRedirect(window.location.hash) ? AuthCallback : Home;\n\nconst App = ({ store }) => (\n  <>\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/chat/\" component={getHomeComponent()} />\n          <Route exact path=\"/chat/auth\" component={Auth} />\n        </Switch>\n      </Router>\n    </Provider>\n    <GlobalStyles />\n  </>\n);\n\nApp.propTypes = {\n  store: pt.shape({}).isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport isAuthRedirect from 'utils/isAuthRedirect';\nimport store from 'store';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-139550930-3');\n\n  if (!isAuthRedirect(window.location.hash)) {\n    const page =\n      window.location.pathname + window.location.search + window.location.hash;\n    ReactGA.pageview(page);\n  }\n}\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./twitch-simple-irc.cjs.production.min.js');\n} else {\n  module.exports = require('./twitch-simple-irc.cjs.development.js');\n}"],"sourceRoot":""}