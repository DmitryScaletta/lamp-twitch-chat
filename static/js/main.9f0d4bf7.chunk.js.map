{"version":3,"sources":["features/auth/authSlice.ts","utils/constants.ts","utils/normalizeHref.ts","features/chat/utils/htmlEntity.ts","../../twitch-simple-irc/dist/twitch-simple-irc.cjs.production.min.js","features/chat/utils/findEmote.ts","utils/fetchRequest.ts","features/options/optionsSelectors.ts","features/auth/hooks/useInitializeAuth.ts","features/chat/hooks/useFetchChatData.ts","hooks/useLocationHash.ts","features/chat/hooks/useCurrentChannel.ts","hooks/usePrevious.ts","features/chat/utils/replaceEmojis.ts","features/chat/hooks/useTwitchClient.ts","hooks/useSetState.ts","features/chat/utils/getUsersByBeginText.ts","features/chat/hooks/useChatInput.ts","hooks/useOnClickOutside.ts","icons/close.svg","components/IconButton.tsx","components/ChatModal.tsx","icons/smiley-face.svg","components/Scrollbar.tsx","icons/search.svg","features/chat/components/EmotePicker.tsx","features/chat/components/ChatInput.tsx","icons/gears.svg","icons/twitch.svg","components/Switch.tsx","features/options/Options.tsx","features/chat/components/ChatControls.tsx","features/chat/components/Message.tsx","features/chat/components/Notice.tsx","features/chat/components/UserNotice.tsx","features/chat/components/ChatMessage.tsx","features/chat/components/Messages.tsx","features/chat/components/Chat.tsx","features/auth/Auth.tsx","features/auth/Logout.tsx","features/auth/AuthCallback.tsx","styles/common.js","styles/colors.js","styles/vars.js","styles/index.js","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","features/auth/authUtils.ts","api/twitch.ts","utils/setFetchFlags.ts","features/chat/utils/parseMessageEntities.ts","features/chat/utils/normalizeMessages.ts","features/chat/slice/messages.ts","features/chat/utils/parseApiResponse.ts","features/chat/slice/twitchEmotes.ts","features/chat/slice/bttvEmotes.ts","features/chat/slice/ffzEmotes.ts","features/chat/slice/badges.ts","features/chat/slice/params.ts","features/chat/slice/blockedUsers.ts","features/chat/slice/chatSlice.ts","api/chatHistory.ts","api/bttv.ts","api/ffz.ts","../../twitch-simple-irc/dist/index.js","features/chat/utils/createEmoteCategories.ts","features/chat/selectors/chatSelectors.ts","features/chat/selectors/index.ts","features/options/optionsUtils.ts","features/options/optionsSlice.ts","utils/assertNever.ts","features/chat/utils/getEmotesByText.ts","features/chat/utils/emotesUsageStatistic.ts"],"names":["initialState","isAuthReady","isAuth","userId","userLogin","auth","createSlice","name","reducers","initializeAuth","state","payload","invalidateAuth","fetchUserRequest","fetchUserSuccess","data","id","login","fetchUserFailure","actions","fetchUser","async","dispatch","users","apiFetchUser","writeUserToLocatStorage","e","isAuthReadySelector","isAuthSelector","userLoginSelector","userIdSelector","TWITCH_API_AUTH_BASE","TWITCH_API_CLIENT_ID","process","TWITCH_API_REDIRECT_URI","CHANNEL_MESSAGES_LIMIT","STORE_USERS_LIMIT","API_REQUESTS_TIMEOUT","SUGGESTION_TYPES","limit","regex","emotes","NOTICE_MESSAGE_TAGS","initialFetchFlags","isLoading","isLoaded","isError","error","isStartsWithProtocolRegex","normalizeHref","href","test","TWITCH_EMOTES_CDN","regexEmotesMap","getFfzSrcSet","R","dpi","url","createTwitchEmote","code","type","alt","src","srcSet","createBttvEmote","createFfzEmote","urls","createEmoji","createMention","text","target","createLink","createBadges","badges","globalBadges","channelBadges","version","badge","versions","title","description","imageUrl1x","image_url_1x","imageUrl2x","image_url_2x","imageUrl4x","image_url_4x","label","createBadge","Boolean","t","default","r","n","s","a","Object","assign","arguments","length","prototype","hasOwnProperty","call","apply","this","i","o","Math","floor","random","toString","padStart","m","startsWith","endsWith","c","slice","u","middle","d","node","g","l","p","h","f","split","reduce","v","entries","includes","map","start","Number","parseInt","end","replace","S","tags","raw","channel","w","message","trailing","exports","Commands","REPLY001","PING","PONG","JOIN","PART","PRIVMSG","NOTICE","USERNOTICE","GLOBALUSERSTATE","USERSTATE","ROOMSTATE","CLEARCHAT","CLEARMSG","HOSTTARGET","WHISPER","P","socket","globalUserState","channels","_connected","_connecting","_registered","options","secure","create","constructor","__proto__","connect","_connectInNode","_connectInBrowser","Promise","resolve","then","_register","reject","disconnect","destroy","close","emit","receiveRaw","trim","forEach","_handleMessage","sendRaw","write","send","say","format","command","sendCommand","Array","isArray","join","part","parse","_updateUserState","_updateRoomState","_updateGlobalUserState","user","prefix","b","C","T","y","isAction","Socket","on","WebSocket","onopen","onmessage","onerror","onclose","wasClean","reason","Error","off","setTimeout","userState","roomState","key","get","enumerable","configurable","writable","defineProperty","EventEmitter","UserNoticeType","sub","resub","subgift","anonsubgift","submysterygift","giftpaidupgrade","rewardgift","anongiftpaidupgrade","raid","unraid","ritual","bitsbadgetier","Client","getChannelFromMessage","getIsAction","getRandomUsername","isNode","normalizeActionMessage","parseMessageTags","findTwitchEmoteByIdInSets","sets","set","values","result","htmlEntity","regexMap","4","9","findTwitchEmoteByNameInSets","RegExp","findEmote","twitch","byId","twitchGlobal","twitchUser","byName","byText","items","emote","toLowerCase","push","bttv","bttvGlobal","bttvChannel","findById","findByName","ffz","ffzGlobal","ffzChannel","emoji","char","emojilib","fetchRequest","fetchOptions","timeout","controller","AbortController","signal","abort","response","fetch","body","json","ok","statusText","optionsSelector","value","showTimestamps","splitChat","fixedWidth","isShowTimestampsSelector","isSplitChatSelector","isFixedWidthSelector","useInitializeAuth","useDispatch","useSelector","useEffect","idToken","localStorage","readUserFromLocatStorage","params","jwtData","jwt","decode","useFetchChatData","currentChannel","currentChannelSelector","currentChannelId","currentChannelIdSelector","isTwitchEmotesLoaded","isTwitchEmotesLoadedSelector","isBttvGlobalEmotesLoaded","isBttvGlobalEmotesLoadedSelector","isBttvChannelEmotesLoaded","isBttvChannelEmotesLoadedSelector","isFfzGlobalEmotesLoaded","isFfzGlobalEmotesLoadedSelector","isFfzChannelEmotesLoaded","isFfzChannelEmotesLoadedSelector","isGlobalBadgesLoaded","isGlobalBadgesLoadedSelector","isChannelBadgesLoaded","isChannelBadgesLoadedSelector","isHistoryLoaded","isHistoryLoadedSelector","isBlockedUsersLoaded","isBlockedUsersLoadedSelector","isHistoryAdded","isHistoryAddedSelector","isReadyToAddHistory","fetchBttvGlobalEmotes","fetchFfzGlobalEmotes","fetchGlobalBadges","addChatHistory","fetchChatHistory","fetchTwitchEmotes","fetchBlockedUsers","fetchBttvChannelEmotes","fetchFfzChannelEmotes","fetchChannelBadges","useLocationHash","useState","window","location","hash","setHash","handleHashChange","addEventListener","removeEventListener","useCurrentChannel","updateCurrentChannel","setItem","document","usePrevious","ref","useRef","current","replaceEmojis","word","useTwitchClient","isConnected","isConnectedSelector","prevChannel","clientRef","registerEvents","useCallback","client","updateIsConnected","updateGlobalUserParams","updateUserParams","updateRoomParams","addMessage","uuid","targetUserId","clearChat","accessToken","twitchIrc","useMemo","normalizedMessage","handleUserState","addOwnMessage","removeListeners","handleNotice","msgId","useSetState","setState","patch","prevState","Function","getUsersByBeginText","beginText","beginTextLower","nameLower","suggestionsInitialState","isActive","activeIndex","setSuggestionsIndexUp","rest","setSuggestionsIndexDown","replaceSuggestionText","currentItem","insertedText","textBefore","substring","testAfter","useChatInput","setText","onSendMessage","chatInputRef","suggestions","setSuggestions","emotesSelector","usersSelector","usersRef","emotesRef","suggestionsRef","handleChange","selectionStart","spaceIndexBefore","lastIndexOf","spaceIndexAfter","indexOf","usersMatch","exec","emotesMatch","getEmotesByText","handleKeyUp","handleKeyDown","preventDefault","handleSuggestionMouseEnter","handleSuggestionClick","focus","handleBlur","events","arePassiveEvents","arePassiveEventsSupported","getOptions","event","passive","undefined","isContainsNode","el","contains","useOnClickOutside","handler","handlerRef","useLatest","listener","some","_extends","source","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","SvgClose","_ref","svgRef","props","viewBox","ForwardRef","forwardRef","sizes","small","css","medium","IconButton","styled","button","attrs","size","ChatModalRoot","div","CloseButton","CloseIcon","CloseIconSvg","ChatModal","children","onClose","onClick","fillRule","clipRule","SvgSmileyFace","Scrollbar","CustomScrollbar","disableTracksWidthCompensation","SvgSearch","EmotePickerRoot","Categories","Category","CategoryHeader","CategoryItems","Emote","img","SearchBlock","SearchInput","input","SearchIcon","SearchIconSvg","EmotePicker","onEmoteClick","search","setSearch","searchInputRef","emoteCategories","emoteCategoriesSelector","placeholder","onChange","ChatInputRoot","ChatInputInner","Suggestions","SuggestionItem","SuggestionImage","TextareaInput","TextareaWrapper","isSuggestions","EmotesModal","Textarea","textarea","EmotesButton","SmileyFaceIcon","SmileyFaceIconSvg","ChatInput","React","textareaRef","isDisabled","onKeyUp","onKeyDown","onBlur","onSuggestionMouseEnter","onSuggestionClick","suggestionNodesRef","isEmotesModalVisible","setIsEmotesModalVisible","isEmotesLoaded","isEmotesLoadedSelector","handleCloseEmotesModal","renderUser","index","onMouseEnter","renderEmote","renderSuggestions","maxLength","disabled","memo","SvgGears","_ref4","SvgTwitch","SwitchRoot","Label","Input","Switch","checked","readOnly","aria-label","htmlFor","defaultProps","OptionsRoot","Header","h2","Option","OptionText","span","Profile","UserName","color","LogOutButton","Link","Badge","Options","userDisplayName","userDisplayNameSelector","userColor","userColorSelector","userBadgesImages","userBadgesImagesSelector","renderOption","changeChatOption","renderOptionsCategory","to","ChatControlsRoot","Controls","OptionsModal","buttonStyles","Button","SignInButton","OptionsButton","GearsIcon","GearsIconSvg","TwitchIcon","TwitchIconSvg","isOptionsModalVisible","setIsOptionsModalVisible","optionsModalRef","handleCloseOptionsModal","optionsButton","prev","MessageRoot","isHistory","isDeleted","isMention","isEven","Name","Emoji","Mention","isOwnMessage","Timestamp","entities","displayName","timestamp","isShowTimestamps","onNameRightClick","isVisible","setIsVisible","Date","renderBadges","onContextMenu","item","rel","renderMessageArray","NoticeRoot","Notice","UserNoticeRoot","UserNotice","systemMessage","assertNever","MessagesRoot","StyledScrollbar","MoreMessagesButton","Messages","isMoreMessagesButtonVisible","setIsMoreMessagesButtonVisible","messages","messagesSelector","isEvenSelector","isSplitChat","scrollbarRef","handleScrollToBottom","scrollToBottom","getIsEven","onUpdate","clientHeight","contentScrollHeight","scrollTop","ChatRoot","ChatWrapper","isFixedWidth","Chat","textRef","handleSendMessage","chatInput","handleNameRightClick","trimLeft","handleEmoteClick","Auth","getAuthUrl","Logout","history","useHistory","removeItem","pathname","lastChannel","AuthCallback","URLSearchParams","createGlobalStyle","colors","vars","common","getHomeComponent","isAuthRedirect","App","exact","path","render","component","rootReducer","combineReducers","chat","store","configureStore","reducer","ReactGA","initialize","page","pageview","require","ReactDOM","getElementById","authParams","client_id","redirect_uri","response_type","scope","claims","JSON","stringify","id_token","email_verified","picture","preferred_username","apiRequestKraken","headers","Accept","Authorization","apiRequestHelix","language","channelId","setFetchFlags","obj","mentionRegex","linkRegex","urlRegex","strict","normalizeEmotesFromTags","findEntity","parseTwitch","twitchEmote","emojiMatch","twemojiParser","assetType","mentionMatch","match","linkMatch","parseMessageEntities","embeddedEmotes","offset","arrayOffset","spaceIndex","startIndex","endIndex","entity","normalizedEmbeddedEmotes","embeddedEmote","entityObject","difference","textAfter","normalizeHistoryMessages","rawMessages","chatState","fakeState","globalBadgesSelector","channelBadgesSelector","blockedUsers","blockedUsersSelector","acc","rawMessage","tekko","parsedTags","tmiSentTs","normalizeHistoryMessage","messagesChannelInitialState","isAdded","sliceMessages","diff","addedItemsCount","isSliced","normalizePayload","normalizeMessage","noticeType","normalizeNotice","systemMsg","normalizeUserNotice","messagesReducers","newItems","slicedMessages","prevIsEven","sliceUsers","rawHistory","prevItems","fetchChatHistoryRequest","fetchChatHistorySuccess","fetchChatHistoryFailure","parseTwitchGlobalEmotes","parseTwitchChannelEmotes","parseFfzChannelEmotes","parseBlockedUsers","parseBadges","twitchEmotesInitialState","global","twitchEmotesReducers","fetchTwitchEmotesRequest","twitchEmotes","fetchTwitchEmotesSuccess","fetchTwitchEmotesFailure","bttvEmotesInitialState","byChannels","bttvChannelEmotesInitialState","bttvEmotesReducers","fetchBttvGlobalEmotesRequest","bttvEmotes","fetchBttvGlobalEmotesSuccess","parseBttvGlobalEmotes","fetchBttvGlobalEmotesFailure","fetchBttvChannelEmotesRequest","fetchBttvChannelEmotesSuccess","channelEmotes","sharedEmotes","parseBttvChannelEmotes","fetchBttvChannelEmotesFailure","ffzEmotesInitialState","ffzChannelEmotesInitialState","ffzEmotesReducers","fetchFfzGlobalEmotesRequest","ffzEmotes","fetchFfzGlobalEmotesSuccess","defaultSets","default_sets","parseFfzGlobalEmotes","fetchFfzGlobalEmotesFailure","fetchFfzChannelEmotesRequest","fetchFfzChannelEmotesSuccess","fetchFfzChannelEmotesFailure","badgesInitialState","badgesChannelInitialState","badgesReducers","fetchGlobalBadgesRequest","fetchGlobalBadgesSuccess","fetchGlobalBadgesFailure","fetchChannelBadgesRequest","fetchChannelBadgesSuccess","fetchChannelBadgesFailure","channelParamsInitialState","room","paramsReducers","blockedUsersInitialState","blockedUsersReducers","fetchBlockedUsersRequest","fetchBlockedUsersSuccess","fetchBlockedUsersFailure","chatHistoryApi","twitchApi","bttvApi","ffzApi","ownMessage","getState","writeEmotesUsageStatistic","now","normalizeOwnMessage","module","getTwitchUserEmoteCategories","getMainEmoteCategories","createSelector","filter","createEmoteCategories","mainEmoteCategories","frequentlyUsed","getEmotesFromUsageStatistic","roomId","readOptionsFromLocalStorage","writeOptionsToLocalStore","blacklistKeywords","highlightKeywords","changeOption","textLower","initialEmotesUsageStatistic","readEmotesUsageStatistic","getItem","getUsageStatisticFromEntries","lastUpdatedAt","uses","mergeFn","k","statistic","newHistory","normalizeHistory","emoteEntity"],"mappings":"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","file":"static/js/main.9f0d4bf7.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetchUser as apiFetchUser, TwitchUsersResponse } from 'api/twitch';\nimport { AppThunk } from 'app/store';\nimport { RootState } from 'app/rootReducer';\nimport { writeUserToLocatStorage } from 'features/auth/authUtils';\n\ntype AuthState = {\n  isAuthReady: boolean;\n  isAuth: boolean;\n  userId: string | null;\n  userLogin: string | null;\n};\n\ntype InitializeAuth = {\n  isAuth: boolean;\n  userId?: string;\n  userLogin?: string;\n};\n\nexport const initialState: AuthState = {\n  isAuthReady: false,\n  isAuth: false,\n  userId: null,\n  userLogin: null,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    initializeAuth: (\n      state,\n      { payload }: PayloadAction<InitializeAuth>,\n    ): void => {\n      state.isAuthReady = true;\n      state.isAuth = payload.isAuth;\n\n      if (payload.userId) {\n        state.userId = payload.userId;\n      }\n\n      if (payload.userLogin) {\n        state.userLogin = payload.userLogin;\n      }\n    },\n\n    invalidateAuth: (): AuthState => initialState,\n\n    fetchUserRequest: (state): void => {\n      state.isAuthReady = false;\n      state.isAuth = false;\n    },\n\n    fetchUserSuccess: (\n      state,\n      { payload }: PayloadAction<TwitchUsersResponse>,\n    ): void => {\n      state.isAuthReady = true;\n      state.isAuth = true;\n\n      state.userId = payload.data[0].id;\n      state.userLogin = payload.data[0].login;\n    },\n\n    fetchUserFailure: (state, { payload }: PayloadAction<string>): void => {\n      state.isAuthReady = true;\n      state.isAuth = false;\n    },\n  },\n});\n\nexport const {\n  initializeAuth,\n  invalidateAuth,\n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserFailure,\n} = auth.actions;\n\nexport default auth.reducer;\n\nexport const fetchUser = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchUserRequest());\n    const users = await apiFetchUser(userId);\n    const { id, login } = users.data[0];\n    writeUserToLocatStorage({ id, login });\n    dispatch(fetchUserSuccess(users));\n  } catch (e) {\n    dispatch(fetchUserFailure(e));\n  }\n};\n\nexport const isAuthReadySelector = (state: RootState): boolean =>\n  state.auth.isAuthReady;\n\nexport const isAuthSelector = (state: RootState): boolean => state.auth.isAuth;\n\nexport const userLoginSelector = (state: RootState): string | null =>\n  state.auth.userLogin;\n\nexport const userIdSelector = (state: RootState): string | null =>\n  state.auth.userId;\n","export const TWITCH_API_AUTH_BASE = 'https://id.twitch.tv/oauth2/authorize';\n\nexport const TWITCH_API_CLIENT_ID = process.env.REACT_APP_TWITCH_API_CLIENT_ID;\nexport const TWITCH_API_REDIRECT_URI =\n  process.env.REACT_APP_TWITCH_API_REDIRECT_URI;\n\nexport const CHANNEL_MESSAGES_LIMIT = 500;\nexport const STORE_USERS_LIMIT = 500;\n\nexport const API_REQUESTS_TIMEOUT = 10000;\n\nexport const SUGGESTION_TYPES = {\n  users: {\n    name: 'users',\n    limit: 5,\n    regex: /^@([\\w\\d_]*)$/,\n  },\n  emotes: {\n    name: 'emotes',\n    limit: 10,\n    regex: /^:([\\w\\d_]{2,})$/,\n  },\n};\n\nexport const NOTICE_MESSAGE_TAGS = [\n  'msg_banned',\n  'msg_bad_characters',\n  'msg_channel_blocked',\n  'msg_channel_suspended',\n  'msg_duplicate',\n  'msg_emoteonly',\n  'msg_facebook',\n  'msg_followersonly',\n  'msg_followersonly_followed',\n  'msg_followersonly_zero',\n  'msg_r9k',\n  'msg_ratelimit',\n  'msg_rejected',\n  'msg_rejected_mandatory',\n  'msg_room_not_found',\n  'msg_slowmode',\n  'msg_subsonly',\n  'msg_suspended',\n  'msg_timedout',\n  'msg_verified_email',\n];\n\nexport type FetchFlags = {\n  isLoading: boolean;\n  isLoaded: boolean;\n  isError: boolean;\n  error: string | null;\n};\n\nexport const initialFetchFlags: FetchFlags = {\n  isLoading: false,\n  isLoaded: false,\n  isError: false,\n  error: null,\n};\n","// https://regex101.com/r/cpaNXh/1\nconst isStartsWithProtocolRegex = /^(?:(?:[a-z]+:)?\\/\\/)/;\n\nconst normalizeHref = (href: string) =>\n  isStartsWithProtocolRegex.test(href) ? href : `//${href}`;\n\nexport default normalizeHref;\n","import * as R from 'ramda';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport * as api from 'api';\nimport normalizeHref from 'utils/normalizeHref';\n\nexport interface TwitchEmote {\n  type: 'twitch-emote';\n  id: number;\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface BttvEmote {\n  type: 'bttv-emote';\n  id: string;\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface FfzEmote {\n  type: 'ffz-emote';\n  id: number;\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface Emoji {\n  type: 'emoji';\n  alt: string;\n  src: string;\n  srcSet: null;\n}\nexport interface Mention {\n  type: 'mention';\n  text: string;\n  target: string;\n}\nexport interface Link {\n  type: 'link';\n  text: string;\n  href: string;\n}\nexport interface Badge {\n  alt: string;\n  label: string;\n  src: string;\n  srcSet: string;\n}\n\nexport type Emote = TwitchEmote | BttvEmote | FfzEmote;\n\nconst TWITCH_EMOTES_CDN = '//static-cdn.jtvnw.net/emoticons/v1';\nconst BTTV_EMOTES_CDN = '//cdn.betterttv.net/emote';\n\n// prettier-ignore\nexport const regexEmotesMap: Record<string, string> = {\n  '[oO](_|\\\\.)[oO]': 'O_o',\n  '\\\\&gt\\\\;\\\\(':     '>(',\n  '\\\\&lt\\\\;3':       '<3',\n  '\\\\:-?(o|O)':      ':O',\n  '\\\\:-?(p|P)':      ':P',\n  '\\\\:-?[\\\\\\\\/]':    ':/',\n  '\\\\:-?[z|Z|\\\\|]':  ':Z',\n  '\\\\:-?\\\\(':        ':(',\n  '\\\\:-?\\\\)':        ':)',\n  '\\\\:-?D':          ':D',\n  '\\\\;-?(p|P)':      ';P',\n  '\\\\;-?\\\\)':        ';)',\n  'R-?\\\\)':          'R)',\n  'B-?\\\\)':          'B)',\n};\n\nexport const getFfzSrcSet = R.pipe<{}, [string, string][], string[], string>(\n  R.toPairs,\n  R.map(([dpi, url]) => `${url} ${dpi}x`),\n  R.join(', '),\n);\n\nexport const createTwitchEmote = ({\n  id,\n  code,\n}: api.TwitchEmote): TwitchEmote => ({\n  type: 'twitch-emote',\n  id,\n  alt: regexEmotesMap[code] || code,\n  src: `${TWITCH_EMOTES_CDN}/${id}/1.0`,\n  srcSet: `${TWITCH_EMOTES_CDN}/${id}/1.0 1x, ${TWITCH_EMOTES_CDN}/${id}/2.0 2x, ${TWITCH_EMOTES_CDN}/${id}/3.0 4x`,\n});\n\nexport const createBttvEmote = ({\n  id,\n  code,\n}: api.BttvGlobalEmote | api.BttvChannelEmote): BttvEmote => ({\n  type: 'bttv-emote',\n  id,\n  alt: code,\n  src: `${BTTV_EMOTES_CDN}/${id}/1x`,\n  srcSet: `${BTTV_EMOTES_CDN}/${id}/2x 2x, ${BTTV_EMOTES_CDN}/${id}/3x 4x`,\n});\n\nexport const createFfzEmote = ({ id, name, urls }: api.FfzEmote): FfzEmote => ({\n  type: 'ffz-emote',\n  id,\n  alt: name,\n  src: urls[1],\n  srcSet: getFfzSrcSet(urls),\n});\n\nexport const createEmoji = (alt: string, src: string): Emoji => ({\n  type: 'emoji',\n  alt: `:${alt}:`,\n  src,\n  srcSet: null,\n});\n\nexport const createMention = (text: string, target: string): Mention => ({\n  type: 'mention',\n  text,\n  target,\n});\n\nexport const createLink = (href: string): Link => ({\n  type: 'link',\n  text: href,\n  href: normalizeHref(href),\n});\n\nexport const createBadge = ({\n  title,\n  description,\n  image_url_1x: imageUrl1x,\n  image_url_2x: imageUrl2x,\n  image_url_4x: imageUrl4x,\n}: api.TwitchBadgeVersion): Badge => ({\n  alt: title,\n  label: description,\n  src: imageUrl1x,\n  srcSet: `${imageUrl1x} 1x, ${imageUrl2x} 2x, ${imageUrl4x} 4x`,\n});\n\nexport const createBadges = (\n  badges: twitchIrc.Badges,\n  globalBadges: Record<string, api.TwitchBadge>,\n  channelBadges: Record<string, api.TwitchBadge>,\n): Badge[] => {\n  const mapBadges = ([name, version]: [string, string]): Badge | false => {\n    const badge =\n      channelBadges[name]?.versions[version] ||\n      globalBadges[name]?.versions[version];\n\n    return badge ? createBadge(badge) : false;\n  };\n\n  return R.pipe<{}, [string, string][], any[], any[]>(\n    R.toPairs,\n    R.map(mapBadges),\n    R.filter(Boolean),\n  )(badges);\n};\n","\"use strict\";\n\nvar e,\n    t = (e = require(\"tls\")) && \"object\" == typeof e && \"default\" in e ? e.default : e,\n    r = require(\"net\"),\n    n = require(\"events\"),\n    s = require(\"tekko\");\n\nfunction a() {\n  return (a = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n\n      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nvar i,\n    o = function o() {\n  return \"justinfan\" + Math.floor(1e5 * Math.random()).toString().padStart(5, \"0\");\n},\n    m = function m(e) {\n  return e.startsWith(\"\u0001ACTION \") && e.endsWith(\"\u0001\");\n},\n    c = function c(e) {\n  return e.slice(8, -1);\n},\n    u = function u(e) {\n  return e.middle[0].slice(1);\n},\n    d = !(\"undefined\" == typeof process || !process.versions || !process.versions.node),\n    g = [\"mod\", \"emote-only\", \"r9k\", \"rituals\", \"subs-only\", \"msg-param-should-share-streak\"],\n    l = [\"tmi-sent-ts\", \"bits\", \"ban-duration\", \"msg-param-cumulative-months\", \"msg-param-months\", \"msg-param-promo-gift-total\", \"msg-param-streak-months\", \"msg-param-viewerCount\", \"msg-param-threshold\"],\n    p = {\n  \"badge-info\": \"badgeInfo\",\n  \"display-name\": \"displayName\",\n  \"emote-sets\": \"emoteSets\",\n  \"room-id\": \"roomId\",\n  \"tmi-sent-ts\": \"tmiSentTs\",\n  \"user-id\": \"userId\",\n  \"target-msg-id\": \"targetMsgId\",\n  \"target-user-id\": \"targetUserId\",\n  \"msg-id\": \"msgId\",\n  \"system-msg\": \"systemMsg\",\n  \"emote-only\": \"emoteOnly\",\n  \"followers-only\": \"followersOnly\",\n  \"subs-only\": \"subsOnly\",\n  \"ban-duration\": \"banDuration\",\n  \"message-id\": \"messageId\",\n  \"thread-id\": \"threadId\",\n  \"msg-param-cumulative-months\": \"msgParamCumulativeMonths\",\n  \"msg-param-displayName\": \"msgParamDisplayName\",\n  \"msg-param-login\": \"msgParamLogin\",\n  \"msg-param-months\": \"msgParamMonths\",\n  \"msg-param-promo-gift-total\": \"msgParamPromoGiftTotal\",\n  \"msg-param-promo-name\": \"msgParamPromoName\",\n  \"msg-param-recipient-display-name\": \"msgParamRecipientDisplayName\",\n  \"msg-param-recipient-id\": \"msgParamRecipientId\",\n  \"msg-param-recipient-user-name\": \"msgParamRecipientUserName\",\n  \"msg-param-sender-login\": \"msgParamSenderLogin\",\n  \"msg-param-sender-name\": \"msgParamSenderName\",\n  \"msg-param-should-share-streak\": \"msgParamShouldShareStreak\",\n  \"msg-param-streak-months\": \"msgParamStreakMonths\",\n  \"msg-param-sub-plan\": \"msgParamSubPlan\",\n  \"msg-param-sub-plan-name\": \"msgParamSubPlanName\",\n  \"msg-param-viewerCount\": \"msgParamViewerCount\",\n  \"msg-param-ritual-name\": \"msgParamRitualName\",\n  \"msg-param-threshold\": \"msgParamThreshold\"\n},\n    h = [\"subscriber\", \"turbo\", \"user-type\"],\n    f = function f(e) {\n  return void 0 === e && (e = \"\"), e ? e.split(\",\").reduce(function (e, t) {\n    var r,\n        n = t.split(\"/\");\n    return a({}, e, ((r = {})[n[0]] = n[1], r));\n  }, {}) : {};\n},\n    v = function v(e) {\n  return e ? Object.entries(e).reduce(function (e, t) {\n    var r,\n        n = t[0],\n        s = t[1];\n    return h.includes(n) ? e : a({}, e, ((r = {})[p[n] || n] = function (e, t) {\n      if (\"emotes\" === e) return void 0 === (r = t) && (r = \"\"), r ? r.split(\"/\").reduce(function (e, t) {\n        var r,\n            n = t.split(\":\");\n        return a({}, e, ((r = {})[n[0]] = n[1].split(\",\").map(function (e) {\n          var t = e.split(\"-\"),\n              r = t[1];\n          return {\n            start: Number.parseInt(t[0], 10),\n            end: Number.parseInt(r, 10)\n          };\n        }), r));\n      }, {}) : {};\n      var r;\n      if (\"badges\" === e) return f(t);\n      if (\"badge-info\" === e) return f(t);\n\n      if (\"followers-only\" === e) {\n        var n = !1;\n        return \"-1\" === t ? n = !1 : \"0\" === t ? n = !0 : \"string\" == typeof t && (n = parseInt(t, 10)), n;\n      }\n\n      if (\"slow\" === e) {\n        var s = !1;\n        return \"0\" === t ? s = !1 : \"string\" == typeof t && (s = parseInt(t, 10)), s;\n      }\n\n      return g.includes(e) ? \"1\" === t : l.includes(e) ? parseInt(t, 10) : \"string\" == typeof t ? t.replace(\"\\\\s\", \" \") : t;\n    }(n, s), r));\n  }, {}) : {};\n},\n    S = function S(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n},\n    w = function w(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    message: e.trailing,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n};\n\n(i = exports.Commands || (exports.Commands = {})).REPLY001 = \"001\", i.PING = \"PING\", i.PONG = \"PONG\", i.JOIN = \"JOIN\", i.PART = \"PART\", i.PRIVMSG = \"PRIVMSG\", i.NOTICE = \"NOTICE\", i.USERNOTICE = \"USERNOTICE\", i.GLOBALUSERSTATE = \"GLOBALUSERSTATE\", i.USERSTATE = \"USERSTATE\", i.ROOMSTATE = \"ROOMSTATE\", i.CLEARCHAT = \"CLEARCHAT\", i.CLEARMSG = \"CLEARMSG\", i.HOSTTARGET = \"HOSTTARGET\", i.WHISPER = \"WHISPER\";\n\nvar R,\n    P = function (e) {\n  var n, i;\n\n  function g(t) {\n    var r;\n    return void 0 === t && (t = {}), (r = e.call(this) || this).socket = null, r.globalUserState = null, r.channels = {}, r._connected = !1, r._connecting = !1, r._registered = !1, r.options = a({\n      secure: !0\n    }, t), r;\n  }\n\n  i = e, (n = g).prototype = Object.create(i.prototype), n.prototype.constructor = n, n.__proto__ = i;\n  var l,\n      p = g.prototype;\n  return p.connect = function () {\n    try {\n      var e = this,\n          t = d ? e._connectInNode() : e._connectInBrowser();\n      return Promise.resolve(t).then(function () {\n        return e._register();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, p.disconnect = function () {\n    this._connected && (d ? this.socket.destroy() : this.socket.close(), this.socket = null, this._connected = !1, this._connecting = !1, this._registered = !1, this.emit(\"disconnect\"));\n  }, p.receiveRaw = function (e) {\n    var t = this;\n    e.trim().split(\"\\r\\n\").forEach(function (e) {\n      return t._handleMessage(e);\n    });\n  }, p.sendRaw = function (e) {\n    return !(null === this.socket || !e || (d ? this.socket.write(e) : this.socket.send(e), 0));\n  }, p.say = function (e, t) {\n    var r = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: t\n    });\n    return this.sendRaw(r);\n  }, p.sendCommand = function (e, t, r) {\n    void 0 === r && (r = \"\");\n    var n = Array.isArray(r) ? r.join(\" \") : r,\n        a = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: \"/\" + t + \" \" + n\n    });\n    return this.sendRaw(a);\n  }, p.join = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.JOIN,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, p.part = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.PART,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, p._handleMessage = function (e) {\n    var t = s.parse(e);\n    t.raw = e;\n    var r = t.command;\n    if (r === exports.Commands.PING) return this.sendRaw(exports.Commands.PONG + \" :tmi.twitch.tv\"), void this.emit(\"ping\", {\n      raw: e\n    });\n    if (r === exports.Commands.REPLY001) return this.options.name = t.middle[0], this._registered = !0, void this.emit(\"register\");\n\n    if (r !== exports.Commands.PRIVMSG) {\n      if (r === exports.Commands.USERSTATE) {\n        var n = u(t),\n            a = S(t);\n        return this._updateUserState(n, a.tags), void this.emit(\"userstate\", a);\n      }\n\n      if (r !== exports.Commands.JOIN) {\n        if (r !== exports.Commands.PART) {\n          if (r === exports.Commands.ROOMSTATE) {\n            var i = u(t),\n                o = S(t);\n            return this._updateRoomState(i, o.tags), void this.emit(\"roomstate\", o);\n          }\n\n          if (r !== exports.Commands.NOTICE) {\n            if (r !== exports.Commands.USERNOTICE) {\n              if (r !== exports.Commands.CLEARCHAT) {\n                if (r !== exports.Commands.CLEARMSG) {\n                  if (r !== exports.Commands.HOSTTARGET) {\n                    if (r !== exports.Commands.WHISPER) {\n                      var d, g;\n\n                      if (r === exports.Commands.GLOBALUSERSTATE) {\n                        var l = function (e) {\n                          var t = e.tags;\n                          return {\n                            raw: e.raw,\n\n                            get tags() {\n                              return v(t);\n                            }\n\n                          };\n                        }(t);\n\n                        return this._updateGlobalUserState(l.tags), void this.emit(\"globaluserstate\", l);\n                      }\n                    } else {\n                      var p = (g = (d = t).tags, {\n                        raw: d.raw,\n                        message: d.trailing,\n                        channel: d.middle[0],\n                        user: d.prefix.name,\n\n                        get tags() {\n                          return v(g);\n                        }\n\n                      });\n                      this.emit(\"whisper\", p);\n                    }\n                  } else {\n                    var h = w(t);\n                    this.emit(\"hosttarget\", h);\n                  }\n                } else {\n                  var f = w(t);\n                  this.emit(\"clearmessage\", f);\n                }\n              } else {\n                var R = w(t);\n                this.emit(\"clearchat\", R);\n              }\n            } else {\n              var P = w(t);\n              this.emit(\"usernotice\", P);\n            }\n          } else {\n            var b = w(t);\n            this.emit(\"notice\", b);\n          }\n        } else {\n          var C = u(t);\n          this.emit(\"part\", {\n            channel: C\n          });\n        }\n      } else {\n        var T = u(t);\n        this.emit(\"join\", {\n          channel: T\n        });\n      }\n    } else {\n      var y = function (e) {\n        var t = e.raw,\n            r = e.trailing,\n            n = e.tags,\n            s = e.prefix.name,\n            a = m(r);\n        return {\n          raw: t,\n          message: a ? c(r) : r,\n          channel: u(e),\n          user: s,\n\n          get tags() {\n            return v(n);\n          },\n\n          isAction: a\n        };\n      }(t);\n\n      this.emit(\"message\", y);\n    }\n  }, p._connectInNode = function () {\n    var e = this,\n        n = \"irc.chat.twitch.tv\",\n        s = this.options.secure ? 6697 : 6667;\n    return new Promise(function (a, i) {\n      e._connecting = !0;\n\n      var o = function o() {\n        e._connecting = !1, e._connected = !0, e.emit(\"connect\"), a();\n      };\n\n      e.options.secure ? e.socket = t.connect(s, n, {}, o) : (e.socket = new r.Socket(), e.socket.connect(s, n, o)), e.socket.on(\"error\", function (t) {\n        e._connected = !1, e._connecting = !1, e.emit(\"disconnect\", t), i(t);\n      }), e.socket.on(\"data\", function (t) {\n        e.receiveRaw(t.toString());\n      }), e.socket.on(\"close\", function () {\n        e._connected = !1, e._connecting = !1, e._registered = !1, e.emit(\"disconnect\");\n      });\n    });\n  }, p._connectInBrowser = function () {\n    var e = this,\n        t = this.options.secure ? \"wss://irc-ws.chat.twitch.tv:443\" : \"ws://irc-ws.chat.twitch.tv:80\";\n    return new Promise(function (r, n) {\n      e._connecting = !0, e.socket = new WebSocket(t), e.socket.onopen = function () {\n        e._connected = !0, e._connecting = !1, e.emit(\"connect\"), r();\n      }, e.socket.onmessage = function (t) {\n        return e.receiveRaw(t.data);\n      }, e.socket.onerror = function () {}, e.socket.onclose = function (t) {\n        var r = t.wasClean,\n            s = t.code,\n            a = t.reason;\n        if (e.socket = null, e._connected = !1, e._connecting = !1, e._registered = !1, r) e.emit(\"disconnect\");else {\n          var i = new Error(\"[\" + s + \"] \" + a);\n          e.emit(\"disconnect\", i), n(i);\n        }\n      };\n    });\n  }, p._register = function () {\n    var e = this;\n    if (!this._connected) return Promise.reject();\n    if (this._registered) return Promise.resolve();\n    var t = this.options,\n        r = t.auth,\n        n = t.name || o(),\n        s = r ? \"oauth:\" + r : \"SCHMOOPIIE\";\n    return this.sendRaw(\"CAP REQ :twitch.tv/tags twitch.tv/commands\"), this.sendRaw(\"PASS \" + s), this.sendRaw(\"NICK \" + n), new Promise(function (t, r) {\n      var n = function r() {\n        t(), e.off(\"register\", r);\n      };\n\n      e.on(\"register\", n), setTimeout(function () {\n        r(), e.off(\"register\", n);\n      }, 1e4);\n    });\n  }, p._updateGlobalUserState = function (e) {\n    this.globalUserState = a({}, this.globalUserState, {}, e);\n  }, p._updateUserState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      userState: t\n    }), r));\n  }, p._updateRoomState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      roomState: t\n    }), r));\n  }, (l = [{\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"registered\",\n    get: function get() {\n      return this._registered;\n    }\n  }]) && function (e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var n = t[r];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }(g.prototype, l), g;\n}(n.EventEmitter);\n\n(R = exports.UserNoticeType || (exports.UserNoticeType = {})).sub = \"sub\", R.resub = \"resub\", R.subgift = \"subgift\", R.anonsubgift = \"anonsubgift\", R.submysterygift = \"submysterygift\", R.giftpaidupgrade = \"giftpaidupgrade\", R.rewardgift = \"rewardgift\", R.anongiftpaidupgrade = \"anongiftpaidupgrade\", R.raid = \"raid\", R.unraid = \"unraid\", R.ritual = \"ritual\", R.bitsbadgetier = \"bitsbadgetier\", exports.Client = P, exports.getChannelFromMessage = u, exports.getIsAction = m, exports.getRandomUsername = o, exports.isNode = d, exports.normalizeActionMessage = c, exports.parseMessageTags = v;","import * as R from 'ramda';\nimport { lib as emojilib } from 'emojilib';\n\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\n\nimport { TwitchEmote } from 'api/twitch';\nimport { BttvGlobalEmote, BttvChannelEmote } from 'api/bttv';\nimport { FfzEmote } from 'api/ffz';\n\n// by id\n\nconst findTwitchEmoteByIdInSets = (\n  id: number,\n  sets: Record<string, TwitchEmote[]>,\n) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const set of Object.values(sets)) {\n    const result = R.find(R.propEq('id', id), set);\n\n    if (result) return htmlEntity.createTwitchEmote(result);\n  }\n\n  return null;\n};\n\nconst findTwitchEmoteById = (\n  id: number,\n  { twitchGlobal, twitchUser }: NonNullable<StateEmotes>,\n) =>\n  findTwitchEmoteByIdInSets(id, twitchGlobal) ||\n  findTwitchEmoteByIdInSets(id, twitchUser);\n\nconst findBttvEmoteById = (\n  id: string,\n  { bttvGlobal, bttvChannel }: NonNullable<StateEmotes>,\n) => {\n  const findById = R.find<BttvGlobalEmote | BttvChannelEmote>(\n    R.propEq('id', id),\n  );\n  const result = findById(bttvGlobal) || findById(bttvChannel);\n\n  return result ? htmlEntity.createBttvEmote(result) : null;\n};\n\nconst findFfzEmoteById = (\n  id: number,\n  { ffzGlobal, ffzChannel }: NonNullable<StateEmotes>,\n) => {\n  const findById = R.find<FfzEmote>(R.propEq('id', id));\n  const result = findById(ffzGlobal) || findById(ffzChannel);\n\n  return result ? htmlEntity.createFfzEmote(result) : null;\n};\n\n// by name\n\nconst regexMap: Record<number, string> = {\n  4: '>\\\\(', // '\\\\&gt\\\\;\\\\('\n  9: '<3', // '\\\\&lt\\\\;3'\n};\n\nconst findTwitchEmoteByNameInSets = (\n  name: string,\n  sets: Record<string, TwitchEmote[]>,\n) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const set of Object.values(sets)) {\n    const result = R.find(({ id, code }) => {\n      // 1-14 - match by regex\n      if (id >= 1 && id <= 14) {\n        const regexString = regexMap[id] || code;\n        return RegExp(`^${regexString}$`).test(name);\n      }\n\n      return name === code;\n    }, set);\n\n    if (result) return htmlEntity.createTwitchEmote(result);\n  }\n\n  return null;\n};\n\nconst findTwitchEmoteByName = (\n  name: string,\n  { twitchGlobal, twitchUser }: NonNullable<StateEmotes>,\n) =>\n  findTwitchEmoteByNameInSets(name, twitchGlobal) ||\n  findTwitchEmoteByNameInSets(name, twitchUser);\n\nconst findBttvEmoteByName = (\n  name: string,\n  { bttvGlobal, bttvChannel }: NonNullable<StateEmotes>,\n) => {\n  const findByName = R.find<BttvGlobalEmote | BttvChannelEmote>(\n    R.propEq('code', name),\n  );\n  const result = findByName(bttvGlobal) || findByName(bttvChannel);\n\n  return result ? htmlEntity.createBttvEmote(result) : null;\n};\n\nconst findFfzEmoteByName = (\n  name: string,\n  { ffzGlobal, ffzChannel }: NonNullable<StateEmotes>,\n) => {\n  const findByName = R.find<FfzEmote>(R.propEq('name', name));\n  const result = findByName(ffzGlobal) || findByName(ffzChannel);\n\n  return result ? htmlEntity.createFfzEmote(result) : null;\n};\n\nconst findEmojiByName = (char: string) =>\n  R.pipe<any, any, any, string | undefined>(\n    R.filter(R.propEq('char', char)),\n    R.keys,\n    R.head,\n  )(emojilib);\n\n// by text\n\n/* eslint-disable no-restricted-syntax */\nconst findTwitchEmotesByText = (\n  result: any[],\n  sets: Record<string, TwitchEmote[]>,\n  text: string,\n  limit: number,\n): boolean => {\n  for (const items of Object.values(sets)) {\n    for (const emote of items) {\n      if (result.length === limit) return true;\n\n      if (emote.code.toLowerCase().includes(text)) {\n        result.push(htmlEntity.createTwitchEmote(emote));\n      }\n    }\n  }\n\n  return false;\n};\n\nconst findBttvEmotesByText = (\n  result: any[],\n  bttv: BttvGlobalEmote[] | BttvChannelEmote[],\n  text: string,\n  limit: number,\n): boolean => {\n  for (const emote of bttv) {\n    if (result.length === limit) return true;\n\n    if (emote.code.toLowerCase().includes(text)) {\n      result.push(htmlEntity.createBttvEmote(emote));\n    }\n  }\n\n  return false;\n};\n\nconst findFfzEmotesByText = (\n  result: any[],\n  ffz: FfzEmote[],\n  text: string,\n  limit: number,\n): boolean => {\n  for (const emote of ffz) {\n    if (result.length === limit) return true;\n\n    if (emote.name.toLowerCase().includes(text)) {\n      result.push(htmlEntity.createFfzEmote(emote));\n    }\n  }\n\n  return false;\n};\n/* eslint-enable no-restricted-syntax */\n\nconst findEmote = {\n  twitch: {\n    byId: findTwitchEmoteById,\n    byName: findTwitchEmoteByName,\n    byText: findTwitchEmotesByText,\n  },\n  bttv: {\n    byId: findBttvEmoteById,\n    byName: findBttvEmoteByName,\n    byText: findBttvEmotesByText,\n  },\n  ffz: {\n    byId: findFfzEmoteById,\n    byName: findFfzEmoteByName,\n    byText: findFfzEmotesByText,\n  },\n  emoji: {\n    byName: findEmojiByName,\n  },\n};\n\nexport default findEmote;\n","import { API_REQUESTS_TIMEOUT } from 'utils/constants';\n\nexport interface FetchRequestOptions extends RequestInit {\n  timeout?: number;\n}\n\nconst fetchRequest = async (url: string, options: FetchRequestOptions = {}) => {\n  let fetchOptions = { timeout: API_REQUESTS_TIMEOUT, ...options };\n\n  if (options.timeout) {\n    const controller = new AbortController();\n    delete fetchOptions.timeout;\n    fetchOptions = { ...fetchOptions, signal: controller.signal };\n    setTimeout(() => controller.abort(), options.timeout);\n  }\n\n  const response = await fetch(url, fetchOptions);\n\n  const body = await response.json();\n\n  if (!response.ok) {\n    const error = Error(response.statusText);\n    // error.data = body;\n    throw error;\n  }\n\n  return body;\n};\n\nexport default fetchRequest;\n","import { RootState } from 'app/rootReducer';\n\ntype OptionItem = {\n  type: 'switch' | 'input';\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  value: boolean | string;\n};\n\ntype OptionCategories = {\n  title: string;\n  items: OptionItem[];\n};\n\nexport const optionsSelector = (state: RootState): OptionCategories[] => [\n  {\n    title: 'My preferences',\n    items: [\n      {\n        type: 'switch',\n        id: 'show-timestamps',\n        name: 'showTimestamps',\n        title: 'Show Timestamps',\n        description: '',\n        value: state.options.showTimestamps,\n      },\n      {\n        type: 'switch',\n        id: 'split-chat',\n        name: 'splitChat',\n        title: 'Split Chat',\n        description: '',\n        value: state.options.splitChat,\n      },\n      {\n        type: 'switch',\n        id: 'fixed-width',\n        name: 'fixedWidth',\n        title: 'Fixed Width',\n        description: '',\n        value: state.options.fixedWidth,\n      },\n      // {\n      //   type: 'input',\n      //   id: 'blacklist-keywords',\n      //   name: 'blacklistKeywords',\n      //   title: 'Set Blacklist Keywords',\n      //   description: '',\n      //   value: state.options.blacklistKeywords,\n      // },\n      // {\n      //   type: 'input',\n      //   id: 'highlight-keywords',\n      //   name: 'highlightKeywords',\n      //   title: 'Set Highlight Keywords',\n      //   description: '',\n      //   value: state.options.highlightKeywords,\n      // },\n    ],\n  },\n];\n\nexport const isShowTimestampsSelector = (state: RootState) =>\n  state.options.showTimestamps;\n\nexport const isSplitChatSelector = (state: RootState) =>\n  state.options.splitChat;\n\nexport const isFixedWidthSelector = (state: RootState) =>\n  state.options.fixedWidth;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport jwt from 'jsonwebtoken';\n\nimport {\n  isAuthReadySelector,\n  initializeAuth,\n  fetchUser,\n} from 'features/auth/authSlice';\nimport { readUserFromLocatStorage } from 'features/auth/authUtils';\n\nconst useInitializeAuth = () => {\n  const dispatch = useDispatch();\n  const isAuthReady = useSelector(isAuthReadySelector);\n\n  useEffect(() => {\n    if (isAuthReady) return;\n\n    const { idToken } = localStorage;\n    const user = readUserFromLocatStorage();\n\n    if (!idToken) {\n      dispatch(initializeAuth({ isAuth: false }));\n      return;\n    }\n\n    if (user) {\n      const { id, login } = user;\n      const params = { isAuth: true, userId: id, userLogin: login };\n\n      dispatch(initializeAuth(params));\n    } else {\n      const jwtData = jwt.decode(idToken);\n\n      if (jwtData) {\n        dispatch(fetchUser(jwtData.sub));\n      } else {\n        dispatch(initializeAuth({ isAuth: false }));\n      }\n    }\n  }, [dispatch, isAuthReady]);\n};\n\nexport default useInitializeAuth;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  isAuthReadySelector,\n  isAuthSelector,\n  userIdSelector,\n} from 'features/auth/authSlice';\nimport {\n  currentChannelSelector,\n  currentChannelIdSelector,\n  isHistoryAddedSelector,\n  isHistoryLoadedSelector,\n  isTwitchEmotesLoadedSelector,\n  isBttvGlobalEmotesLoadedSelector,\n  isBttvChannelEmotesLoadedSelector,\n  isFfzGlobalEmotesLoadedSelector,\n  isFfzChannelEmotesLoadedSelector,\n  isGlobalBadgesLoadedSelector,\n  isChannelBadgesLoadedSelector,\n  isBlockedUsersLoadedSelector,\n} from 'features/chat/selectors';\nimport {\n  addChatHistory,\n  fetchChatHistory,\n  fetchTwitchEmotes,\n  fetchBttvGlobalEmotes,\n  fetchBttvChannelEmotes,\n  fetchFfzGlobalEmotes,\n  fetchFfzChannelEmotes,\n  fetchChannelBadges,\n  fetchGlobalBadges,\n  fetchBlockedUsers,\n} from 'features/chat/slice';\n\nconst useFetchChatData = () => {\n  const dispatch = useDispatch();\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n  const userId = useSelector(userIdSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const currentChannelId = useSelector(currentChannelIdSelector);\n\n  const isTwitchEmotesLoaded = useSelector(isTwitchEmotesLoadedSelector);\n  const isBttvGlobalEmotesLoaded = useSelector(\n    isBttvGlobalEmotesLoadedSelector,\n  );\n  const isBttvChannelEmotesLoaded = useSelector(\n    isBttvChannelEmotesLoadedSelector,\n  );\n  const isFfzGlobalEmotesLoaded = useSelector(isFfzGlobalEmotesLoadedSelector);\n  const isFfzChannelEmotesLoaded = useSelector(\n    isFfzChannelEmotesLoadedSelector,\n  );\n  const isGlobalBadgesLoaded = useSelector(isGlobalBadgesLoadedSelector);\n  const isChannelBadgesLoaded = useSelector(isChannelBadgesLoadedSelector);\n  const isHistoryLoaded = useSelector(isHistoryLoadedSelector);\n  const isBlockedUsersLoaded = useSelector(isBlockedUsersLoadedSelector);\n  const isHistoryAdded = useSelector(isHistoryAddedSelector);\n\n  const isReadyToAddHistory =\n    isAuthReady &&\n    currentChannel &&\n    !isHistoryAdded &&\n    (isAuth ? isTwitchEmotesLoaded : true) &&\n    (isAuth ? isBlockedUsersLoaded : true) &&\n    isBttvGlobalEmotesLoaded &&\n    isBttvChannelEmotesLoaded &&\n    isFfzGlobalEmotesLoaded &&\n    isFfzChannelEmotesLoaded &&\n    isGlobalBadgesLoaded &&\n    isChannelBadgesLoaded &&\n    isHistoryLoaded;\n\n  useEffect(() => {\n    dispatch(fetchBttvGlobalEmotes());\n    dispatch(fetchFfzGlobalEmotes());\n    dispatch(fetchGlobalBadges());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isReadyToAddHistory) {\n      dispatch(addChatHistory(currentChannel));\n    }\n  }, [dispatch, currentChannel, isReadyToAddHistory]);\n\n  useEffect(() => {\n    if (!isHistoryAdded && currentChannel) {\n      dispatch(fetchChatHistory(currentChannel));\n    }\n  }, [dispatch, currentChannel, isHistoryAdded]);\n\n  useEffect(() => {\n    if (isAuthReady && isAuth && userId) {\n      dispatch(fetchTwitchEmotes(userId));\n      dispatch(fetchBlockedUsers(userId));\n    }\n  }, [dispatch, isAuthReady, isAuth, userId]);\n\n  // TODO: check if emotes and badges is already in the store\n\n  useEffect(() => {\n    if (currentChannel && currentChannelId) {\n      dispatch(fetchBttvChannelEmotes(currentChannel, currentChannelId));\n      dispatch(fetchFfzChannelEmotes(currentChannel, currentChannelId));\n      dispatch(fetchChannelBadges(currentChannel, currentChannelId));\n    }\n  }, [dispatch, currentChannel, currentChannelId]);\n};\n\nexport default useFetchChatData;\n","import { useState, useEffect } from 'react';\n\nconst useLocationHash = () => {\n  const [hash, setHash] = useState(window.location.hash);\n\n  useEffect(() => {\n    const handleHashChange = () => setHash(window.location.hash);\n\n    window.addEventListener('hashchange', handleHashChange);\n\n    return () => window.removeEventListener('hashchange', handleHashChange);\n  }, []);\n\n  return hash;\n};\n\nexport default useLocationHash;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useLocationHash from 'hooks/useLocationHash';\nimport { updateCurrentChannel } from 'features/chat/slice';\n\nconst useCurrentChannel = () => {\n  const dispatch = useDispatch();\n  const hash = useLocationHash();\n\n  useEffect(() => {\n    if (hash && hash.length > 1) {\n      const channel = hash.slice(1);\n\n      dispatch(updateCurrentChannel(channel));\n\n      localStorage.setItem('lastChannel', channel);\n\n      document.title = channel\n        ? `#${channel} - ${process.env.REACT_APP_NAME} `\n        : (process.env.REACT_APP_NAME as string);\n    }\n  }, [dispatch, hash]);\n};\n\nexport default useCurrentChannel;\n","import { useEffect, useRef } from 'react';\n\nconst usePrevious = <T>(state: T): T | undefined => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n};\n\nexport default usePrevious;\n","import { lib as emojilib } from 'emojilib';\n\nconst replaceEmojis = (text: string): string =>\n  text\n    .split(' ')\n    .map((word: string) => {\n      if (word[0] !== ':' || word[word.length - 1] !== ':') {\n        return word;\n      }\n\n      const name = word.slice(1, -1);\n      const emoji = emojilib[name];\n\n      return emoji && emoji.char ? emoji.char : word;\n    })\n    .join(' ');\n\nexport default replaceEmojis;\n","import { useEffect, useRef, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport usePrevious from 'hooks/usePrevious';\nimport { NOTICE_MESSAGE_TAGS } from 'utils/constants';\nimport {\n  addMessage,\n  clearChat,\n  updateIsConnected,\n  updateGlobalUserParams,\n  updateUserParams,\n  updateRoomParams,\n  addOwnMessage,\n} from 'features/chat/slice';\nimport {\n  currentChannelSelector,\n  isConnectedSelector,\n} from 'features/chat/selectors';\nimport replaceEmojis from 'features/chat/utils/replaceEmojis';\nimport {\n  isAuthSelector,\n  isAuthReadySelector,\n  userLoginSelector,\n  invalidateAuth,\n} from 'features/auth/authSlice';\n\nconst useTwitchClient = () => {\n  const dispatch = useDispatch();\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n  const userLogin = useSelector(userLoginSelector);\n  const isConnected = useSelector(isConnectedSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const prevChannel = usePrevious(currentChannel);\n  const clientRef = useRef<twitchIrc.Client | null>(null);\n\n  const registerEvents = useCallback(\n    (client: typeof clientRef) => {\n      if (!client.current) return;\n\n      const handleRegister = () => dispatch(updateIsConnected(true));\n\n      const handleDisconnect = () => dispatch(updateIsConnected(false));\n\n      const handleGlobalUserState = (data: twitchIrc.GlobalUserStateEvent) =>\n        dispatch(updateGlobalUserParams(data));\n\n      const handleUserState = (data: twitchIrc.UserStateEvent) =>\n        dispatch(updateUserParams(data));\n\n      const handleRoomState = (data: twitchIrc.RoomStateEvent) =>\n        dispatch(updateRoomParams(data));\n\n      const handleMessage = (message: twitchIrc.MessageEvent) =>\n        dispatch(addMessage({ type: 'message', message }));\n\n      const handleNotice = (message: twitchIrc.NoticeEvent) => {\n        if (\n          client.current &&\n          message.message === 'Login authentication failed'\n        ) {\n          dispatch(invalidateAuth());\n          client.current.disconnect();\n          // eslint-disable-next-line no-param-reassign\n          client.current = null;\n          return;\n        }\n\n        dispatch(addMessage({ type: 'notice', message, id: uuid() }));\n      };\n\n      const handleUserNotice = (message: twitchIrc.UserNoticeEvent) =>\n        dispatch(addMessage({ type: 'user-notice', message }));\n\n      const handleClearChat = (data: twitchIrc.ClearChatEvent) => {\n        if (!data.tags.targetUserId) return;\n        dispatch(clearChat(data));\n      };\n\n      client.current.on('register', handleRegister);\n      client.current.on('disconnect', handleDisconnect);\n      client.current.on('globaluserstate', handleGlobalUserState);\n      client.current.on('userstate', handleUserState);\n      client.current.on('roomstate', handleRoomState);\n      client.current.on('message', handleMessage);\n      client.current.on('notice', handleNotice);\n      client.current.on('usernotice', handleUserNotice);\n      client.current.on('clearchat', handleClearChat);\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.disconnect();\n        clientRef.current = null;\n      }\n    };\n  }, [clientRef]);\n\n  useEffect(() => {\n    if (!currentChannel || !isAuthReady) return;\n\n    if (!clientRef.current) {\n      const options = isAuth\n        ? { name: userLogin as string, auth: localStorage.accessToken }\n        : null;\n\n      (async () => {\n        clientRef.current = new twitchIrc.Client(options);\n\n        registerEvents(clientRef);\n\n        await clientRef.current.connect();\n\n        clientRef.current.join(currentChannel);\n      })();\n\n      return;\n    }\n\n    if (prevChannel && prevChannel !== currentChannel) {\n      clientRef.current.part(prevChannel);\n      clientRef.current.join(currentChannel);\n    }\n  }, [\n    dispatch,\n    registerEvents,\n    isAuth,\n    isAuthReady,\n    isConnected,\n    userLogin,\n    currentChannel,\n    prevChannel,\n  ]);\n\n  const client = () => ({\n    say(channel: string, message: string) {\n      if (!clientRef.current || !message.trim()) return;\n\n      const normalizedMessage = replaceEmojis(message.trim());\n\n      clientRef.current.say(channel, normalizedMessage);\n\n      function handleUserState(data: twitchIrc.UserStateEvent) {\n        if (data.channel === channel) {\n          dispatch(\n            addOwnMessage({\n              message: normalizedMessage,\n              channel,\n              tags: data.tags,\n            }),\n          );\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function handleNotice(data: twitchIrc.NoticeEvent) {\n        if (\n          data.channel === channel &&\n          NOTICE_MESSAGE_TAGS.includes(data.tags.msgId)\n        ) {\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function removeListeners() {\n        if (!clientRef.current) return;\n\n        clientRef.current.off('notice', handleNotice);\n        clientRef.current.off('userstate', handleUserState);\n      }\n\n      clientRef.current.on('notice', handleNotice);\n      clientRef.current.on('userstate', handleUserState);\n\n      setTimeout(() => removeListeners(), 10000);\n    },\n  });\n\n  return useMemo(client, [clientRef, dispatch]);\n};\n\nexport default useTwitchClient;\n","import { useCallback, useState } from 'react';\n\nconst useSetState = <T extends object>(\n  initialState: T = {} as T,\n): [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void] => {\n  const [state, set] = useState<T>(initialState);\n  const setState = useCallback(\n    (patch) => {\n      set((prevState) => ({\n        ...prevState,\n        ...(patch instanceof Function ? patch(prevState) : patch),\n      }));\n    },\n    [set],\n  );\n\n  return [state, setState];\n};\n\nexport default useSetState;\n","const getUsersByBeginText = (\n  beginText: string,\n  users: string[],\n  limit = 5,\n): string[] => {\n  const result = [];\n  const beginTextLower = beginText.toLowerCase();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const name of users) {\n    if (result.length === limit) return result;\n\n    const nameLower = name.toLowerCase();\n\n    if (beginTextLower === '' || nameLower.startsWith(beginTextLower)) {\n      result.push(name);\n    }\n  }\n\n  return result;\n};\n\nexport default getUsersByBeginText;\n","import { useRef, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport useSetState from 'hooks/useSetState';\nimport { SUGGESTION_TYPES } from 'utils/constants';\nimport getUsersByBeginText from 'features/chat/utils/getUsersByBeginText';\nimport getEmotesByText from 'features/chat/utils/getEmotesByText';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { usersSelector, emotesSelector } from 'features/chat/selectors';\n\ninterface ASuggestions {\n  isActive: boolean;\n  activeIndex: number;\n  start: number;\n  end: number;\n}\ninterface UserSuggestions extends ASuggestions {\n  type: 'users';\n  items: string[];\n}\ninterface EmoteSuggestions extends ASuggestions {\n  type: 'emotes';\n  items: htmlEntity.Emote[];\n}\nexport type SuggestionsState = UserSuggestions | EmoteSuggestions;\n\nconst suggestionsInitialState: SuggestionsState = {\n  type: 'users',\n  isActive: false,\n  items: [],\n  activeIndex: 0,\n  start: 0,\n  end: 0,\n};\n\nconst setSuggestionsIndexUp = ({\n  activeIndex,\n  items,\n  ...rest\n}: SuggestionsState) =>\n  ({\n    activeIndex: activeIndex === 0 ? items.length - 1 : activeIndex - 1,\n    items,\n    ...rest,\n  } as SuggestionsState);\n\nconst setSuggestionsIndexDown = ({\n  activeIndex,\n  items,\n  ...rest\n}: SuggestionsState) =>\n  ({\n    activeIndex: activeIndex === items.length - 1 ? 0 : activeIndex + 1,\n    items,\n    ...rest,\n  } as SuggestionsState);\n\nconst replaceSuggestionText = (\n  text: string,\n  { type, items, activeIndex, start, end }: SuggestionsState,\n) => {\n  if (items.length === 0) return text;\n\n  const currentItem = items[activeIndex];\n  const insertedText =\n    type === 'users'\n      ? `@${currentItem}`\n      : (currentItem as htmlEntity.Emote).alt;\n\n  const textBefore = text.substring(0, start);\n  const testAfter = text.substring(end) || ' ';\n\n  return `${textBefore}${insertedText}${testAfter}`;\n};\n\nconst useChatInput = (\n  setText: (value: React.SetStateAction<string>) => void,\n  onSendMessage: () => void,\n  chatInputRef: React.RefObject<HTMLElement>,\n) => {\n  const [suggestions, setSuggestions] = useSetState<SuggestionsState>(\n    suggestionsInitialState,\n  );\n\n  const emotes = useSelector(emotesSelector);\n  const users = useSelector(usersSelector);\n\n  const usersRef = useRef(users);\n  usersRef.current = users;\n  const emotesRef = useRef(emotes);\n  emotesRef.current = emotes;\n  const suggestionsRef = useRef(suggestions);\n  suggestionsRef.current = suggestions;\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const { value, selectionStart } = e.target;\n\n      setText(value);\n\n      const spaceIndexBefore = value.lastIndexOf(' ', selectionStart - 1);\n      const spaceIndexAfter = value.indexOf(' ', selectionStart);\n\n      const start = spaceIndexBefore === -1 ? 0 : spaceIndexBefore + 1;\n      const end = spaceIndexAfter === -1 ? value.length : spaceIndexAfter;\n\n      const word = value.substring(start, end);\n\n      const usersMatch = SUGGESTION_TYPES.users.regex.exec(word);\n\n      if (usersMatch) {\n        const [, beginText] = usersMatch;\n        const items = getUsersByBeginText(\n          beginText,\n          usersRef.current,\n          SUGGESTION_TYPES.users.limit,\n        );\n\n        setSuggestions({\n          type: 'users',\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      const emotesMatch = SUGGESTION_TYPES.emotes.regex.exec(word);\n\n      if (emotesMatch && emotesRef.current) {\n        const [, text] = emotesMatch;\n        const items = getEmotesByText(\n          text,\n          emotesRef.current,\n          SUGGESTION_TYPES.emotes.limit,\n        );\n\n        setSuggestions({\n          type: 'emotes',\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      if (suggestionsRef.current.isActive) {\n        setSuggestions(suggestionsInitialState);\n      }\n    },\n    [setText, setSuggestions, suggestionsRef],\n  );\n\n  const handleKeyUp = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {},\n    [],\n  );\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (suggestionsRef.current.isActive) {\n        if (e.key === 'Enter' || e.key === 'Tab') {\n          e.preventDefault();\n          setText((t) => replaceSuggestionText(t, suggestionsRef.current));\n          setSuggestions(suggestionsInitialState);\n\n          return;\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexUp);\n          return;\n        }\n\n        if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexDown);\n          return;\n        }\n\n        if (e.key === 'Escape') {\n          setSuggestions({ isActive: false });\n          return;\n        }\n      }\n\n      if (!suggestionsRef.current.isActive) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          onSendMessage();\n        }\n      }\n    },\n    [onSendMessage, setText, setSuggestions, suggestionsRef],\n  );\n\n  const handleSuggestionMouseEnter = useCallback(\n    (activeIndex: number) => setSuggestions({ activeIndex }),\n    [setSuggestions],\n  );\n\n  const handleSuggestionClick = useCallback(\n    (activeIndex: number) => {\n      setText((t) =>\n        replaceSuggestionText(t, { ...suggestionsRef.current, activeIndex }),\n      );\n\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n\n      setSuggestions(suggestionsInitialState);\n    },\n    [setText, setSuggestions, chatInputRef],\n  );\n\n  const handleBlur = useCallback(() => {\n    setSuggestions({ isActive: false });\n  }, [setSuggestions]);\n\n  return {\n    suggestions,\n    handleChange,\n    handleKeyUp,\n    handleKeyDown,\n    handleBlur,\n    handleSuggestionMouseEnter,\n    handleSuggestionClick,\n  };\n};\n\nexport default useChatInput;\n","import { useEffect } from 'react';\nimport arePassiveEventsSupported from 'are-passive-events-supported';\nimport useLatest from 'use-latest';\n\nconst MOUSEDOWN = 'mousedown';\nconst TOUCHSTART = 'touchstart';\n\ntype HandledEvents = [typeof MOUSEDOWN, typeof TOUCHSTART];\ntype HandledEventsType = HandledEvents[number];\ntype PossibleEvent = {\n  [Type in HandledEventsType]: HTMLElementEventMap[Type];\n}[HandledEventsType];\ntype Handler = (event: PossibleEvent) => void;\n\nconst events: HandledEvents = [MOUSEDOWN, TOUCHSTART];\n\nconst arePassiveEvents = arePassiveEventsSupported();\n\nconst getOptions = (event: HandledEventsType) =>\n  event === MOUSEDOWN && arePassiveEvents ? { passive: true } : undefined;\n\nconst isContainsNode = (el: HTMLElement | null, node: Node) =>\n  el && el.contains(node);\n\nconst useOnClickOutside = (\n  ref:\n    | React.RefObject<HTMLElement>\n    | React.RefObject<React.RefObject<HTMLElement>[]>,\n  handler: Handler | null,\n) => {\n  const handlerRef = useLatest(handler);\n\n  useEffect(() => {\n    if (!handler) {\n      return;\n    }\n\n    const listener = (event: PossibleEvent) => {\n      if (!ref.current || !handlerRef.current) return;\n\n      const isContains = Array.isArray(ref.current)\n        ? ref.current.some((r) =>\n            isContainsNode(r.current, event.target as Node),\n          )\n        : isContainsNode(ref.current, event.target as Node);\n\n      if (isContains) {\n        return;\n      }\n\n      handlerRef.current(event);\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, listener, getOptions(event));\n    });\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      events.forEach((event) => {\n        document.removeEventListener(\n          event,\n          listener,\n          getOptions(event) as EventListenerOptions,\n        );\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!handler]);\n};\n\nexport default useOnClickOutside;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M8.5 10L4 5.5 5.5 4 10 8.5 14.5 4 16 5.5 11.5 10l4.5 4.5-1.5 1.5-4.5-4.5L5.5 16 4 14.5 8.5 10z\"\n});\n\nconst SvgClose = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgClose, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/close.992b249e.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from 'styled-components';\n\nconst sizes = {\n  small: css`\n    width: 24px;\n    height: 24px;\n  `,\n  medium: css`\n    width: 30px;\n    height: 30px;\n  `,\n  // large: css``,\n};\n\nconst IconButton = styled.button.attrs({\n  type: 'button',\n})<{ size?: 'small' | 'medium' }>`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  outline: none;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  ${(p) => sizes[p.size || 'medium']};\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n\n  &:active {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n`;\n\nexport default IconButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ReactComponent as CloseIconSvg } from 'icons/close.svg';\nimport IconButton from 'components/IconButton';\n\nconst ChatModalRoot = styled.div`\n  height: 100%;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 4px 8px 0px,\n    rgba(0, 0, 0, 0.4) 0px 0px 4px 0px;\n  background-color: #18181b;\n  white-space: normal;\n  color: #fff;\n  border-radius: 4px;\n`;\nconst CloseButton = styled(IconButton).attrs({ size: 'small' })`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\nconst CloseIcon = styled(CloseIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  children: React.ReactNode;\n  onClose: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n};\n\nconst ChatModal = ({ children, onClose }: Props) => (\n  <ChatModalRoot>\n    <CloseButton onClick={onClose}>\n      <CloseIcon />\n    </CloseButton>\n    {children}\n  </ChatModalRoot>\n);\n\nexport default ChatModal;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M7 11a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-4 4a2 2 0 002-2H8a2 2 0 002 2z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0a6 6 0 11-12 0 6 6 0 0112 0z\",\n  clipRule: \"evenodd\"\n}));\n\nconst SvgSmileyFace = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgSmileyFace, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/smiley-face.1cc055ed.svg\";\nexport { ForwardRef as ReactComponent };","import CustomScrollbar from 'react-scrollbars-custom';\nimport styled from 'styled-components';\n\nconst Scrollbar = styled(CustomScrollbar).attrs({\n  disableTracksWidthCompensation: true,\n})`\n  overflow-y: auto;\n\n  .ScrollbarsCustom-Content {\n    padding: 0 !important;\n  }\n\n  .ScrollbarsCustom-TrackY {\n    background: none !important;\n  }\n\n  .ScrollbarsCustom-ThumbY {\n    margin-left: auto;\n    margin-right: auto;\n    width: 6px !important;\n  }\n`;\n\nexport default Scrollbar;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M13.192 14.606a7 7 0 111.414-1.414l3.101 3.1-1.414 1.415-3.1-3.1zM14 9A5 5 0 114 9a5 5 0 0110 0z\",\n  clipRule: \"evenodd\"\n});\n\nconst SvgSearch = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgSearch, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/search.a2f0945f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { RootState } from 'app/rootReducer';\nimport Scrollbar from 'components/Scrollbar';\nimport { emoteCategoriesSelector } from 'features/chat/selectors';\nimport { EmoteCategory } from 'features/chat/utils/createEmoteCategories';\nimport { ReactComponent as SearchIconSvg } from 'icons/search.svg';\n\nconst EmotePickerRoot = styled.div`\n  padding-top: 30px;\n  padding-bottom: 16px;\n  height: 100%;\n`;\nconst Categories = styled.div`\n  height: calc(100% - 30px);\n`;\nconst Category = styled.div`\n  padding-top: 10px;\n  padding-right: 16px;\n  padding-left: 16px;\n\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding-bottom: 10px;\n  font-size: 12px;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst CategoryItems = styled.div``;\nconst Emote = styled.img`\n  padding: 2px;\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n\n  &:hover {\n    background-color: rgba(119, 44, 232, 0.2);\n    cursor: pointer;\n  }\n`;\nconst SearchBlock = styled.div`\n  position: relative;\n  padding: 0 16px;\n  color: #adadb8;\n`;\nconst SearchInput = styled.input`\n  padding-left: 30px;\n  padding-right: 10px;\n  width: 100%;\n  height: 30px;\n  color: #efeff1;\n  font-family: inherit;\n  line-height: 1.5;\n  background-clip: padding-box;\n  background-color: rgba(255, 255, 255, 0.15);\n  border: 2px solid rgba(255, 255, 255, 0.15);\n  outline: 0;\n  border-radius: 4px;\n  appearance: none;\n  transition: box-shadow 0.1s ease-in, border 0.1s ease-in,\n    background-color 0.1s ease-in;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n`;\nconst SearchIcon = styled(SearchIconSvg)`\n  position: absolute;\n  top: 50%;\n  left: 21px;\n  display: block;\n  width: 20px;\n  height: 20px;\n  transform: translateY(-50%);\n`;\n\ntype Props = {\n  onEmoteClick: (name: string) => void;\n};\n\nconst EmotePicker = ({ onEmoteClick }: Props) => {\n  const [search, setSearch] = useState('');\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const emoteCategories = useSelector((state: RootState) =>\n    emoteCategoriesSelector(state, search),\n  );\n\n  useEffect(() => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n\n    return () => setSearch('');\n  }, []);\n\n  const renderCategory = ({ title, items }: EmoteCategory, key: number) => (\n    <Category key={key}>\n      {!!title && <CategoryHeader>{title}</CategoryHeader>}\n      <CategoryItems>\n        {items.map(({ alt, src, srcSet }) => (\n          <Emote\n            key={alt}\n            alt={alt}\n            src={src}\n            srcSet={srcSet}\n            onClick={() => onEmoteClick(alt)}\n          />\n        ))}\n      </CategoryItems>\n    </Category>\n  );\n\n  return (\n    <EmotePickerRoot>\n      <SearchBlock>\n        <SearchIcon />\n        <SearchInput\n          ref={searchInputRef}\n          placeholder=\"Search for Emotes\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </SearchBlock>\n      <Categories>\n        <Scrollbar>{emoteCategories.map(renderCategory)}</Scrollbar>\n      </Categories>\n    </EmotePickerRoot>\n  );\n};\n\nexport default EmotePicker;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport ChatModal from 'components/ChatModal';\nimport IconButton from 'components/IconButton';\nimport { ReactComponent as SmileyFaceIconSvg } from 'icons/smiley-face.svg';\nimport EmotePicker from 'features/chat/components/EmotePicker';\nimport { SuggestionsState } from 'features/chat/hooks/useChatInput';\nimport { isEmotesLoadedSelector } from 'features/chat/selectors';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\n\nconst ChatInputRoot = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n  background-color: #18181b;\n\n  & > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst ChatInputInner = styled.div`\n  position: relative;\n`;\nconst Suggestions = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n  margin-left: -5px;\n  margin-bottom: -5px;\n  margin-right: -5px;\n  margin-bottom: 0;\n  padding-top: 10px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-bottom: none;\n  background-color: #18181b;\n  color: #fff;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  /* box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0px 2px rgba(0, 0, 0, 0.1); */\n`;\nconst SuggestionItem = styled.div<{ isActive: boolean }>`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 2px;\n  background-color: ${(p) =>\n    p.isActive ? 'rgba(255, 255, 255, 0.15)' : 'transparent'};\n  cursor: pointer;\n`;\nconst SuggestionImage = styled.img`\n  margin-right: 8px;\n  width: 28px;\n  height: 28px;\n  object-fit: contain;\n`;\nconst TextareaInput = styled.div`\n  position: relative;\n`;\nconst TextareaWrapper = styled.div<{ isSuggestions: boolean }>`\n  ${(p) =>\n    p.isSuggestions &&\n    css`\n      margin-left: -5px;\n      margin-bottom: -5px;\n      margin-right: -5px;\n      padding: 5px;\n      border: 1px solid rgba(255, 255, 255, 0.15);\n      border-top: none;\n      border-bottom-left-radius: 6px;\n      border-bottom-right-radius: 6px;\n      /* box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.1),\n        0 2px 2px -2px rgba(0, 0, 0, 0.02); */\n\n      & > ${TextareaInput} {\n        margin-left: -1px;\n        margin-bottom: -1px;\n        margin-right: -1px;\n      }\n    `};\n`;\nconst EmotesModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 0;\n  bottom: 100%;\n  margin-bottom: 8px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nconst Textarea = styled.textarea`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  height: 38px;\n  max-height: 91px;\n  min-height: 40px;\n  overflow: hidden;\n  border: 2px solid transparent;\n  background-color: rgba(255, 255, 255, 0.15);\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 4px;\n  outline: none;\n  color: #fff;\n  resize: none;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n  transition-property: box-shadow, border, background-color;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\nconst EmotesButton = styled(IconButton)`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n`;\nconst SmileyFaceIcon = styled(SmileyFaceIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  text: string;\n  suggestions: SuggestionsState;\n  isDisabled: boolean;\n  onEmoteClick: (name: string) => void;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onKeyUp: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur: () => void;\n  onSuggestionMouseEnter: (index: number) => void;\n  onSuggestionClick: (index: number) => void;\n};\n\nconst ChatInput = React.forwardRef<HTMLTextAreaElement, Props>(\n  (\n    {\n      text,\n      suggestions,\n      isDisabled,\n      onEmoteClick,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onBlur,\n      onSuggestionMouseEnter,\n      onSuggestionClick,\n    },\n    textareaRef,\n  ) => {\n    const chatInputRef = useRef(null);\n    const suggestionsRef = useRef<HTMLDivElement>(null);\n    const suggestionNodesRef = useRef<React.RefObject<HTMLElement>[]>([\n      textareaRef,\n      suggestionsRef,\n    ] as React.RefObject<HTMLElement>[]);\n\n    useOnClickOutside(suggestionNodesRef, () => onBlur());\n\n    const [isEmotesModalVisible, setIsEmotesModalVisible] = useState(false);\n    const isEmotesLoaded = useSelector(isEmotesLoadedSelector);\n    const handleCloseEmotesModal = () => setIsEmotesModalVisible(false);\n\n    useOnClickOutside(chatInputRef, handleCloseEmotesModal);\n\n    const renderSuggestions = ({\n      type,\n      items,\n      activeIndex,\n    }: SuggestionsState) => {\n      const renderUser = (name: string, index: number) => (\n        <SuggestionItem\n          key={name}\n          isActive={index === activeIndex}\n          onMouseEnter={() => onSuggestionMouseEnter(index)}\n          onClick={() => onSuggestionClick(index)}\n        >\n          {name}\n        </SuggestionItem>\n      );\n\n      const renderEmote = (\n        { src, srcSet, alt }: htmlEntity.Emote,\n        index: number,\n      ) => (\n        <SuggestionItem\n          key={alt}\n          isActive={index === activeIndex}\n          onMouseEnter={() => onSuggestionMouseEnter(index)}\n          onClick={() => onSuggestionClick(index)}\n        >\n          <SuggestionImage src={src} srcSet={srcSet} alt={alt} />\n          {alt}\n        </SuggestionItem>\n      );\n\n      const renderItems = () =>\n        type === 'users'\n          ? (items as string[]).map(renderUser)\n          : (items as htmlEntity.Emote[]).map(renderEmote);\n\n      return (\n        <Suggestions ref={suggestionsRef}>\n          {items.length ? renderItems() : 'No matches'}\n        </Suggestions>\n      );\n    };\n\n    const renderEmotesButton = () => (\n      <EmotesButton\n        onClick={() => setIsEmotesModalVisible(!isEmotesModalVisible)}\n      >\n        <SmileyFaceIcon />\n      </EmotesButton>\n    );\n\n    const renderEmotesModal = () => (\n      <EmotesModal>\n        <ChatModal onClose={handleCloseEmotesModal}>\n          <EmotePicker onEmoteClick={onEmoteClick} />\n        </ChatModal>\n      </EmotesModal>\n    );\n\n    return (\n      <ChatInputRoot ref={chatInputRef}>\n        <ChatInputInner>\n          {suggestions.isActive && renderSuggestions(suggestions)}\n          <TextareaWrapper isSuggestions={suggestions.isActive}>\n            <TextareaInput>\n              <Textarea\n                ref={textareaRef}\n                value={text}\n                placeholder=\"Send a message\"\n                maxLength={500}\n                disabled={isDisabled}\n                onChange={onChange}\n                onKeyUp={onKeyUp}\n                onKeyDown={onKeyDown}\n              />\n              {isEmotesLoaded && renderEmotesButton()}\n            </TextareaInput>\n          </TextareaWrapper>\n          {isEmotesModalVisible && renderEmotesModal()}\n        </ChatInputInner>\n      </ChatInputRoot>\n    );\n  },\n);\n\nexport default React.memo(ChatInput);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M10 8a2 2 0 100 4 2 2 0 000-4z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M9 2h2a2.01 2.01 0 001.235 1.855l.53.22a2.01 2.01 0 002.185-.439l1.414 1.414a2.01 2.01 0 00-.439 2.185l.22.53A2.01 2.01 0 0018 9v2a2.01 2.01 0 00-1.855 1.235l-.22.53a2.01 2.01 0 00.44 2.185l-1.415 1.414a2.01 2.01 0 00-2.184-.439l-.531.22A2.01 2.01 0 0011 18H9a2.01 2.01 0 00-1.235-1.854l-.53-.22a2.009 2.009 0 00-2.185.438L3.636 14.95a2.009 2.009 0 00.438-2.184l-.22-.531A2.01 2.01 0 002 11V9c.809 0 1.545-.487 1.854-1.235l.22-.53a2.009 2.009 0 00-.438-2.185L5.05 3.636a2.01 2.01 0 002.185.438l.53-.22A2.01 2.01 0 009 2zm-4 8l1.464 3.536L10 15l3.535-1.464L15 10l-1.465-3.536L10 5 6.464 6.464 5 10z\",\n  clipRule: \"evenodd\"\n}));\n\nconst SvgGears = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgGears, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/gears.5f76af43.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M13 8l-5 5v18h6v5l5-5h4l9-9V8z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#9147ff\",\n  d: \"M26 25l4-4V10H14v15h4v4l4-4z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M20 14h2v6h-2v-6zm7 0v6h-2v-6h2z\"\n});\n\nconst SvgTwitch = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 40 40\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgTwitch, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/twitch.75e6e194.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\n\nconst SwitchRoot = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  line-height: 20px;\n`;\nconst Label = styled.label`\n  content: '';\n  position: relative;\n  display: inline-block;\n  order: 0;\n  width: 35px;\n  height: 20px;\n  vertical-align: bottom;\n  border-radius: 10px/50%;\n  background-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.1s ease;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    bottom: 2px;\n    display: block;\n    width: 16px;\n    border-radius: 50%;\n    background-color: #fff;\n    transition: left 0.1s ease;\n  }\n`;\nconst Input = styled.input.attrs({ type: 'checkbox' })`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + ${Label} {\n    background-color: #9147ff;\n\n    &:after {\n      content: '';\n      top: 2px;\n      left: calc(100% - 18px);\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 9px;\n      left: 10px;\n      display: block;\n      height: 3px;\n      width: 7px;\n      border-bottom: 2px solid #fff;\n      border-left: 2px solid #fff;\n      transform: translate3d(-50%, -50%, 0) rotate(-45deg);\n    }\n  }\n`;\n\ntype Props = {\n  id: string;\n  label: string;\n  checked?: boolean;\n  readOnly?: boolean;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Switch = ({ id, label, checked, readOnly, onChange }: Props) => (\n  <SwitchRoot>\n    <Input\n      id={id}\n      aria-label={label}\n      checked={checked}\n      readOnly={readOnly}\n      onChange={onChange}\n    />\n    <Label htmlFor={id} />\n  </SwitchRoot>\n);\n\nSwitch.defaultProps = {\n  checked: false,\n  readOnly: false,\n  onChange: () => {},\n};\n\nexport default Switch;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Scrollbar from 'components/Scrollbar';\nimport Switch from 'components/Switch';\nimport {\n  userDisplayNameSelector,\n  userColorSelector,\n  userBadgesImagesSelector,\n} from 'features/chat/selectors';\nimport { isAuthSelector } from 'features/auth/authSlice';\nimport { changeChatOption } from 'features/options/optionsSlice';\nimport { optionsSelector } from 'features/options/optionsSelectors';\n\nconst OptionsRoot = styled.div`\n  padding: 16px;\n  height: 100%;\n`;\nconst Header = styled.h2`\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst Categories = styled(Scrollbar)`\n  height: 100%;\n`;\nconst Category = styled.div`\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding: 8px 0;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst CategoryItems = styled.div``;\nconst Option = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 4px 0;\n  cursor: pointer;\n`;\nconst OptionText = styled.span``;\nconst Profile = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst UserName = styled.div`\n  font-weight: bold;\n  color: ${(p) => p.color};\n`;\nconst LogOutButton = styled(Link)`\n  margin-left: auto;\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Badge = styled.img`\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst Options = () => {\n  const dispatch = useDispatch();\n  const options = useSelector(optionsSelector);\n\n  const isAuth = useSelector(isAuthSelector);\n\n  const userDisplayName = useSelector(userDisplayNameSelector);\n  const userColor = useSelector(userColorSelector);\n  const userBadgesImages = useSelector(userBadgesImagesSelector);\n\n  const renderOption = useCallback(\n    ({ id, name, title, description, value }) => (\n      <Option\n        key={id}\n        onClick={() => dispatch(changeChatOption({ name, value: !value }))}\n        title={description}\n      >\n        <OptionText>{title}</OptionText>\n        <Switch\n          id={id}\n          label={title}\n          checked={value}\n          onChange={() => dispatch(changeChatOption({ name, value }))}\n        />\n      </Option>\n    ),\n    [dispatch],\n  );\n\n  const renderProfileCategory = () => {\n    return (\n      <Category>\n        <CategoryHeader>Profile</CategoryHeader>\n        <CategoryItems>\n          <Profile>\n            {userBadgesImages.map(({ alt, label, src, srcSet }, key) => (\n              <Badge\n                // eslint-disable-next-line react/no-array-index-key\n                key={key}\n                alt={alt}\n                aria-label={label}\n                src={src}\n                srcSet={srcSet}\n              />\n            ))}\n            <UserName color={userColor}>{userDisplayName}</UserName>\n            <LogOutButton to=\"/chat/logout\">Log Out</LogOutButton>\n          </Profile>\n        </CategoryItems>\n      </Category>\n    );\n  };\n\n  const renderOptionsCategory = useCallback(\n    ({ title, items }, key) => (\n      <Category key={key}>\n        {!!title && <CategoryHeader>{title}</CategoryHeader>}\n        <CategoryItems>{items.map(renderOption)}</CategoryItems>\n      </Category>\n    ),\n    [renderOption],\n  );\n\n  return (\n    <OptionsRoot>\n      <Header>Chat settings</Header>\n      <Categories>\n        {isAuth && renderProfileCategory()}\n        {options.map(renderOptionsCategory)}\n      </Categories>\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport { ReactComponent as GearsIconSvg } from 'icons/gears.svg';\nimport { ReactComponent as TwitchIconSvg } from 'icons/twitch.svg';\nimport IconButton from 'components/IconButton';\nimport ChatModal from 'components/ChatModal';\nimport Options from 'features/options/Options';\nimport { isAuthSelector, isAuthReadySelector } from 'features/auth/authSlice';\n\nconst ChatControlsRoot = styled.div`\n  position: relative;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n`;\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n\n  & > :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\nconst OptionsModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 10px;\n  bottom: 100%;\n  margin-bottom: 10px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nconst buttonStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 10px;\n  height: 30px;\n  border: none;\n  color: #fff;\n  background-color: #9147ff;\n  outline: none;\n  font-size: 12px;\n  border-radius: 4px;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #772ce8;\n  }\n\n  &:active {\n    background-color: #5c16c5;\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n\n  &[disabled] {\n    background-color: rgba(255, 255, 255, 0.26);\n    color: rgba(255, 255, 255, 0.8);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nconst Button = styled.button.attrs({ type: 'button' })`\n  ${buttonStyles};\n`;\nconst SignInButton = styled(Link)`\n  ${buttonStyles};\n`;\nconst OptionsButton = styled(IconButton)`\n  margin-left: auto;\n`;\nconst GearsIcon = styled(GearsIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\nconst TwitchIcon = styled(TwitchIconSvg)`\n  display: block;\n  margin-right: 4px;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  isDisabled: boolean;\n  onSendMessage: () => void;\n};\n\nconst ChatControls = ({ isDisabled, onSendMessage }: Props) => {\n  const [isOptionsModalVisible, setIsOptionsModalVisible] = useState(false);\n  const optionsModalRef = useRef(null);\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n\n  const handleCloseOptionsModal = () => setIsOptionsModalVisible(false);\n\n  useOnClickOutside(optionsModalRef, handleCloseOptionsModal);\n\n  const renderSignInButton = () => (\n    <SignInButton to=\"/chat/auth\">\n      <TwitchIcon />\n      Sign in with Twitch\n    </SignInButton>\n  );\n\n  const renderOptionsModal = () => (\n    <OptionsModal ref={optionsModalRef}>\n      <ChatModal onClose={handleCloseOptionsModal}>\n        <Options />\n      </ChatModal>\n    </OptionsModal>\n  );\n\n  const optionsButton = (\n    <OptionsButton onClick={() => setIsOptionsModalVisible((prev) => !prev)}>\n      <GearsIcon />\n    </OptionsButton>\n  );\n\n  return (\n    <ChatControlsRoot>\n      <Controls>\n        {isAuthReady && !isAuth && renderSignInButton()}\n        {optionsButton}\n        <Button disabled={isDisabled} onClick={onSendMessage}>\n          Chat\n        </Button>\n      </Controls>\n      {isOptionsModalVisible && renderOptionsModal()}\n    </ChatControlsRoot>\n  );\n};\n\nexport default React.memo(ChatControls);\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { format } from 'date-fns/fp';\n\nimport {\n  Message as MessageType,\n  MessageEntity,\n} from 'features/chat/slice/messages';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\n\ntype MessageRootProps = {\n  isAction: boolean;\n  isHistory: boolean;\n  isDeleted: boolean;\n  isMention: boolean;\n  isEven: boolean;\n};\n\nconst getChatMessageBg = (p: MessageRootProps) => {\n  if (p.isMention) return 'rgba(255, 0, 0, 0.3)';\n  if (p.isEven) return '#1f1925';\n  return 'transparent';\n};\n\nconst MessageRoot = styled.div<MessageRootProps>`\n  padding: 5px 20px;\n  color: ${(p) => (p.isAction ? p.color : '#fff')};\n  opacity: ${(p) => (p.isHistory || p.isDeleted ? '0.5' : '1')};\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${getChatMessageBg};\n`;\nconst Name = styled.span`\n  font-weight: bold;\n  color: ${(p) => p.color};\n  cursor: pointer;\n`;\nconst Emote = styled.img`\n  display: inline-block;\n  margin: -5px 0;\n  vertical-align: middle;\n`;\nconst Emoji = styled.img`\n  display: inline-block;\n  margin-top: -5px;\n  margin-bottom: -4px;\n  width: 20px;\n  height: auto;\n  vertical-align: middle;\n`;\nconst Mention = styled.span<{ isActive: boolean; isOwnMessage: boolean }>`\n  ${(p) =>\n    (p.isActive || p.isOwnMessage) &&\n    css`\n      padding: 2px 4px;\n    `};\n  ${(p) =>\n    p.isOwnMessage &&\n    css`\n      background-color: #40404a;\n      color: #fff;\n    `};\n  ${(p) =>\n    p.isActive &&\n    css`\n      background-color: #fafafa;\n      color: #18181b;\n    `};\n`;\nconst Link = styled.a`\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Timestamp = styled.span`\n  margin-right: 5px;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst Badge = styled.img`\n  margin-bottom: 2px;\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst renderMessageArray = (login: string, userLogin: string | null) => (\n  item: MessageEntity,\n  key: number,\n) => {\n  if (typeof item !== 'object') return item;\n\n  if (\n    item.type === 'twitch-emote' ||\n    item.type === 'bttv-emote' ||\n    item.type === 'ffz-emote'\n  ) {\n    return (\n      <Emote key={key} src={item.src} srcSet={item.srcSet} alt={item.alt} />\n    );\n  }\n\n  if (item.type === 'emoji') {\n    return <Emoji key={key} src={item.src} alt={item.alt} />;\n  }\n\n  if (item.type === 'mention') {\n    return (\n      <Mention\n        key={key}\n        isActive={item.target === userLogin}\n        isOwnMessage={login === userLogin}\n      >\n        {item.text}\n      </Mention>\n    );\n  }\n\n  if (item.type === 'link') {\n    return (\n      <Link\n        key={key}\n        href={item.href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n      >\n        {item.text}\n      </Link>\n    );\n  }\n\n  return null;\n};\n\nconst renderBadges = (badges: htmlEntity.Badge[]) =>\n  badges.map(({ alt, label, src, srcSet }, key: number) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <Badge key={key} alt={alt} aria-label={label} src={src} srcSet={srcSet} />\n  ));\n\ntype Props = {\n  message: MessageType;\n  userLogin: string | null;\n  isEven: boolean;\n  isShowTimestamps: boolean;\n  onNameRightClick: (name: string) => void;\n};\n\nconst MESSAGE_DELETED_LABEL = '<message deleted>';\n\nconst Message = ({\n  message: {\n    message,\n    entities,\n    user: { login, color, displayName, badges },\n    timestamp,\n    isHistory,\n    isAction,\n    isDeleted,\n  },\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}: Props) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const isMention =\n    login !== userLogin && RegExp(userLogin as string, 'gi').test(message);\n\n  const handleNameRightClick = (\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>,\n  ) => {\n    onNameRightClick(displayName);\n    e.preventDefault();\n  };\n\n  return (\n    <MessageRoot\n      isHistory={isHistory}\n      isAction={isAction}\n      isEven={isEven}\n      isMention={isMention}\n      isDeleted={isDeleted}\n      color={color}\n    >\n      {isShowTimestamps && (\n        <Timestamp>{format('h:mm', new Date(timestamp))}</Timestamp>\n      )}\n      {badges.length > 0 && renderBadges(badges)}\n      <Name color={color} onContextMenu={handleNameRightClick}>\n        {displayName}\n      </Name>\n      {isAction ? ' ' : ': '}\n      {isDeleted && !isVisible ? (\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\n        <Link onClick={() => setIsVisible(true)}>{MESSAGE_DELETED_LABEL}</Link>\n      ) : (\n        entities.map(renderMessageArray(login, userLogin))\n      )}\n    </MessageRoot>\n  );\n};\n\nexport default React.memo(Message);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Notice as NoticeType } from 'features/chat/slice/messages';\n\nconst NoticeRoot = styled.div<{ isEven: boolean }>`\n  padding: 5px 20px;\n  color: rgba(255, 255, 255, 0.6);\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${(p) => (p.isEven ? '#1f1925' : 'transparent')};\n`;\n\ntype Props = {\n  message: NoticeType;\n  isEven: boolean;\n};\n\nconst Notice = ({ message: { message }, isEven }: Props) => (\n  <NoticeRoot isEven={isEven}>{message}</NoticeRoot>\n);\n\nexport default Notice;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { UserNotice as UserNoticeType } from 'features/chat/slice/messages';\n\nconst UserNoticeRoot = styled.div`\n  padding: 5px 20px 5px 16px;\n  line-height: 20px;\n  word-wrap: break-word;\n  border-left: 4px solid #9147ff;\n  color: #fff;\n`;\n\ntype Props = {\n  message: UserNoticeType;\n};\n\nconst UserNotice = ({ message: { systemMessage } }: Props) => (\n  <UserNoticeRoot>{systemMessage}</UserNoticeRoot>\n);\n\nexport default UserNotice;\n","import React from 'react';\n\nimport assertNever from 'utils/assertNever';\nimport { ChatMessage as ChatMessageType } from 'features/chat/slice/messages';\nimport Message from 'features/chat/components/Message';\nimport Notice from 'features/chat/components/Notice';\nimport UserNotice from 'features/chat/components/UserNotice';\n\ntype Props = {\n  message: ChatMessageType;\n  userLogin: string | null;\n  isEven: boolean;\n  isShowTimestamps: boolean;\n  // onNameClick: (name: string) => void;\n  onNameRightClick: (name: string) => void;\n};\n\nconst ChatMessage = ({\n  message,\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}: Props) => {\n  if (message.type === 'message') {\n    return (\n      <Message\n        message={message}\n        userLogin={userLogin}\n        isEven={isEven}\n        isShowTimestamps={isShowTimestamps}\n        // onNameClick={onNameClick}\n        onNameRightClick={onNameRightClick}\n      />\n    );\n  }\n\n  if (message.type === 'notice') {\n    return <Notice message={message} isEven={isEven} />;\n  }\n\n  if (message.type === 'user-notice') {\n    return <UserNotice message={message} />;\n  }\n\n  return assertNever(message);\n};\n\nexport default React.memo(ChatMessage);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ScrollbarType from 'react-scrollbars-custom';\nimport { ScrollState } from 'react-scrollbars-custom/dist/types/types';\n\nimport Scrollbar from 'components/Scrollbar';\nimport ChatMessage from 'features/chat/components/ChatMessage';\nimport { messagesSelector, isEvenSelector } from 'features/chat/selectors';\nimport { userLoginSelector } from 'features/auth/authSlice';\nimport {\n  isShowTimestampsSelector,\n  isSplitChatSelector,\n} from 'features/options/optionsSelectors';\n\nconst MORE_MESSAGES_OFFSET = 100;\n\nconst MessagesRoot = styled.div`\n  position: relative;\n  flex-grow: 1;\n`;\nconst StyledScrollbar = styled(Scrollbar)`\n  .ScrollbarsCustom-Content {\n    padding-bottom: 10px !important;\n  }\n`;\nconst MoreMessagesButton = styled.button<{ isVisible: boolean }>`\n  position: absolute;\n  left: 50%;\n  bottom: 10px;\n  display: ${(p) => (p.isVisible ? 'block' : 'none')};\n  padding: 5px 20px;\n  background: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: translateX(-50%);\n`;\n\ntype Props = {\n  onNameRightClick: (name: string) => void;\n};\n\nconst Messages = ({ onNameRightClick }: Props) => {\n  const [\n    isMoreMessagesButtonVisible,\n    setIsMoreMessagesButtonVisible,\n  ] = useState(false);\n\n  const messages = useSelector(messagesSelector);\n  const userLogin = useSelector(userLoginSelector);\n\n  const isEven = useSelector(isEvenSelector);\n  const isShowTimestamps = useSelector(isShowTimestampsSelector);\n  const isSplitChat = useSelector(isSplitChatSelector);\n\n  const handleScrollUpdate = ({\n    clientHeight,\n    contentScrollHeight,\n    scrollTop,\n  }: ScrollState) => {\n    const maxScrollTop = contentScrollHeight - clientHeight;\n    const isVisible = scrollTop + MORE_MESSAGES_OFFSET < maxScrollTop;\n\n    setIsMoreMessagesButtonVisible(isVisible);\n  };\n\n  const scrollbarRef = useRef<ScrollbarType>(null);\n\n  const handleScrollToBottom = () => {\n    if (scrollbarRef.current) {\n      scrollbarRef.current.scrollToBottom();\n    }\n  };\n\n  useEffect(() => {\n    if (!isMoreMessagesButtonVisible) {\n      handleScrollToBottom();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messages]);\n\n  const getIsEven = (key: number) => {\n    if (!isSplitChat) return false;\n    return isEven ? key % 2 === 1 : key % 2 === 0;\n  };\n\n  return (\n    <MessagesRoot>\n      <StyledScrollbar onUpdate={handleScrollUpdate} ref={scrollbarRef}>\n        {messages.map((message, key) => (\n          <ChatMessage\n            key={message.id}\n            message={message}\n            userLogin={userLogin}\n            isEven={getIsEven(key)}\n            isShowTimestamps={isShowTimestamps}\n            onNameRightClick={onNameRightClick}\n          />\n        ))}\n      </StyledScrollbar>\n      <MoreMessagesButton\n        onClick={handleScrollToBottom}\n        isVisible={isMoreMessagesButtonVisible}\n      >\n        More messages below\n      </MoreMessagesButton>\n    </MessagesRoot>\n  );\n};\n\nexport default Messages;\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { isAuthSelector } from 'features/auth/authSlice';\nimport { isFixedWidthSelector } from 'features/options/optionsSelectors';\nimport useInitializeAuth from 'features/auth/hooks/useInitializeAuth';\nimport useFetchChatData from 'features/chat/hooks/useFetchChatData';\nimport useCurrentChannel from 'features/chat/hooks/useCurrentChannel';\nimport useTwitchClient from 'features/chat/hooks/useTwitchClient';\nimport useChatInput from 'features/chat/hooks/useChatInput';\nimport {\n  currentChannelSelector,\n  isConnectedSelector,\n} from 'features/chat/selectors';\nimport ChatInput from 'features/chat/components/ChatInput';\nimport ChatControls from 'features/chat/components/ChatControls';\nimport Messages from 'features/chat/components/Messages';\n\nconst ChatRoot = styled.div`\n  height: 100vh;\n  font-size: 12px;\n  background-color: #0e0e10;\n`;\nconst ChatWrapper = styled.div<{ isFixedWidth: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: ${(p) => (p.isFixedWidth ? '340px' : 'auto')};\n  height: 100%;\n  background-color: #18181b;\n`;\n\nconst Chat = () => {\n  const [text, setText] = useState('');\n\n  const client = useTwitchClient();\n\n  useInitializeAuth();\n  useCurrentChannel();\n  useFetchChatData();\n\n  const currentChannel = useSelector(currentChannelSelector);\n\n  const isAuth = useSelector(isAuthSelector);\n  const isConnected = useSelector(isConnectedSelector);\n\n  const isFixedWidth = useSelector(isFixedWidthSelector);\n  const chatInputRef = useRef<HTMLTextAreaElement>(null);\n\n  const textRef = useRef(text);\n  textRef.current = text;\n\n  const isDisabled = !isAuth || !isConnected;\n\n  const handleSendMessage = useCallback(() => {\n    if (!client || !textRef.current) return;\n\n    client.say(currentChannel, textRef.current);\n\n    setText('');\n  }, [client, currentChannel, textRef, setText]);\n\n  const chatInput = useChatInput(setText, handleSendMessage, chatInputRef);\n\n  const handleNameRightClick = useCallback(\n    (name: string) => {\n      setText((t) => `${t.trim()} @${name} `.trimLeft());\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n    },\n    [setText, chatInputRef],\n  );\n\n  const handleEmoteClick = useCallback(\n    (name: string) => {\n      setText((t) => `${t.trim()} ${name} `.trimLeft());\n    },\n    [setText],\n  );\n\n  return (\n    <ChatRoot>\n      <ChatWrapper isFixedWidth={isFixedWidth}>\n        <Messages onNameRightClick={handleNameRightClick} />\n        <ChatInput\n          ref={chatInputRef}\n          text={text}\n          suggestions={chatInput.suggestions}\n          isDisabled={isDisabled}\n          onEmoteClick={handleEmoteClick}\n          onChange={chatInput.handleChange}\n          onKeyUp={chatInput.handleKeyUp}\n          onKeyDown={chatInput.handleKeyDown}\n          onBlur={chatInput.handleBlur}\n          onSuggestionMouseEnter={chatInput.handleSuggestionMouseEnter}\n          onSuggestionClick={chatInput.handleSuggestionClick}\n        />\n        <ChatControls\n          isDisabled={isDisabled}\n          onSendMessage={handleSendMessage}\n        />\n      </ChatWrapper>\n    </ChatRoot>\n  );\n};\n\nexport default Chat;\n","import { getAuthUrl } from 'features/auth/authUtils';\n\n// const href = `http://localhost:3000/chat/#access_token=1r74fjj6m8ocwfuowvb6jdlh9uvwsg&id_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjEifQ.eyJhdWQiOiI0ZTY2dzFwbzF0emY2NDVyOXZ1dG45cXVzMDV2Zzl4IiwiZXhwIjoxNTc0MzU2ODc0LCJpYXQiOjE1NzQzNTU5NzQsImlzcyI6Imh0dHBzOi8vaWQudHdpdGNoLnR2L29hdXRoMiIsInN1YiI6IjM4MjU5NDI1IiwiYXRfaGFzaCI6ImNNYVhLR3g5VnJIaW9PcC1oUkRrd0EiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGljdHVyZSI6Imh0dHBzOi8vc3RhdGljLWNkbi5qdHZudy5uZXQvanR2X3VzZXJfcGljdHVyZXMvZG1pdHJ5c2NhbGV0dGEtcHJvZmlsZV9pbWFnZS00MWIwMzZkMGVmNjQwMDUzLTE1MHgxNTAuanBlZyIsInByZWZlcnJlZF91c2VybmFtZSI6IkRtaXRyeVNjYWxldHRhIn0.4PS13e-l2BnPyjpejh-mcOE571Z3al7t6pcAHHuKclBGDF8cswhTfmbFOPZCWR9-Qu7mEF74ijykVsLWB1KG5dcijdH4r3A0D0wtv7g9_FE5HNs5nS6V2IqSK0HDSxSVyZTze2tWH5xy1s9PUzLl4-K-9_Ij1Ow7D-M1fkF2fcm7v4V541kApfZi4pUg7iabJ-QJXRCEoWgY523R_oC5Lu1d3mkhcaGQM7YQbmAZy8nZiX4dIe9QwhaVbd6_1lwDNyoySK6aHk6zhroP9e80EgMHU39gutmpJlEtxqcB_llBa2xa2twaqq7Pt5sIibuWejCRscAyFzcEAsHckJlE9Q&scope=openid+channel%253Amoderate+chat%253Aedit+chat%253Aread+whispers%253Aread+whispers%253Aedit+user_blocks_read+user_blocks_edit+user_subscriptions&token_type=bearer`;\n\nconst Auth = () => {\n  window.location.href = getAuthUrl();\n  // window.location.href = href;\n\n  return null;\n};\n\nexport default Auth;\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { invalidateAuth } from 'features/auth/authSlice';\n\nconst Logout = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('idToken');\n  localStorage.removeItem('user');\n\n  dispatch(invalidateAuth());\n\n  history.push({\n    pathname: '/chat/',\n    hash: localStorage.lastChannel || '',\n  });\n\n  return null;\n};\n\nexport default Logout;\n","import { useHistory } from 'react-router-dom';\n\nconst AuthCallback = () => {\n  const history = useHistory();\n\n  if (!window.location.hash) return null;\n\n  const params = new URLSearchParams(window.location.hash.slice(1));\n\n  const accessToken = params.get('access_token');\n  const idToken = params.get('id_token');\n\n  if (!accessToken || !idToken) return null;\n\n  localStorage.setItem('accessToken', accessToken);\n  localStorage.setItem('idToken', idToken);\n\n  history.push({\n    pathname: '/chat/',\n    hash: localStorage.lastChannel || '',\n  });\n\n  return null;\n};\n\nexport default AuthCallback;\n","import { css } from 'styled-components';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    font-family: Roobert, Helvetica Neue, Helvetica, Arial, sans-serif;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\nimport colors from 'styles/colors';\nimport vars from 'styles/vars';\n\nexport default createGlobalStyle`\n  :root {\n    ${colors};\n    ${vars};\n  }\n  ${common};\n`;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from 'react-router-dom';\n\nimport { isAuthRedirect } from 'features/auth/authUtils';\nimport Chat from 'features/chat/components/Chat';\nimport Auth from 'features/auth/Auth';\nimport Logout from 'features/auth/Logout';\nimport AuthCallback from 'features/auth/AuthCallback';\nimport GlobalStyles from 'styles';\n\nconst getHomeComponent = ({ location }: RouteComponentProps) =>\n  isAuthRedirect(location.hash) ? <AuthCallback /> : <Chat />;\n\nconst App: React.FC = () => (\n  <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/chat/\" render={getHomeComponent} />\n        <Route exact path=\"/chat/auth\" component={Auth} />\n        <Route exact path=\"/chat/logout\" component={Logout} />\n      </Switch>\n    </Router>\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport auth from 'features/auth/authSlice';\nimport chat from 'features/chat/slice/chatSlice';\nimport options from 'features/options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  auth,\n  chat,\n  options,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && (module as any).hot) {\n  (module as any).hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReactGA from 'react-ga';\n\nimport { isAuthRedirect } from 'features/auth/authUtils';\nimport store from 'app/store';\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-139550930-3');\n\n  if (!isAuthRedirect(window.location.hash)) {\n    const page =\n      window.location.pathname + window.location.search + window.location.hash;\n    ReactGA.pageview(page);\n  }\n}\n\nconst render = () => {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && (module as any).hot) {\n  (module as any).hot.accept('./app/App', render);\n}\n","import {\n  TWITCH_API_AUTH_BASE,\n  TWITCH_API_CLIENT_ID,\n  TWITCH_API_REDIRECT_URI,\n} from 'utils/constants';\n\ntype StoredUser = {\n  id: string;\n  login: string;\n};\n\n/* eslint-disable @typescript-eslint/camelcase */\nconst authParams = {\n  client_id: TWITCH_API_CLIENT_ID,\n  redirect_uri: TWITCH_API_REDIRECT_URI,\n  response_type: 'token+id_token',\n  scope: [\n    'openid',\n    'channel:moderate',\n    'chat:edit',\n    'chat:read',\n    'whispers:read',\n    'whispers:edit',\n    'user_blocks_read',\n    'user_blocks_edit',\n    'user_subscriptions',\n  ].join('+'),\n  claims: JSON.stringify({\n    id_token: { email_verified: null, picture: null, preferred_username: null },\n  }),\n  // TODO:\n  // state: uid(),\n};\n/* eslint-enable @typescript-eslint/camelcase */\n\nexport const getAuthUrl = (): string => {\n  const search = Object.entries(authParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${TWITCH_API_AUTH_BASE}?${search}`;\n};\n\nexport const isAuthRedirect = (hash: string): boolean =>\n  hash.startsWith('#access_token=');\n\nexport const writeUserToLocatStorage = (user: StoredUser): void => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nexport const readUserFromLocatStorage = (): StoredUser | null => {\n  let user;\n\n  try {\n    user = JSON.parse(localStorage.user);\n  } catch (e) {\n    user = null;\n  }\n\n  if (!user || !user.id || !user.login) return null;\n\n  return user as StoredUser;\n};\n","import fetchRequest, { FetchRequestOptions } from 'utils/fetchRequest';\n\nconst TWITCH_API_HELIX = 'https://api.twitch.tv/helix';\nconst TWITCH_API_KRAKEN = 'https://api.twitch.tv/kraken';\n\nconst getHelixHeaders = () => ({\n  Authorization: `Bearer ${localStorage.accessToken}`,\n});\n\nconst getKrakenHeaders = () => ({\n  Accept: 'application/vnd.twitchtv.v5+json',\n  'Client-ID': process.env.REACT_APP_TWITCH_API_CLIENT_ID,\n  Authorization: `OAuth ${localStorage.accessToken}`,\n});\n\nconst apiRequestHelix = (url: string, options?: FetchRequestOptions) =>\n  fetchRequest(`${TWITCH_API_HELIX}${url}`, {\n    ...options,\n    headers: getHelixHeaders(),\n  } as FetchRequestOptions);\n\nconst apiRequestKraken = (url: string, options?: FetchRequestOptions) =>\n  fetchRequest(`${TWITCH_API_KRAKEN}${url}`, {\n    ...options,\n    headers: getKrakenHeaders(),\n  } as FetchRequestOptions);\n\nexport interface TwitchUser {\n  id: string;\n  login: string;\n  display_name: string;\n  type: string;\n  broadcaster_type: string;\n  description: string;\n  profile_image_url: string;\n  offline_image_url: string;\n  view_count: number;\n}\n\nexport interface TwitchUsersResponse {\n  data: TwitchUser[];\n}\n\nexport interface TwitchEmote {\n  id: number;\n  code: string;\n}\n\nexport interface TwitchEmotesResponse {\n  emoticon_sets: Record<string, TwitchEmote[]>;\n}\n\nexport interface TwitchBadgeVersion {\n  image_url_1x: string;\n  image_url_2x: string;\n  image_url_4x: string;\n  description: string;\n  title: string;\n  click_action: string;\n  click_url: string;\n  last_updated: null;\n}\n\nexport interface TwitchBadge {\n  versions: Record<string, TwitchBadgeVersion>;\n}\n\nexport interface TwitchBadgesResponse {\n  badge_sets: Record<string, TwitchBadge>;\n}\n\nexport interface TwitchBlockedUser {\n  display_name: string;\n  _id: string;\n  name: string;\n  type: string;\n  bio: string | null;\n  created_at: string;\n  updated_at: string;\n  logo: string;\n}\n\nexport interface TwitchBlockedUsersResponse {\n  _total: number;\n  blocks: {\n    user: TwitchBlockedUser;\n  }[];\n}\n\nexport const fetchUser = (userId: string): Promise<TwitchUsersResponse> =>\n  apiRequestHelix(`/users?id=${userId}`);\n\nexport const fetchTwitchEmotes = (\n  userId: string,\n): Promise<TwitchEmotesResponse> => apiRequestKraken(`/users/${userId}/emotes`);\n\nexport const fetchGlobalBadges = (\n  language = 'en',\n): Promise<TwitchBadgesResponse> =>\n  fetchRequest(\n    `https://badges.twitch.tv/v1/badges/global/display?language=${language}`,\n  );\n\nexport const fetchChannelBadges = (\n  channelId: string,\n  language = 'en',\n): Promise<TwitchBadgesResponse> =>\n  fetchRequest(\n    `https://badges.twitch.tv/v1/badges/channels/${channelId}/display?language=${language}`,\n  );\n\nexport const fetchBlockedUsers = (\n  userId: string,\n): Promise<TwitchBlockedUsersResponse> =>\n  apiRequestKraken(`/users/${userId}/blocks`);\n","/* eslint-disable no-param-reassign */\nimport { FetchFlags } from 'utils/constants';\n\nfunction setFetchFlags(obj: FetchFlags, type: 'request'): void;\nfunction setFetchFlags(obj: FetchFlags, type: 'success'): void;\nfunction setFetchFlags(obj: FetchFlags, type: 'failure', error: string): void;\nfunction setFetchFlags(\n  obj: FetchFlags,\n  type: 'request' | 'success' | 'failure',\n  error: string | null = null,\n) {\n  obj.isLoading = type === 'request';\n  obj.isLoaded = type === 'success' || type === 'failure';\n  obj.isError = type === 'failure';\n  obj.error = type === 'failure' ? error : null;\n}\n\nexport default setFetchFlags;\n","import * as R from 'ramda';\nimport { parse as twemojiParser } from 'twemoji-parser';\nimport urlRegex from 'url-regex';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport { MessageEntity } from 'features/chat/slice/messages';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport findEmote from 'features/chat/utils/findEmote';\n\nconst mentionRegex = /^@([\\p{Letter}\\p{Number}_]+)/u;\nconst linkRegex = urlRegex({ strict: false });\n\nconst normalizeEmotesFromTags = R.pipe<{}, [string, any][], any[][], any[]>(\n  R.toPairs,\n  R.map(([id, value]) => R.map((v) => ({ id, ...v }), value)),\n  R.flatten,\n);\n\nconst findEntity = (\n  word: string,\n  emotes: StateEmotes,\n  parseTwitch: boolean,\n):\n  | htmlEntity.TwitchEmote\n  | htmlEntity.BttvEmote\n  | htmlEntity.FfzEmote\n  | htmlEntity.Emoji\n  | [htmlEntity.Mention, number]\n  | htmlEntity.Link\n  | null => {\n  if (!emotes) return null;\n\n  if (parseTwitch) {\n    const twitchEmote = findEmote.twitch.byName(word, emotes);\n\n    if (twitchEmote) return twitchEmote;\n  }\n\n  const emote =\n    findEmote.bttv.byName(word, emotes) || findEmote.ffz.byName(word, emotes);\n\n  if (emote) return emote;\n\n  // Don't parse two or more emotes without spaces between\n  // Don't parse emote if it's not in the emojilib package\n  const emojiMatch = twemojiParser(word, { assetType: 'png' });\n\n  if (\n    emojiMatch &&\n    emojiMatch.length === 1 &&\n    emojiMatch[0].text.length === word.length\n  ) {\n    const emoji = findEmote.emoji.byName(word);\n\n    if (emoji) {\n      const [{ url }] = emojiMatch;\n\n      return htmlEntity.createEmoji(emoji, url);\n    }\n  }\n\n  const mentionMatch = word.match(mentionRegex);\n\n  if (mentionMatch) {\n    const [text, target] = mentionMatch;\n\n    return [\n      htmlEntity.createMention(text, target.toLowerCase()),\n      word.length - text.length,\n    ] as [htmlEntity.Mention, number];\n  }\n\n  const linkMatch = word.match(linkRegex);\n\n  if (linkMatch && linkMatch[0].length === word.length) {\n    return htmlEntity.createLink(word);\n  }\n\n  return null;\n};\n\nconst parseMessageEntities = (\n  message: string,\n  emotes: StateEmotes | null,\n  embeddedEmotes: twitchIrc.Emotes | null,\n  isOwnMessage = false,\n): MessageEntity[] => {\n  // If the message was sent by the current user, there is no embedded emotes\n  // So we need to parse twitch emotes manually\n\n  const result = [];\n  let offset = 0;\n  // Before that offset all content was added to the result array\n  let arrayOffset = 0;\n\n  // Check every word. From offset to the next space index\n  do {\n    const spaceIndex = message.indexOf(' ', offset + 1);\n\n    const isStart = offset === 0;\n    const isEnd = spaceIndex === -1;\n\n    const startIndex = isStart ? offset : offset + 1;\n    const endIndex = isEnd ? message.length : spaceIndex;\n\n    const word = message.substring(startIndex, endIndex);\n\n    if (word) {\n      let entity = null;\n\n      // Check embedded twitch emotes\n      if (\n        !isOwnMessage &&\n        embeddedEmotes &&\n        Object.keys(embeddedEmotes).length > 0\n      ) {\n        const normalizedEmbeddedEmotes = normalizeEmotesFromTags(\n          embeddedEmotes,\n        );\n\n        const embeddedEmote = R.find(\n          R.propEq('start', startIndex),\n          normalizedEmbeddedEmotes,\n        );\n\n        if (embeddedEmote) {\n          entity = htmlEntity.createTwitchEmote({\n            id: embeddedEmote.id,\n            code: word,\n          });\n        }\n      }\n\n      // Check other entities\n      if (!entity) {\n        entity = findEntity(word, emotes, isOwnMessage);\n      }\n\n      if (entity) {\n        // Push all text before this entity\n        if (arrayOffset !== startIndex) {\n          const textBefore = message.substring(arrayOffset, startIndex);\n          result.push(textBefore);\n        }\n\n        // If entity it's an array it means entity may be not full word\n        // The second element is the difference between word length and entity length\n        if (Array.isArray(entity)) {\n          const [entityObject, difference] = entity;\n          result.push(entityObject);\n          arrayOffset = endIndex - difference;\n        } else {\n          result.push(entity);\n          arrayOffset = endIndex;\n        }\n      }\n    }\n\n    // If it's the last word and it wasn't added to the result add it now\n    if (spaceIndex === -1 && arrayOffset !== endIndex) {\n      const textAfter = message.substring(arrayOffset, endIndex);\n      result.push(textAfter);\n    }\n\n    offset = spaceIndex;\n  } while (offset !== -1);\n\n  return result;\n};\n\nexport default parseMessageEntities;\n","import uuid from 'uuid/v4';\nimport twitchIrc from 'twitch-simple-irc';\nimport * as tekko from 'tekko';\n\nimport * as api from 'api';\nimport { RootState } from 'app/rootReducer';\nimport { userIdSelector, userLoginSelector } from 'features/auth/authSlice';\nimport {\n  Message,\n  Notice,\n  UserNotice,\n  OwnMessage,\n} from 'features/chat/slice/messages';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  blockedUsersSelector,\n  globalBadgesSelector,\n  channelBadgesSelector,\n  emotesSelector,\n  StateEmotes,\n} from 'features/chat/selectors';\nimport parseMessageEntities from 'features/chat/utils/parseMessageEntities';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { writeEmotesUsageStatistic } from 'features/chat/utils/emotesUsageStatistic';\n\nexport const normalizeMessage = (\n  { message, tags, user, channel, isAction }: twitchIrc.MessageEvent,\n  chatState: ChatState,\n): Message | null => {\n  const fakeState = { chat: chatState } as RootState;\n  const blockedUsers = blockedUsersSelector(fakeState);\n\n  if (blockedUsers.includes(user)) return null;\n\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n\n  return {\n    type: 'message',\n    id: tags.id,\n    message,\n    channel,\n    entities: parseMessageEntities(message, emotes, tags.emotes),\n    user: {\n      id: tags.userId,\n      login: user,\n      displayName: tags.displayName,\n      color: tags.color,\n      badges: htmlEntity.createBadges(tags.badges, globalBadges, channelBadges),\n    },\n    timestamp: tags.tmiSentTs,\n    isAction,\n    isHistory: false,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeNotice = (\n  { message, channel, tags: { msgId } }: twitchIrc.NoticeEvent,\n  id: string,\n): Notice => ({\n  type: 'notice',\n  id,\n  message,\n  channel,\n  noticeType: msgId,\n});\n\nexport const normalizeUserNotice = ({\n  message,\n  channel,\n  tags: { id, msgId, login, systemMsg },\n}: twitchIrc.UserNoticeEvent): UserNotice => ({\n  type: 'user-notice',\n  id,\n  message,\n  channel,\n  noticeType: msgId,\n  systemMessage: systemMsg,\n  user: {\n    login,\n  },\n});\n\nexport const normalizeOwnMessage = (\n  { message, channel, tags }: OwnMessage,\n  state: RootState,\n): Message => {\n  const globalBadges = globalBadgesSelector(state);\n  const channelBadges = channelBadgesSelector(state);\n  const emotes = emotesSelector(state);\n  const userId = userIdSelector(state);\n  const userLogin = userLoginSelector(state);\n\n  const isAction = message.startsWith('/me ');\n  const normalizedMessage = isAction ? message.slice(4) : message;\n\n  // TODO: write emotes usage to the local storage\n  const entities = parseMessageEntities(normalizedMessage, emotes, null, true);\n\n  writeEmotesUsageStatistic(entities);\n\n  return {\n    type: 'message',\n    id: uuid(),\n    message: normalizedMessage,\n    channel,\n    entities,\n    user: {\n      id: userId as string,\n      login: userLogin as string,\n      displayName: tags.displayName,\n      color: tags.color,\n      badges: htmlEntity.createBadges(tags.badges, globalBadges, channelBadges),\n    },\n    timestamp: Date.now(),\n    isAction,\n    isHistory: false,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeHistoryMessage = (\n  { tags, params: [channel, message], prefix }: tekko.Message,\n  emotes: StateEmotes,\n  globalBadges: Record<string, api.TwitchBadge>,\n  channelBadges: Record<string, api.TwitchBadge>,\n): Message => {\n  const isAction = twitchIrc.getIsAction(message);\n  const normalizedMessage = isAction\n    ? twitchIrc.normalizeActionMessage(message)\n    : message;\n  const parsedTags = (twitchIrc.parseMessageTags(\n    tags,\n  ) as unknown) as twitchIrc.MessageTags;\n\n  return {\n    type: 'message',\n    id: parsedTags.id,\n    message,\n    channel: channel.slice(1),\n    entities: parseMessageEntities(\n      normalizedMessage,\n      emotes,\n      parsedTags.emotes,\n    ),\n    user: {\n      id: parsedTags.userId,\n      login: prefix ? prefix.name : '',\n      displayName: parsedTags.displayName,\n      color: parsedTags.color,\n      badges: htmlEntity.createBadges(\n        parsedTags.badges,\n        globalBadges,\n        channelBadges,\n      ),\n    },\n    timestamp: parsedTags.tmiSentTs,\n    isAction,\n    isHistory: true,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeHistoryMessages = (\n  rawMessages: string[],\n  chatState: ChatState,\n): Message[] => {\n  const fakeState = { chat: chatState } as RootState;\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n  const blockedUsers = blockedUsersSelector(fakeState);\n\n  return rawMessages.reduce<Message[]>((acc, rawMessage) => {\n    const message = tekko.parse(rawMessage) as tekko.Message;\n\n    const { command, prefix } = message;\n\n    if (\n      command === 'PRIVMSG' &&\n      prefix &&\n      !blockedUsers.includes(prefix.name)\n    ) {\n      acc.push(\n        normalizeHistoryMessage(message, emotes, globalBadges, channelBadges),\n      );\n    }\n\n    return acc;\n  }, []);\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport * as api from 'api';\nimport {\n  FetchFlags,\n  initialFetchFlags,\n  CHANNEL_MESSAGES_LIMIT,\n  STORE_USERS_LIMIT,\n} from 'utils/constants';\nimport assertNever from 'utils/assertNever';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport {\n  normalizeMessage,\n  normalizeNotice,\n  normalizeUserNotice,\n  normalizeHistoryMessages,\n} from 'features/chat/utils/normalizeMessages';\nimport { ChatState } from 'features/chat/slice';\n\nexport type MessageEntity =\n  | htmlEntity.TwitchEmote\n  | htmlEntity.BttvEmote\n  | htmlEntity.FfzEmote\n  | htmlEntity.Emoji\n  | htmlEntity.Mention\n  | htmlEntity.Link\n  | string;\n\nexport type Message = {\n  type: 'message';\n  id: string;\n  message: string;\n  channel: string;\n  entities: MessageEntity[];\n  user: {\n    id: string;\n    login: string;\n    displayName: string;\n    color: string;\n    badges: htmlEntity.Badge[];\n  };\n  timestamp: number;\n  isAction: boolean;\n  isHistory: boolean;\n  isDeleted: boolean;\n};\n\nexport type Notice = {\n  type: 'notice';\n  id: string;\n  message: string;\n  channel: string;\n  noticeType: string;\n};\n\nexport type UserNotice = {\n  type: 'user-notice';\n  id: string;\n  message: string;\n  channel: string;\n  noticeType: keyof typeof twitchIrc.UserNoticeType;\n  systemMessage: string;\n  user: {\n    login: string;\n  };\n};\n\nexport type ChatMessage = Message | Notice | UserNotice;\n\nexport type OwnMessage = {\n  message: string;\n  channel: string;\n  tags: twitchIrc.UserStateTags;\n};\n\ntype AddMessage = {\n  type: 'message';\n  message: twitchIrc.MessageEvent;\n};\ntype AddNotice = {\n  type: 'notice';\n  id: string;\n  message: twitchIrc.NoticeEvent;\n};\ntype AddUserNotice = {\n  type: 'user-notice';\n  message: twitchIrc.UserNoticeEvent;\n};\ntype AddOwnMessage = {\n  type: 'own-message';\n  message: Message;\n};\n\ntype AddMessagePayload = AddMessage | AddNotice | AddUserNotice | AddOwnMessage;\n\ntype MessagesStateChannel = {\n  history: {\n    isAdded: boolean;\n    items: string[];\n  } & FetchFlags;\n  isEven: boolean;\n  items: ChatMessage[];\n  users: string[];\n};\n\nexport type MessagesState = Record<string, MessagesStateChannel>;\n\nexport const messagesInitialState: MessagesState = {};\n\nconst messagesChannelInitialState = {\n  history: {\n    ...initialFetchFlags,\n    isAdded: false,\n    items: [],\n  },\n  isEven: false,\n  items: [],\n  users: [],\n};\n\nfunction sliceMessages<T>(items: T[]): T[] {\n  const diff = items.length - CHANNEL_MESSAGES_LIMIT;\n\n  return diff > 0 ? items.slice(diff) : items;\n}\n\nfunction sliceUsers<T>(users: T[]): T[] {\n  const diff = users.length - STORE_USERS_LIMIT;\n\n  return diff > 0 ? users.slice(diff) : users;\n}\n\nconst getIsEven = (\n  prev: boolean,\n  addedItemsCount: number,\n  isSliced: boolean,\n): boolean => {\n  if (isSliced) {\n    return addedItemsCount % 2 ? !prev : prev;\n  }\n\n  return prev;\n};\n\nconst normalizePayload = (\n  data: AddMessagePayload,\n  chatState: ChatState,\n): ChatMessage | null => {\n  if (data.type === 'message') {\n    return normalizeMessage(data.message, chatState);\n  }\n\n  if (data.type === 'notice') {\n    return normalizeNotice(data.message, data.id);\n  }\n\n  if (data.type === 'user-notice') {\n    return normalizeUserNotice(data.message);\n  }\n\n  if (data.type === 'own-message') {\n    return data.message;\n  }\n\n  return assertNever(data);\n};\n\nexport const messagesReducers = {\n  clearChat: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.ClearChatEvent>,\n  ): void => {\n    const {\n      channel,\n      tags: { targetUserId },\n    } = payload;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const message of state.messages[channel].items) {\n      if (\n        message.type === 'message' &&\n        message.user.id === targetUserId &&\n        !message.isHistory\n      ) {\n        message.isDeleted = true;\n      }\n    }\n  },\n\n  addMessage: (\n    state: ChatState,\n    { payload }: PayloadAction<AddMessagePayload>,\n  ): void => {\n    const message = normalizePayload(payload, state);\n\n    if (!message) return;\n\n    const { channel } = message;\n\n    const prevItems = state.messages[channel].items;\n    const newItems = [...prevItems, message];\n    const slicedMessages = sliceMessages(newItems);\n\n    const isSliced = newItems.length > slicedMessages.length;\n    const prevIsEven = state.messages[channel].isEven;\n\n    state.messages[channel].isEven = getIsEven(prevIsEven, 1, isSliced);\n    state.messages[channel].items = slicedMessages;\n\n    // add user\n    const { users } = state.messages[channel];\n\n    if (\n      message.type === 'message' &&\n      !users.includes(message.user.displayName)\n    ) {\n      users.push(message.user.displayName);\n    }\n\n    state.messages[channel].users = sliceUsers(users);\n  },\n\n  addChatHistory: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    const channel = payload;\n\n    const rawHistory = state.messages[channel].history.items;\n    const history = normalizeHistoryMessages(sliceMessages(rawHistory), state);\n    const prevItems = state.messages[channel].items;\n    const newItems = [...history, ...prevItems];\n    const slicedMessages = sliceMessages(newItems);\n\n    const isSliced = newItems.length > slicedMessages.length;\n    const prevIsEven = state.messages[channel].isEven;\n\n    state.messages[channel].isEven = getIsEven(\n      prevIsEven,\n      history.length,\n      isSliced,\n    );\n    state.messages[channel].items = slicedMessages;\n\n    // add users\n    const { users } = state.messages[channel];\n\n    history.forEach((message) => {\n      if (\n        message.type === 'message' &&\n        !users.includes(message.user.displayName)\n      ) {\n        users.push(message.user.displayName);\n      }\n    });\n\n    state.messages[channel].history.items = [];\n    state.messages[channel].history.isAdded = true;\n  },\n\n  fetchChatHistoryRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.messages[channel]) {\n      state.messages[channel] = messagesChannelInitialState;\n    }\n\n    setFetchFlags(state.messages[channel].history, 'request');\n  },\n\n  fetchChatHistorySuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: api.ChatHistoryResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.messages[channel].history.items = data.messages;\n\n    setFetchFlags(state.messages[channel].history, 'success');\n  },\n\n  fetchChatHistoryFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.messages[channel].history, 'failure', error);\n  },\n};\n","import * as R from 'ramda';\n\nimport * as api from 'api';\n\nexport const parseTwitchGlobalEmotes = R.pipe<\n  api.TwitchEmotesResponse,\n  Record<string, api.TwitchEmote[]>,\n  Record<string, api.TwitchEmote[]>\n>(R.prop('emoticon_sets'), R.pick(['0']));\n\nexport const parseTwitchChannelEmotes = R.pipe<\n  api.TwitchEmotesResponse,\n  Record<string, api.TwitchEmote[]>,\n  Record<string, api.TwitchEmote[]>\n>(R.prop('emoticon_sets'), R.omit(['0']));\n\nexport const parseBttvGlobalEmotes = (\n  data: api.BttvGlobalEmotesResponse,\n): api.BttvGlobalEmote[] => data;\n\nexport const parseBttvChannelEmotes = (\n  data: api.BttvChannelEmotesResponse,\n): api.BttvChannelEmote[] => [...data.channelEmotes, ...data.sharedEmotes];\n\nexport const parseFfzGlobalEmotes = ({\n  default_sets: defaultSets,\n  sets,\n}: api.FfzGlobalEmotesResponse): api.FfzEmote[] =>\n  R.pipe<{}, {}, any[], any[], any[]>(\n    R.pick((defaultSets as unknown) as string[]),\n    R.values,\n    R.map(R.propOr([], 'emoticons')),\n    R.flatten,\n  )(sets);\n\nexport const parseFfzChannelEmotes: (\n  data: api.FfzChannelEmotesResponse,\n) => api.FfzEmote[] = R.pipe(\n  R.pathOr({}, ['sets']),\n  R.values,\n  R.map(R.pathOr([], ['emoticons'])),\n  R.flatten,\n);\n\nexport const parseBlockedUsers = R.pipe<\n  api.TwitchBlockedUsersResponse,\n  {}[],\n  string[]\n>(R.prop('blocks'), R.map(R.path(['user', 'name'])) as () => string[]);\n\nexport const parseBadges = R.prop('badge_sets');\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api/twitch';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  parseTwitchGlobalEmotes,\n  parseTwitchChannelEmotes,\n} from 'features/chat/utils/parseApiResponse';\n\nexport type TwitchEmotesState = {\n  global: Record<string, api.TwitchEmote[]>;\n  user: Record<string, api.TwitchEmote[]>;\n} & FetchFlags;\n\nexport const twitchEmotesInitialState: TwitchEmotesState = {\n  ...initialFetchFlags,\n  global: {},\n  user: {},\n};\n\nexport const twitchEmotesReducers = {\n  fetchTwitchEmotesRequest: (state: ChatState): void => {\n    setFetchFlags(state.twitchEmotes, 'request');\n  },\n\n  fetchTwitchEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<api.TwitchEmotesResponse>,\n  ): void => {\n    state.twitchEmotes.global = parseTwitchGlobalEmotes(payload);\n    state.twitchEmotes.user = parseTwitchChannelEmotes(payload);\n\n    setFetchFlags(state.twitchEmotes, 'success');\n  },\n\n  fetchTwitchEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.twitchEmotes, 'failure', payload);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  BttvGlobalEmote,\n  BttvChannelEmote,\n  BttvGlobalEmotesResponse,\n  BttvChannelEmotesResponse,\n} from 'api/bttv';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  parseBttvGlobalEmotes,\n  parseBttvChannelEmotes,\n} from 'features/chat/utils/parseApiResponse';\n\ntype BttvGlobalEmotes = {\n  items: BttvGlobalEmote[];\n} & FetchFlags;\n\ntype BttvChannelEmotes = {\n  items: BttvChannelEmote[];\n} & FetchFlags;\n\nexport type BttvEmotesState = {\n  global: BttvGlobalEmotes;\n  byChannels: Record<string, BttvChannelEmotes>;\n};\n\nexport const bttvEmotesInitialState: BttvEmotesState = {\n  global: {\n    ...initialFetchFlags,\n    items: [],\n  },\n  byChannels: {},\n};\n\nconst bttvChannelEmotesInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const bttvEmotesReducers = {\n  fetchBttvGlobalEmotesRequest: (state: ChatState) => {\n    setFetchFlags(state.bttvEmotes.global, 'request');\n  },\n\n  fetchBttvGlobalEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<BttvGlobalEmotesResponse>,\n  ): void => {\n    state.bttvEmotes.global.items = parseBttvGlobalEmotes(payload);\n\n    setFetchFlags(state.bttvEmotes.global, 'success');\n  },\n\n  fetchBttvGlobalEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.bttvEmotes.global, 'failure', payload);\n  },\n\n  fetchBttvChannelEmotesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.bttvEmotes.byChannels[channel]) {\n      state.bttvEmotes.byChannels[channel] = bttvChannelEmotesInitialState;\n    }\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'request');\n  },\n\n  fetchBttvChannelEmotesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: BttvChannelEmotesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.bttvEmotes.byChannels[channel].items = parseBttvChannelEmotes(data);\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'success');\n  },\n\n  fetchBttvChannelEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  FfzEmote,\n  FfzGlobalEmotesResponse,\n  FfzChannelEmotesResponse,\n} from 'api/ffz';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  parseFfzGlobalEmotes,\n  parseFfzChannelEmotes,\n} from 'features/chat/utils/parseApiResponse';\n\ntype FfzEmotes = {\n  items: FfzEmote[];\n} & FetchFlags;\n\nexport type FfzEmotesState = {\n  global: FfzEmotes;\n  byChannels: Record<string, FfzEmotes>;\n};\n\nexport const ffzEmotesInitialState: FfzEmotesState = {\n  global: {\n    ...initialFetchFlags,\n    items: [],\n  },\n  byChannels: {},\n};\n\nconst ffzChannelEmotesInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const ffzEmotesReducers = {\n  fetchFfzGlobalEmotesRequest: (state: ChatState) => {\n    setFetchFlags(state.ffzEmotes.global, 'request');\n  },\n\n  fetchFfzGlobalEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<FfzGlobalEmotesResponse>,\n  ): void => {\n    state.ffzEmotes.global.items = parseFfzGlobalEmotes(payload);\n\n    setFetchFlags(state.ffzEmotes.global, 'success');\n  },\n\n  fetchFfzGlobalEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.ffzEmotes.global, 'failure', payload);\n  },\n\n  fetchFfzChannelEmotesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.ffzEmotes.byChannels[channel]) {\n      state.ffzEmotes.byChannels[channel] = ffzChannelEmotesInitialState;\n    }\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'request');\n  },\n\n  fetchFfzChannelEmotesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: FfzChannelEmotesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.ffzEmotes.byChannels[channel].items = parseFfzChannelEmotes(data);\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'success');\n  },\n\n  fetchFfzChannelEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport { TwitchBadge, TwitchBadgesResponse } from 'api/twitch';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport { parseBadges } from 'features/chat/utils/parseApiResponse';\n\ntype Badges = {\n  items: Record<string, TwitchBadge>;\n} & FetchFlags;\n\nexport type BadgesState = {\n  global: Badges;\n  byChannels: Record<string, Badges>;\n};\n\nexport const badgesInitialState: BadgesState = {\n  global: {\n    ...initialFetchFlags,\n    items: {},\n  },\n  byChannels: {},\n};\n\nconst badgesChannelInitialState = {\n  ...initialFetchFlags,\n  items: {},\n};\n\nexport const badgesReducers = {\n  fetchGlobalBadgesRequest: (state: ChatState) => {\n    setFetchFlags(state.badges.global, 'request');\n  },\n\n  fetchGlobalBadgesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchBadgesResponse>,\n  ): void => {\n    state.badges.global.items = parseBadges(payload);\n\n    setFetchFlags(state.badges.global, 'success');\n  },\n\n  fetchGlobalBadgesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.badges.global, 'failure', payload);\n  },\n\n  fetchChannelBadgesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.badges.byChannels[channel]) {\n      state.badges.byChannels[channel] = badgesChannelInitialState;\n    }\n\n    setFetchFlags(state.badges.byChannels[channel], 'request');\n  },\n\n  fetchChannelBadgesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; data: TwitchBadgesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.badges.byChannels[channel].items = parseBadges(data);\n\n    setFetchFlags(state.badges.byChannels[channel], 'success');\n  },\n\n  fetchChannelBadgesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.badges.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport { ChatState } from 'features/chat/slice';\n\ntype Params = {\n  room: twitchIrc.RoomStateTags | null;\n  user: twitchIrc.UserStateTags | null;\n};\n\nexport type ParamsState = {\n  global: twitchIrc.GlobalUserStateTags | null;\n  byChannels: Record<string, Params>;\n};\n\nexport const paramsInitialState: ParamsState = {\n  global: null,\n  byChannels: {},\n};\n\nconst channelParamsInitialState = {\n  room: null,\n  user: null,\n};\n\nexport const paramsReducers = {\n  updateGlobalUserParams: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.GlobalUserStateEvent>,\n  ): void => {\n    state.params.global = payload.tags;\n  },\n\n  updateUserParams: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.UserStateEvent>,\n  ): void => {\n    const { channel, tags } = payload;\n\n    if (!state.params.byChannels[channel]) {\n      state.params.byChannels[channel] = channelParamsInitialState;\n    }\n\n    state.params.byChannels[channel].user = tags;\n  },\n\n  updateRoomParams: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.RoomStateEvent>,\n  ): void => {\n    const { channel, tags } = payload;\n\n    if (!state.params.byChannels[channel]) {\n      state.params.byChannels[channel] = channelParamsInitialState;\n    }\n\n    // TODO: merge tags\n    state.params.byChannels[channel].room = tags;\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport { TwitchBlockedUsersResponse } from 'api/twitch';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport { parseBlockedUsers } from 'features/chat/utils/parseApiResponse';\n\nexport type BlockedUsersState = {\n  items: string[];\n} & FetchFlags;\n\nexport const blockedUsersInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const blockedUsersReducers = {\n  fetchBlockedUsersRequest: (state: ChatState): void => {\n    setFetchFlags(state.blockedUsers, 'request');\n  },\n\n  fetchBlockedUsersSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchBlockedUsersResponse>,\n  ): void => {\n    state.blockedUsers.items = parseBlockedUsers(payload);\n\n    setFetchFlags(state.blockedUsers, 'success');\n  },\n\n  fetchBlockedUsersFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.blockedUsers, 'failure', payload);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport * as twitchApi from 'api/twitch';\nimport * as bttvApi from 'api/bttv';\nimport * as ffzApi from 'api/ffz';\nimport * as chatHistoryApi from 'api/chatHistory';\nimport { AppThunk } from 'app/store';\nimport {\n  messagesInitialState,\n  messagesReducers,\n  MessagesState,\n  OwnMessage,\n} from 'features/chat/slice/messages';\nimport {\n  twitchEmotesInitialState,\n  twitchEmotesReducers,\n  TwitchEmotesState,\n} from 'features/chat/slice/twitchEmotes';\nimport {\n  bttvEmotesInitialState,\n  bttvEmotesReducers,\n  BttvEmotesState,\n} from 'features/chat/slice/bttvEmotes';\nimport {\n  ffzEmotesInitialState,\n  ffzEmotesReducers,\n  FfzEmotesState,\n} from 'features/chat/slice/ffzEmotes';\nimport {\n  badgesInitialState,\n  badgesReducers,\n  BadgesState,\n} from 'features/chat/slice/badges';\nimport {\n  paramsInitialState,\n  paramsReducers,\n  ParamsState,\n} from 'features/chat/slice/params';\nimport {\n  blockedUsersInitialState,\n  blockedUsersReducers,\n  BlockedUsersState,\n} from 'features/chat/slice/blockedUsers';\nimport { normalizeOwnMessage } from 'features/chat/utils/normalizeMessages';\n\nexport type ChatState = {\n  isConnected: boolean;\n  currentChannel: string;\n  messages: MessagesState;\n  twitchEmotes: TwitchEmotesState;\n  bttvEmotes: BttvEmotesState;\n  ffzEmotes: FfzEmotesState;\n  badges: BadgesState;\n  params: ParamsState;\n  blockedUsers: BlockedUsersState;\n};\n\nconst initialState: ChatState = {\n  isConnected: false,\n  currentChannel: '',\n  messages: messagesInitialState,\n  twitchEmotes: twitchEmotesInitialState,\n  bttvEmotes: bttvEmotesInitialState,\n  ffzEmotes: ffzEmotesInitialState,\n  badges: badgesInitialState,\n  params: paramsInitialState,\n  blockedUsers: blockedUsersInitialState,\n};\n\nconst chat = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    updateIsConnected: (state, { payload }: PayloadAction<boolean>): void => {\n      state.isConnected = payload;\n    },\n    updateCurrentChannel: (state, { payload }: PayloadAction<string>): void => {\n      state.currentChannel = payload;\n    },\n\n    ...messagesReducers,\n    ...twitchEmotesReducers,\n    ...bttvEmotesReducers,\n    ...ffzEmotesReducers,\n    ...badgesReducers,\n    ...paramsReducers,\n    ...blockedUsersReducers,\n  },\n});\n\nexport const {\n  updateIsConnected,\n  updateCurrentChannel,\n\n  // messages\n  clearChat,\n  addMessage,\n  addChatHistory,\n  fetchChatHistoryRequest,\n  fetchChatHistorySuccess,\n  fetchChatHistoryFailure,\n\n  // twitch emotes\n  fetchTwitchEmotesRequest,\n  fetchTwitchEmotesSuccess,\n  fetchTwitchEmotesFailure,\n\n  // bttv emotes\n  fetchBttvGlobalEmotesRequest,\n  fetchBttvGlobalEmotesSuccess,\n  fetchBttvGlobalEmotesFailure,\n  fetchBttvChannelEmotesRequest,\n  fetchBttvChannelEmotesSuccess,\n  fetchBttvChannelEmotesFailure,\n\n  // ffz emotes\n  fetchFfzGlobalEmotesRequest,\n  fetchFfzGlobalEmotesSuccess,\n  fetchFfzGlobalEmotesFailure,\n  fetchFfzChannelEmotesRequest,\n  fetchFfzChannelEmotesSuccess,\n  fetchFfzChannelEmotesFailure,\n\n  // badges\n  fetchGlobalBadgesRequest,\n  fetchGlobalBadgesSuccess,\n  fetchGlobalBadgesFailure,\n  fetchChannelBadgesRequest,\n  fetchChannelBadgesSuccess,\n  fetchChannelBadgesFailure,\n\n  // params\n  updateGlobalUserParams,\n  updateUserParams,\n  updateRoomParams,\n\n  // blocked users\n  fetchBlockedUsersRequest,\n  fetchBlockedUsersSuccess,\n  fetchBlockedUsersFailure,\n} = chat.actions;\n\nexport default chat.reducer;\n\nexport const fetchChatHistory = (channel: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchChatHistoryRequest({ channel }));\n    const data = await chatHistoryApi.fetchChatHistory(channel);\n    dispatch(fetchChatHistorySuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchChatHistoryFailure({ channel, error }));\n  }\n};\n\nexport const fetchTwitchEmotes = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchTwitchEmotesRequest());\n    const data = await twitchApi.fetchTwitchEmotes(userId);\n    dispatch(fetchTwitchEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchTwitchEmotesFailure(error));\n  }\n};\n\nexport const fetchBttvGlobalEmotes = (): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchBttvGlobalEmotesRequest());\n    const data = await bttvApi.fetchBttvGlobalEmotes();\n    dispatch(fetchBttvGlobalEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchBttvGlobalEmotesFailure(error));\n  }\n};\n\nexport const fetchBttvChannelEmotes = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch): Promise<void> => {\n  try {\n    dispatch(fetchBttvChannelEmotesRequest({ channel }));\n    const data = await bttvApi.fetchBttvChannelEmotes(channelId);\n    dispatch(fetchBttvChannelEmotesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchBttvChannelEmotesFailure({ channel, error }));\n  }\n};\n\nexport const fetchFfzGlobalEmotes = (): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchFfzGlobalEmotesRequest());\n    const data = await ffzApi.fetchFfzGlobalEmotes();\n    dispatch(fetchFfzGlobalEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchFfzGlobalEmotesFailure(error));\n  }\n};\n\nexport const fetchFfzChannelEmotes = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch): Promise<void> => {\n  try {\n    dispatch(fetchFfzChannelEmotesRequest({ channel }));\n    const data = await ffzApi.fetchFfzChannelEmotes(channelId);\n    dispatch(fetchFfzChannelEmotesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchFfzChannelEmotesFailure({ channel, error }));\n  }\n};\n\nexport const fetchGlobalBadges = (): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchGlobalBadgesRequest());\n    const data = await twitchApi.fetchGlobalBadges();\n    dispatch(fetchGlobalBadgesSuccess(data));\n  } catch (error) {\n    dispatch(fetchGlobalBadgesFailure(error));\n  }\n};\n\nexport const fetchChannelBadges = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch): Promise<void> => {\n  try {\n    dispatch(fetchChannelBadgesRequest({ channel }));\n    const data = await twitchApi.fetchChannelBadges(channelId);\n    dispatch(fetchChannelBadgesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchChannelBadgesFailure({ channel, error }));\n  }\n};\n\nexport const fetchBlockedUsers = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchBlockedUsersRequest());\n    const data = await twitchApi.fetchBlockedUsers(userId);\n    dispatch(fetchBlockedUsersSuccess(data));\n  } catch (error) {\n    dispatch(fetchBlockedUsersFailure(error));\n  }\n};\n\nexport const addOwnMessage = (ownMessage: OwnMessage): AppThunk => async (\n  dispatch,\n  getState,\n): Promise<void> => {\n  const state = getState();\n  const message = normalizeOwnMessage(ownMessage, state);\n\n  dispatch(addMessage({ type: 'own-message', message }));\n};\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface ChatHistoryResponse {\n  messages: string[];\n  error: null;\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchChatHistory = (\n  channel: string,\n): Promise<ChatHistoryResponse> =>\n  fetchRequest(\n    `https://recent-messages.robotty.de/api/v2/recent-messages/${channel}?clearchatToNotice=true`,\n  );\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface BttvEmote {\n  id: string;\n  code: string;\n  imageType: 'png' | 'gif';\n}\n\nexport interface BttvGlobalEmote extends BttvEmote {\n  userId: string;\n}\n\nexport interface BttvChannelEmote extends BttvEmote {\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n    providerId: string;\n  };\n}\n\nexport type BttvGlobalEmotesResponse = BttvGlobalEmote[];\n\nexport interface BttvChannelEmotesResponse {\n  id: string;\n  bots: string[];\n  channelEmotes: BttvChannelEmote[];\n  sharedEmotes: BttvChannelEmote[];\n}\n\nexport const fetchBttvGlobalEmotes = (): Promise<BttvGlobalEmotesResponse> =>\n  fetchRequest('https://api.betterttv.net/3/cached/emotes/global');\n\nexport const fetchBttvChannelEmotes = (\n  channelId: string,\n): Promise<BttvChannelEmotesResponse> =>\n  fetchRequest(`https://api.betterttv.net/3/cached/users/twitch/${channelId}`);\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface FfzEmote {\n  css: null;\n  height: number;\n  hidden: boolean;\n  id: number;\n  margins: null;\n  modifier: boolean;\n  name: string;\n  offset: null;\n  owner: {\n    _id: number;\n    display_name: string;\n    name: string;\n  };\n  public: boolean;\n  urls: {\n    '1': string;\n    '2'?: string;\n    '4'?: string;\n  };\n  width: number;\n}\n\ninterface FfzEmoteSet {\n  _type: number;\n  css: null;\n  description: null;\n  emoticons: FfzEmote[];\n  icon: null;\n  id: number;\n  title: string;\n}\n\nexport interface FfzGlobalEmotesResponse {\n  default_sets: number[];\n  sets: Record<string, FfzEmoteSet>;\n  users: Record<string, string[]>;\n}\n\nexport interface FfzChannelEmotesResponse {\n  room: {\n    _id: number;\n    css: null;\n    display_name: string;\n    id: string;\n    is_group: boolean;\n    mod_urls: null;\n    moderator_badge: null;\n    set: number;\n    twitch_id: number;\n    user_badges: {};\n  };\n  sets: Record<string, FfzEmoteSet>;\n}\n\nexport const fetchFfzGlobalEmotes = (): Promise<FfzGlobalEmotesResponse> =>\n  fetchRequest('https://api.frankerfacez.com/v1/set/global');\n\nexport const fetchFfzChannelEmotes = (\n  channelId: string,\n): Promise<FfzChannelEmotesResponse> =>\n  fetchRequest(`https://api.frankerfacez.com/v1/room/id/${channelId}`);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./twitch-simple-irc.cjs.production.min.js');\n} else {\n  module.exports = require('./twitch-simple-irc.cjs.development.js');\n}","import * as R from 'ramda';\n\nimport * as api from 'api';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors';\nimport getEmotesByText from 'features/chat/utils/getEmotesByText';\nimport { getEmotesFromUsageStatistic } from 'features/chat/utils/emotesUsageStatistic';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport type EmoteCategory = {\n  title?: string;\n  items: htmlEntity.Emote[];\n};\n\nconst getTwitchUserEmoteCategories = R.pipe<\n  Record<string, api.TwitchEmote[]>,\n  api.TwitchEmote[][],\n  EmoteCategory[]\n>(\n  R.values,\n  R.map((items) => ({ items: R.map(htmlEntity.createTwitchEmote, items) })),\n);\n\nconst createMainEmoteCategories = (emotes: StateEmotes) => {\n  if (!emotes) return [];\n\n  const {\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  } = emotes;\n\n  return [\n    {\n      title: 'BetterTTV Channel Emotes',\n      items: bttvChannel.map(htmlEntity.createBttvEmote),\n    },\n    {\n      title: 'FrankerFaceZ Channel Emotes',\n      items: ffzChannel.map(htmlEntity.createFfzEmote),\n    },\n    ...getTwitchUserEmoteCategories(twitchUser),\n    {\n      title: 'Twitch',\n      items: R.map(\n        htmlEntity.createTwitchEmote,\n        R.propOr([], '0', twitchGlobal),\n      ),\n    },\n    {\n      title: 'BetterTTV',\n      items: bttvGlobal.map(htmlEntity.createBttvEmote),\n    },\n    {\n      title: 'FrankerFaceZ',\n      items: ffzGlobal.map(htmlEntity.createFfzEmote),\n    },\n  ].filter(R.path(['items', 'length'])) as EmoteCategory[];\n};\n\nconst getMainEmoteCategories = createSelector(\n  (emotes: any) => emotes,\n  createMainEmoteCategories,\n);\n\nconst createEmoteCategories = (emotes: StateEmotes, text: string) => {\n  if (!emotes) return [];\n\n  if (text) {\n    const items = getEmotesByText(text, emotes);\n    const title = `${items.length ? '' : 'No '}Search Results for \"${text}\"`;\n\n    return [{ title, items }];\n  }\n\n  const mainEmoteCategories = getMainEmoteCategories(emotes);\n  const frequentlyUsed = getEmotesFromUsageStatistic(emotes);\n\n  if (!frequentlyUsed.length) {\n    return mainEmoteCategories;\n  }\n\n  const frequentlyUsedCategory = {\n    title: 'Frequently Used',\n    items: frequentlyUsed,\n  };\n\n  return [frequentlyUsedCategory, ...mainEmoteCategories] as EmoteCategory[];\n};\n\nexport default createEmoteCategories;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\n// import { BttvGlobalEmote, BttvChannelEmote } from 'api/bttv';\n// import { FfzEmote } from 'api/ffz';\nimport { RootState } from 'app/rootReducer';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { ChatMessage } from 'features/chat/slice/messages';\nimport createEmoteCategories from 'features/chat/utils/createEmoteCategories';\n\nexport type StateEmotes = {\n  twitchGlobal: Record<string, api.TwitchEmote[]>;\n  twitchUser: Record<string, api.TwitchEmote[]>;\n  bttvGlobal: api.BttvGlobalEmote[];\n  bttvChannel: api.BttvChannelEmote[];\n  ffzGlobal: api.FfzEmote[];\n  ffzChannel: api.FfzEmote[];\n} | null;\n\nexport const currentChannelSelector = (state: RootState) =>\n  state.chat.currentChannel;\n\nexport const isConnectedSelector = (state: RootState) => state.chat.isConnected;\n\n// messages\n\nexport const messagesSelector = (state: RootState): ChatMessage[] =>\n  state.chat.messages[currentChannelSelector(state)]?.items || [];\n\nexport const usersSelector = (state: RootState): string[] =>\n  state.chat.messages[currentChannelSelector(state)]?.users || [];\n\nexport const isHistoryLoadedSelector = (state: RootState) =>\n  state.chat.messages[currentChannelSelector(state)]?.history.isLoaded || false;\n\nexport const isHistoryAddedSelector = (state: RootState) =>\n  state.chat.messages[currentChannelSelector(state)]?.history.isAdded || false;\n\nexport const isEvenSelector = (state: RootState) =>\n  state.chat.messages[currentChannelSelector(state)]?.isEven || false;\n\n// emotes isLoaded\n\nexport const isTwitchEmotesLoadedSelector = (state: RootState) =>\n  state.chat.twitchEmotes.isLoaded;\n\nexport const isBttvGlobalEmotesLoadedSelector = (state: RootState) =>\n  state.chat.bttvEmotes.global.isLoaded;\n\nexport const isBttvChannelEmotesLoadedSelector = (state: RootState) =>\n  state.chat.bttvEmotes.byChannels[currentChannelSelector(state)]?.isLoaded ||\n  false;\n\nexport const isBttvEmotesLoadedSelector = (state: RootState) =>\n  isBttvGlobalEmotesLoadedSelector(state) &&\n  isBttvChannelEmotesLoadedSelector(state);\n\nexport const isFfzGlobalEmotesLoadedSelector = (state: RootState) =>\n  state.chat.ffzEmotes.global.isLoaded;\n\nexport const isFfzChannelEmotesLoadedSelector = (state: RootState) =>\n  state.chat.ffzEmotes.byChannels[currentChannelSelector(state)]?.isLoaded ||\n  false;\n\nexport const isFfzEmotesLoadedSelector = (state: RootState) =>\n  isFfzGlobalEmotesLoadedSelector(state) &&\n  isFfzChannelEmotesLoadedSelector(state);\n\nexport const isEmotesLoadedSelector = (state: RootState) =>\n  isTwitchEmotesLoadedSelector(state) &&\n  isBttvGlobalEmotesLoadedSelector(state) &&\n  isBttvChannelEmotesLoadedSelector(state) &&\n  isFfzGlobalEmotesLoadedSelector(state) &&\n  isFfzChannelEmotesLoadedSelector(state);\n\n// emotes\n\nconst twitchGlobalEmotesSelector = (state: RootState) =>\n  state.chat.twitchEmotes.global;\nconst twitchUserEmotesSelector = (state: RootState) =>\n  state.chat.twitchEmotes.user;\n\nconst bttvGlobalEmotesSelector = (state: RootState) =>\n  state.chat.bttvEmotes.global.items;\nconst bttvChannelEmotesSelector = (state: RootState) =>\n  state.chat.bttvEmotes.byChannels[currentChannelSelector(state)]?.items || [];\n\nconst ffzGlobalEmotesSelector = (state: RootState) =>\n  state.chat.ffzEmotes.global.items;\nconst ffzChannelEmotesSelector = (state: RootState) =>\n  state.chat.ffzEmotes.byChannels[currentChannelSelector(state)]?.items || [];\n\nexport const emotesSelector = createSelector(\n  isEmotesLoadedSelector,\n  twitchGlobalEmotesSelector,\n  twitchUserEmotesSelector,\n  bttvGlobalEmotesSelector,\n  bttvChannelEmotesSelector,\n  ffzGlobalEmotesSelector,\n  ffzChannelEmotesSelector,\n  (\n    isEmotesLoaded,\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  ) => {\n    if (!isEmotesLoaded) return null;\n\n    return {\n      twitchGlobal,\n      twitchUser,\n      bttvGlobal,\n      bttvChannel,\n      ffzGlobal,\n      ffzChannel,\n    } as StateEmotes;\n  },\n);\n\nexport const emoteCategoriesSelector = (state: RootState, search: string) => {\n  const emotes = emotesSelector(state);\n\n  return createEmoteCategories(emotes, search);\n};\n\n// Badges\n\nexport const userBadgesSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.user?.badges ||\n  {};\n\nexport const isGlobalBadgesLoadedSelector = (state: RootState) =>\n  state.chat.badges.global.isLoaded;\n\nexport const isChannelBadgesLoadedSelector = (state: RootState) =>\n  state.chat.badges.byChannels[currentChannelSelector(state)]?.isLoaded ||\n  false;\n\nexport const isBadgesLoadedSelector = (state: RootState) =>\n  isGlobalBadgesLoadedSelector(state) && isChannelBadgesLoadedSelector(state);\n\nexport const globalBadgesSelector = (state: RootState) =>\n  state.chat.badges.global.items;\n\nexport const channelBadgesSelector = (state: RootState) =>\n  state.chat.badges.byChannels[currentChannelSelector(state)]?.items || {};\n\nexport const userBadgesImagesSelector = createSelector(\n  userBadgesSelector,\n  globalBadgesSelector,\n  channelBadgesSelector,\n  htmlEntity.createBadges,\n);\n\n// params\n\nexport const currentChannelIdSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.room?.roomId ||\n  '';\n\nexport const userColorSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.user?.color ||\n  '';\n\nexport const userDisplayNameSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.user\n    ?.displayName || '';\n\n// blocked users\n\nexport const isBlockedUsersLoadedSelector = (state: RootState) =>\n  state.chat.blockedUsers.isLoaded;\n\nexport const blockedUsersSelector = (state: RootState) =>\n  state.chat.blockedUsers.items;\n","export * from './chatSelectors';\n","export const readOptionsFromLocalStorage = (): object => {\n  try {\n    return JSON.parse(localStorage.options);\n  } catch {\n    return {};\n  }\n};\n\nexport const writeOptionsToLocalStore = (options: object): void => {\n  localStorage.setItem(\n    'options',\n    JSON.stringify({\n      ...readOptionsFromLocalStorage(),\n      ...options,\n    }),\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'app/store';\nimport {\n  writeOptionsToLocalStore,\n  readOptionsFromLocalStorage,\n} from 'features/options/optionsUtils';\n\ntype OptionsState = {\n  showTimestamps: boolean;\n  splitChat: boolean;\n  blacklistKeywords: string;\n  highlightKeywords: string;\n  fixedWidth: boolean;\n};\n\ntype ChangeOption = {\n  name: keyof OptionsState;\n  value: any;\n};\n\nexport const initialState: OptionsState = {\n  showTimestamps: false,\n  splitChat: true,\n  blacklistKeywords: '',\n  highlightKeywords: '',\n  fixedWidth: false,\n  ...readOptionsFromLocalStorage(),\n};\n\nconst options = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    changeOption: (state, { payload }: PayloadAction<ChangeOption>): void => {\n      const { name, value } = payload;\n      (state[name] as unknown) = value;\n    },\n  },\n});\n\nexport const { changeOption } = options.actions;\n\nexport default options.reducer;\n\nexport const changeChatOption = ({\n  name,\n  value,\n}: ChangeOption): AppThunk => async (dispatch): Promise<void> => {\n  writeOptionsToLocalStore({ [name]: value });\n  dispatch(changeOption({ name, value }));\n};\n","const assertNever = (value: never): never => value;\n\nexport default assertNever;\n","/* eslint-disable no-restricted-syntax */\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport findEmote from 'features/chat/utils/findEmote';\n\nconst getEmotesByText = (\n  text: string,\n  emotes: StateEmotes,\n  limit = -1,\n): htmlEntity.Emote[] => {\n  if (!emotes) return [];\n\n  const result: htmlEntity.Emote[] = [];\n  const textLower = text.toLowerCase();\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const isOver =\n    findEmote.bttv.byText(result, emotes.bttvChannel, textLower, limit) ||\n    findEmote.ffz.byText(result, emotes.ffzChannel, textLower, limit) ||\n    findEmote.twitch.byText(result, emotes.twitchUser, textLower, limit) ||\n    findEmote.twitch.byText(result, emotes.twitchGlobal, textLower, limit) ||\n    findEmote.bttv.byText(result, emotes.bttvGlobal, textLower, limit) ||\n    findEmote.ffz.byText(result, emotes.ffzGlobal, textLower, limit);\n\n  return result;\n};\n\nexport default getEmotesByText;\n","import * as R from 'ramda';\n\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport findEmote from 'features/chat/utils/findEmote';\nimport { StateEmotes } from 'features/chat/selectors';\nimport { MessageEntity } from 'features/chat/slice/messages';\n\nconst LOCAL_STORAGE_EMOTES_USAGE = 'emotesUsageStatistic';\n\nexport type EmotesUsageType = 'twitch-emote' | 'bttv-emote' | 'ffz-emote';\n\ntype AEmotesUsageItem = {\n  lastUpdatedAt: number;\n  uses: number;\n};\n\ntype EmotesUsageTwitchFfz = {\n  type: 'twitch-emote' | 'ffz-emote';\n  id: number;\n} & AEmotesUsageItem;\n\ntype EmotesUsageBttv = {\n  type: 'bttv-emote';\n  id: string;\n} & AEmotesUsageItem;\n\ntype EmotesUsageItem = EmotesUsageTwitchFfz | EmotesUsageBttv;\n\nexport type EmotesUsageStatistic = Record<\n  EmotesUsageType,\n  Record<string, EmotesUsageItem>\n>;\n\nexport const initialEmotesUsageStatistic = {\n  'twitch-emote': {},\n  'bttv-emote': {},\n  'ffz-emote': {},\n};\n\nexport const readEmotesUsageStatistic = (): EmotesUsageStatistic => {\n  try {\n    return JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_EMOTES_USAGE) as string,\n    );\n  } catch (e) {\n    return initialEmotesUsageStatistic;\n  }\n};\n\nexport const getUsageStatisticFromEntries = R.pipe<any, any, any, any>(\n  R.filter((v: any) =>\n    R.includes(R.prop('type', v), ['twitch-emote', 'bttv-emote', 'ffz-emote']),\n  ),\n  R.groupBy<any>(R.prop('type')),\n  R.map(\n    R.pipe<any, any, any>(\n      R.groupBy<any>(R.prop('id')),\n      R.map((items: any) => ({\n        type: items[0].type,\n        id: items[0].id,\n        lastUpdatedAt: Date.now(),\n        uses: items.length,\n      })),\n    ),\n  ),\n);\n\nconst mergeFn = (k: string, l: any, r: any) => {\n  if (k === 'uses') return l + r;\n  return r;\n};\n\nexport const writeEmotesUsageStatistic = (entries: MessageEntity[]) => {\n  const history = readEmotesUsageStatistic();\n  const statistic = getUsageStatisticFromEntries(entries) as Partial<\n    EmotesUsageStatistic\n  >;\n\n  const newHistory = R.mergeDeepWithKey(mergeFn, history, statistic);\n\n  localStorage.setItem(LOCAL_STORAGE_EMOTES_USAGE, JSON.stringify(newHistory));\n};\n\nexport const normalizeHistory = R.pipe<any, any, any, any, EmotesUsageItem[]>(\n  R.values,\n  R.map(R.values),\n  R.flatten,\n  R.sortWith([R.descend(R.prop('uses')), R.descend(R.prop('lastUpdatedAt'))]),\n);\n\nexport const getEmotesFromUsageStatistic = (\n  emotes: StateEmotes,\n  limit = 27,\n) => {\n  const result: htmlEntity.Emote[] = [];\n\n  if (!emotes) return result;\n\n  const history = R.pipe(readEmotesUsageStatistic, normalizeHistory)();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const item of history) {\n    if (result.length === limit) return result;\n\n    let emoteEntity = null;\n\n    if (item.type === 'twitch-emote') {\n      emoteEntity = findEmote.twitch.byId(item.id, emotes);\n    }\n\n    if (item.type === 'bttv-emote') {\n      emoteEntity = findEmote.bttv.byId(item.id, emotes);\n    }\n\n    if (item.type === 'ffz-emote') {\n      emoteEntity = findEmote.ffz.byId(item.id, emotes);\n    }\n\n    if (emoteEntity) {\n      result.push(emoteEntity);\n    }\n  }\n\n  return result;\n};\n"],"sourceRoot":""}