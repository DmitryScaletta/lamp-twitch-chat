{"version":3,"sources":["features/auth/authSlice.ts","utils/normalizeHref.ts","features/chat/utils/htmlEntity.ts","../../twitch-simple-irc/dist/twitch-simple-irc.cjs.production.min.js","features/chat/utils/findEmote.ts","utils/fetchRequest.ts","api/twitch.ts","api/bttv.ts","api/ffz.ts","api/chatHistory.ts","api/index.ts","features/options/optionsSelectors.ts","features/auth/hooks/useInitializeAuth.ts","features/chat/hooks/useFetchChatData.ts","features/chat/hooks/useCurrentChannel.ts","hooks/usePrevious.ts","features/chat/utils/replaceEmojis.ts","features/chat/hooks/useTwitchClient.ts","hooks/useSetState.ts","features/chat/utils/getUsersByBeginText.ts","features/chat/hooks/useChatInput.ts","hooks/useOnClickOutside.ts","icons/close.svg","components/IconButton.tsx","components/ChatModal.tsx","icons/smiley-face.svg","components/Scrollbar.tsx","icons/search.svg","features/chat/components/EmotePicker.tsx","features/chat/components/ChatInput.tsx","icons/gears.svg","icons/twitch.svg","components/Switch.tsx","features/options/Options.tsx","features/chat/components/ChatControls.tsx","features/chat/components/Message.tsx","features/chat/components/Notice.tsx","features/chat/components/UserNotice.tsx","features/chat/components/ChatMessage.tsx","features/chat/components/Messages.tsx","features/chat/components/JoinChannel.tsx","features/chat/components/Chat.tsx","features/auth/Auth.tsx","features/auth/Logout.tsx","features/auth/AuthCallback.tsx","styles/common.js","styles/colors.js","styles/vars.js","styles/index.js","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/store.ts","index.tsx","features/auth/authUtils.ts","utils/constants.ts","utils/setFetchFlags.ts","features/chat/utils/parseMessageEntities.ts","features/chat/utils/normalizeMessages.ts","features/chat/slice/messages.ts","features/chat/utils/parseApiResponse.ts","features/chat/slice/twitchEmotes.ts","features/chat/slice/bttvEmotes.ts","features/chat/slice/ffzEmotes.ts","features/chat/slice/badges.ts","features/chat/slice/params.ts","features/chat/slice/blockedUsers.ts","features/chat/slice/chatSlice.ts","../../twitch-simple-irc/dist/index.js","features/chat/utils/createEmoteCategories.ts","features/chat/selectors/chatSelectors.ts","features/chat/selectors/index.ts","features/options/optionsUtils.ts","features/options/optionsSlice.ts","utils/assertNever.ts","features/chat/utils/getEmotesByText.ts","features/chat/utils/emotesUsageStatistic.ts"],"names":["initialState","isAuthReady","isAuth","userId","userLogin","auth","createSlice","name","reducers","initializeAuth","state","payload","invalidateAuth","fetchUserRequest","fetchUserSuccess","data","id","login","fetchUserFailure","actions","fetchUser","async","dispatch","users","api","writeUserToLocatStorage","e","isAuthReadySelector","isAuthSelector","userLoginSelector","userIdSelector","isStartsWithProtocolRegex","normalizeHref","href","test","TWITCH_EMOTES_CDN","regexEmotesMap","getFfzSrcSet","R","dpi","url","createTwitchEmote","code","type","alt","src","srcSet","createBttvEmote","createFfzEmote","urls","createEmoji","createMention","text","target","createLink","createBadges","badges","globalBadges","channelBadges","version","badge","versions","title","description","imageUrl1x","image_url_1x","imageUrl2x","image_url_2x","imageUrl4x","image_url_4x","label","createBadge","Boolean","t","default","r","n","s","a","Object","assign","arguments","length","prototype","hasOwnProperty","call","apply","this","i","o","Math","floor","random","toString","padStart","m","startsWith","endsWith","c","slice","u","middle","d","process","node","g","l","p","h","f","split","reduce","v","entries","includes","map","start","Number","parseInt","end","replace","S","tags","raw","channel","w","message","trailing","exports","Commands","REPLY001","PING","PONG","JOIN","PART","PRIVMSG","NOTICE","USERNOTICE","GLOBALUSERSTATE","USERSTATE","ROOMSTATE","CLEARCHAT","CLEARMSG","HOSTTARGET","WHISPER","P","socket","globalUserState","channels","_connected","_connecting","_registered","options","secure","create","constructor","__proto__","connect","_connectInNode","_connectInBrowser","Promise","resolve","then","_register","reject","disconnect","destroy","close","emit","receiveRaw","trim","forEach","_handleMessage","sendRaw","write","send","say","format","command","sendCommand","Array","isArray","join","part","parse","_updateUserState","_updateRoomState","_updateGlobalUserState","user","prefix","b","C","T","y","isAction","Socket","on","WebSocket","onopen","onmessage","onerror","onclose","wasClean","reason","Error","off","setTimeout","userState","roomState","key","get","enumerable","configurable","writable","defineProperty","EventEmitter","UserNoticeType","sub","resub","subgift","anonsubgift","submysterygift","giftpaidupgrade","rewardgift","anongiftpaidupgrade","raid","unraid","ritual","bitsbadgetier","Client","getChannelFromMessage","getIsAction","getRandomUsername","isNode","normalizeActionMessage","parseMessageTags","findTwitchEmoteByIdInSets","sets","set","values","result","htmlEntity","regexMap","4","9","findTwitchEmoteByNameInSets","RegExp","findEmote","twitch","byId","twitchGlobal","twitchUser","byName","byText","limit","items","emote","begins","contains","index","toLowerCase","indexOf","push","bttv","bttvGlobal","bttvChannel","findById","findByName","ffz","ffzGlobal","ffzChannel","fetchRequest","timeout","restOptions","fetchTimeout","API_REQUESTS_TIMEOUT","controller","AbortController","signal","abort","response","fetch","ok","statusText","body","json","apiRequestKraken","headers","Accept","Authorization","localStorage","getItem","LS_ACCESS_TOKEN","apiRequestHelix","fetchTwitchEmotes","fetchGlobalBadges","language","fetchChannelBadges","channelId","fetchBlockedUsers","fetchBttvGlobalEmotes","fetchBttvChannelEmotes","fetchFfzGlobalEmotes","fetchFfzChannelEmotes","fetchChatHistory","optionsSelector","value","showTimestamps","splitChat","fixedWidth","isShowTimestampsSelector","isSplitChatSelector","isFixedWidthSelector","useInitializeAuth","useDispatch","useSelector","useEffect","idToken","readUserFromLocatStorage","params","jwtData","jwt","decode","useFetchChatData","currentChannel","currentChannelSelector","currentChannelId","currentChannelIdSelector","isTwitchEmotesLoaded","isTwitchEmotesLoadedSelector","isBttvGlobalEmotesLoaded","isBttvGlobalEmotesLoadedSelector","isBttvChannelEmotesLoaded","isBttvChannelEmotesLoadedSelector","isFfzGlobalEmotesLoaded","isFfzGlobalEmotesLoadedSelector","isFfzChannelEmotesLoaded","isFfzChannelEmotesLoadedSelector","isGlobalBadgesLoaded","isGlobalBadgesLoadedSelector","isChannelBadgesLoaded","isChannelBadgesLoadedSelector","isHistoryLoaded","isHistoryLoadedSelector","isBlockedUsersLoaded","isBlockedUsersLoadedSelector","isHistoryAdded","isHistoryAddedSelector","isReadyToAddHistory","addChatHistory","useCurrentChannel","history","useHistory","hash","location","updateCurrentChannel","setItem","LS_LAST_CHANNEL","document","lastChannel","pathname","usePrevious","ref","useRef","current","replaceEmojis","word","emoji","emojilib","char","useTwitchClient","isConnected","isConnectedSelector","prevChannel","clientRef","registerEvents","useCallback","client","updateIsConnected","updateGlobalUserParams","updateUserParams","updateRoomParams","addMessage","uuid","targetUserId","clearChat","twitchIrc","useMemo","normalizedMessage","handleUserState","addOwnMessage","removeListeners","handleNotice","NOTICE_MESSAGE_TAGS","msgId","useSetState","useState","setState","patch","prevState","Function","getUsersByBeginText","beginText","beginTextLower","nameLower","suggestionsInitialState","isActive","activeIndex","setSuggestionsIndexUp","rest","setSuggestionsIndexDown","replaceSuggestionText","currentItem","insertedText","textBefore","substring","testAfter","useChatInput","setText","onSendMessage","chatInputRef","suggestions","setSuggestions","emotes","emotesSelector","usersSelector","usersRef","emotesRef","suggestionsRef","handleChange","selectionStart","spaceIndexBefore","lastIndexOf","spaceIndexAfter","usersMatch","SUGGESTION_TYPES","regex","exec","emotesMatch","getEmotesByText","handleKeyUp","handleKeyDown","preventDefault","handleSuggestionMouseEnter","handleSuggestionClick","focus","handleBlur","events","arePassiveEvents","arePassiveEventsSupported","getOptions","event","passive","undefined","isContainsNode","el","useOnClickOutside","handler","handlerRef","useLatest","listener","some","addEventListener","removeEventListener","_extends","source","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","SvgClose","_ref","svgRef","props","viewBox","ForwardRef","forwardRef","sizes","small","css","medium","IconButton","styled","button","attrs","size","ChatModalRoot","div","CloseButton","CloseIcon","CloseIconSvg","ChatModal","children","onClose","onClick","fillRule","clipRule","SvgSmileyFace","Scrollbar","CustomScrollbar","disableTracksWidthCompensation","SvgSearch","EmotePickerRoot","Categories","Category","CategoryHeader","CategoryItems","Emote","img","SearchBlock","SearchInput","input","SearchIcon","SearchIconSvg","EmotePicker","onEmoteClick","search","setSearch","searchInputRef","emoteCategories","emoteCategoriesSelector","placeholder","onChange","ChatInputRoot","ChatInputInner","Suggestions","SuggestionItem","SuggestionImage","TextareaInput","TextareaWrapper","isSuggestions","EmotesModal","Textarea","showScroll","EmotesButton","SmileyFaceIcon","SmileyFaceIconSvg","ChatInput","React","textareaRef","isDisabled","onKeyUp","onKeyDown","onBlur","onSuggestionMouseEnter","onSuggestionClick","suggestionNodesRef","isShowTextareaScroll","setIsShowTextareaScroll","isEmotesModalVisible","setIsEmotesModalVisible","isEmotesLoaded","isEmotesLoadedSelector","handleCloseEmotesModal","renderUser","onMouseEnter","renderEmote","renderSuggestions","inputRef","maxLength","maxRows","disabled","onHeightChange","height","memo","SvgGears","SvgTwitch","SwitchRoot","Label","Input","Switch","checked","readOnly","aria-label","htmlFor","defaultProps","OptionsRoot","Header","h2","Option","OptionText","span","Profile","UserName","color","LogOutButton","Link","Badge","Options","userDisplayName","userDisplayNameSelector","userColor","userColorSelector","userBadgesImages","userBadgesImagesSelector","renderOption","changeChatOption","renderOptionsCategory","to","ChatControlsRoot","Controls","OptionsModal","buttonStyles","Button","SignInButton","OptionsButton","GearsIcon","GearsIconSvg","TwitchIcon","TwitchIconSvg","isOptionsModalVisible","setIsOptionsModalVisible","optionsModalRef","optionsButtonRef","optionsNodesRef","handleCloseOptionsModal","prev","MessageRoot","isHistory","isDeleted","isMention","isEven","Name","Emoji","Mention","isOwnMessage","Timestamp","entities","displayName","timestamp","isShowTimestamps","onNameRightClick","isVisible","setIsVisible","Date","renderBadges","onContextMenu","item","data-emote-id","rel","renderMessageArray","NoticeRoot","Notice","UserNoticeRoot","UserNotice","systemMessage","assertNever","MessagesRoot","StyledScrollbar","MoreMessagesButton","Messages","isMoreMessagesButtonVisible","setIsMoreMessagesButtonVisible","messages","messagesSelector","isEvenSelector","isSplitChat","scrollbarRef","handleScrollToBottom","scrollToBottom","getIsEven","onUpdate","clientHeight","contentScrollHeight","scrollTop","JoinChannelRoot","Title","JoinChannel","setValue","handleChangeChannel","onKeyPress","ChatRoot","ChatWrapper","isFixedWidth","Chat","textRef","handleSendMessage","chatInput","handleNameRightClick","trimLeft","handleEmoteClick","Auth","window","getAuthUrl","Logout","removeItem","LS_ID_TOKEN","LS_USER","AuthCallback","URLSearchParams","accessToken","createGlobalStyle","colors","vars","common","getHomeComponent","isAuthRedirect","App","exact","path","render","component","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","onSuccess","catch","error","rootReducer","combineReducers","chat","store","configureStore","reducer","ReactGA","initialize","page","pageview","require","ReactDOM","getElementById","URL","origin","contentType","status","ready","unregister","reload","checkValidServiceWorker","authParams","client_id","TWITCH_API_CLIENT_ID","redirect_uri","TWITCH_API_REDIRECT_URI","response_type","scope","claims","JSON","stringify","id_token","email_verified","picture","preferred_username","TWITCH_API_AUTH_BASE","CHANNEL_MESSAGES_LIMIT","STORE_USERS_LIMIT","LS_EMOTES_USAGE_STATISTIC","LS_OPTIONS","initialFetchFlags","isLoading","isLoaded","isError","setFetchFlags","obj","mentionRegex","linkRegex","urlRegex","strict","normalizeEmbeddedEmotes","embeddedEmotes","acc","findEntity","parseTwitch","twitchEmote","emojiMatch","twemojiParser","assetType","findEmojiByName","mentionMatch","linkMatch","parseMessageEntities","offset","arrayOffset","spaceIndex","startIndex","endIndex","entity","entityObject","difference","textAfter","normalizeHistoryMessages","rawMessages","chatState","fakeState","globalBadgesSelector","channelBadgesSelector","blockedUsers","blockedUsersSelector","rawMessage","tekko","parsedTags","tmiSentTs","normalizeHistoryMessage","messagesChannelInitialState","isAdded","sliceMessages","diff","addedItemsCount","isSliced","normalizePayload","normalizeMessage","noticeType","normalizeNotice","systemMsg","normalizeUserNotice","messagesReducers","newItems","slicedMessages","prevIsEven","sliceUsers","rawHistory","prevItems","fetchChatHistoryRequest","fetchChatHistorySuccess","fetchChatHistoryFailure","parseTwitchGlobalEmotes","parseTwitchChannelEmotes","parseFfzChannelEmotes","parseBlockedUsers","parseBadges","twitchEmotesInitialState","global","twitchEmotesReducers","fetchTwitchEmotesRequest","twitchEmotes","fetchTwitchEmotesSuccess","fetchTwitchEmotesFailure","bttvEmotesInitialState","byChannels","bttvChannelEmotesInitialState","bttvEmotesReducers","fetchBttvGlobalEmotesRequest","bttvEmotes","fetchBttvGlobalEmotesSuccess","parseBttvGlobalEmotes","fetchBttvGlobalEmotesFailure","fetchBttvChannelEmotesRequest","fetchBttvChannelEmotesSuccess","channelEmotes","sharedEmotes","parseBttvChannelEmotes","fetchBttvChannelEmotesFailure","ffzEmotesInitialState","ffzChannelEmotesInitialState","ffzEmotesReducers","fetchFfzGlobalEmotesRequest","ffzEmotes","fetchFfzGlobalEmotesSuccess","defaultSets","default_sets","parseFfzGlobalEmotes","fetchFfzGlobalEmotesFailure","fetchFfzChannelEmotesRequest","fetchFfzChannelEmotesSuccess","fetchFfzChannelEmotesFailure","badgesInitialState","badgesChannelInitialState","badgesReducers","fetchGlobalBadgesRequest","fetchGlobalBadgesSuccess","fetchGlobalBadgesFailure","fetchChannelBadgesRequest","fetchChannelBadgesSuccess","fetchChannelBadgesFailure","channelParamsInitialState","room","paramsReducers","blockedUsersInitialState","blockedUsersReducers","fetchBlockedUsersRequest","fetchBlockedUsersSuccess","fetchBlockedUsersFailure","ownMessage","getState","writeEmotesUsageStatistic","now","normalizeOwnMessage","module","getTwitchUserEmoteCategories","getMainEmoteCategories","createSelector","filter","createEmoteCategories","mainEmoteCategories","frequentlyUsed","getEmotesFromUsageStatistic","roomId","readOptionsFromLocalStorage","writeOptionsToLocalStore","blacklistKeywords","highlightKeywords","changeOption","textLower","readEmotesUsageStatistic","statistic","getUsageStatisticFromEntities","lastUpdatedAt","uses","mergeFn","left","right","newHistory","normalizeHistory","emoteEntity"],"mappings":"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","file":"static/js/main.40c10c69.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { AppThunk } from 'app/store';\nimport { RootState } from 'app/rootReducer';\nimport { writeUserToLocatStorage } from 'features/auth/authUtils';\n\ntype AuthState = {\n  isAuthReady: boolean;\n  isAuth: boolean;\n  userId: string | null;\n  userLogin: string | null;\n};\n\ntype InitializeAuth = {\n  isAuth: boolean;\n  userId?: string;\n  userLogin?: string;\n};\n\nexport const initialState: AuthState = {\n  isAuthReady: false,\n  isAuth: false,\n  userId: null,\n  userLogin: null,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    initializeAuth: (\n      state,\n      { payload }: PayloadAction<InitializeAuth>,\n    ): void => {\n      state.isAuthReady = true;\n      state.isAuth = payload.isAuth;\n\n      if (payload.userId) {\n        state.userId = payload.userId;\n      }\n\n      if (payload.userLogin) {\n        state.userLogin = payload.userLogin;\n      }\n    },\n\n    invalidateAuth: (): AuthState => initialState,\n\n    fetchUserRequest: (state): void => {\n      state.isAuthReady = false;\n      state.isAuth = false;\n    },\n\n    fetchUserSuccess: (\n      state,\n      { payload }: PayloadAction<api.TwitchUsersResponse>,\n    ): void => {\n      state.isAuthReady = true;\n      state.isAuth = true;\n\n      state.userId = payload.data[0].id;\n      state.userLogin = payload.data[0].login;\n    },\n\n    fetchUserFailure: (state, { payload }: PayloadAction<string>): void => {\n      state.isAuthReady = true;\n      state.isAuth = false;\n    },\n  },\n});\n\nexport const {\n  initializeAuth,\n  invalidateAuth,\n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserFailure,\n} = auth.actions;\n\nexport default auth.reducer;\n\nexport const fetchUser = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchUserRequest());\n    const users = await api.fetchUser(userId);\n    const { id, login } = users.data[0];\n    writeUserToLocatStorage({ id, login });\n    dispatch(fetchUserSuccess(users));\n  } catch (e) {\n    dispatch(fetchUserFailure(e));\n  }\n};\n\nexport const isAuthReadySelector = (state: RootState): boolean =>\n  state.auth.isAuthReady;\n\nexport const isAuthSelector = (state: RootState): boolean => state.auth.isAuth;\n\nexport const userLoginSelector = (state: RootState): string | null =>\n  state.auth.userLogin;\n\nexport const userIdSelector = (state: RootState): string | null =>\n  state.auth.userId;\n","// https://regex101.com/r/cpaNXh/1\nconst isStartsWithProtocolRegex = /^(?:(?:[a-z]+:)?\\/\\/)/;\n\nconst normalizeHref = (href: string) =>\n  isStartsWithProtocolRegex.test(href) ? href : `//${href}`;\n\nexport default normalizeHref;\n","import * as R from 'ramda';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport * as api from 'api';\nimport normalizeHref from 'utils/normalizeHref';\n\nexport interface TwitchEmote {\n  type: 'twitch-emote';\n  id: number;\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface BttvEmote {\n  type: 'bttv-emote';\n  id: string;\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface FfzEmote {\n  type: 'ffz-emote';\n  id: number;\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface Emoji {\n  type: 'emoji';\n  alt: string;\n  src: string;\n}\nexport interface Mention {\n  type: 'mention';\n  text: string;\n  target: string;\n}\nexport interface Link {\n  type: 'link';\n  text: string;\n  href: string;\n}\nexport interface Badge {\n  alt: string;\n  label: string;\n  src: string;\n  srcSet: string;\n}\n\nexport type Emote = TwitchEmote | BttvEmote | FfzEmote;\n\nconst TWITCH_EMOTES_CDN = '//static-cdn.jtvnw.net/emoticons/v1';\nconst BTTV_EMOTES_CDN = '//cdn.betterttv.net/emote';\n\n// prettier-ignore\nexport const regexEmotesMap: Record<string, string> = {\n  '[oO](_|\\\\.)[oO]': 'O_o',\n  '\\\\&gt\\\\;\\\\(':     '>(',\n  '\\\\&lt\\\\;3':       '<3',\n  '\\\\:-?(o|O)':      ':O',\n  '\\\\:-?(p|P)':      ':P',\n  '\\\\:-?[\\\\\\\\/]':    ':/',\n  '\\\\:-?[z|Z|\\\\|]':  ':Z',\n  '\\\\:-?\\\\(':        ':(',\n  '\\\\:-?\\\\)':        ':)',\n  '\\\\:-?D':          ':D',\n  '\\\\;-?(p|P)':      ';P',\n  '\\\\;-?\\\\)':        ';)',\n  'R-?\\\\)':          'R)',\n  'B-?\\\\)':          'B)',\n};\n\nexport const getFfzSrcSet = R.pipe<{}, [string, string][], string[], string>(\n  R.toPairs,\n  R.map(([dpi, url]) => `${url} ${dpi}x`),\n  R.join(', '),\n);\n\nexport const createTwitchEmote = ({\n  id,\n  code,\n}: api.TwitchEmote): TwitchEmote => ({\n  type: 'twitch-emote',\n  id,\n  alt: regexEmotesMap[code] || code,\n  src: `${TWITCH_EMOTES_CDN}/${id}/1.0`,\n  srcSet: `${TWITCH_EMOTES_CDN}/${id}/1.0 1x, ${TWITCH_EMOTES_CDN}/${id}/2.0 2x, ${TWITCH_EMOTES_CDN}/${id}/3.0 4x`,\n});\n\nexport const createBttvEmote = ({\n  id,\n  code,\n}: api.BttvGlobalEmote | api.BttvChannelEmote): BttvEmote => ({\n  type: 'bttv-emote',\n  id,\n  alt: code,\n  src: `${BTTV_EMOTES_CDN}/${id}/1x`,\n  srcSet: `${BTTV_EMOTES_CDN}/${id}/2x 2x, ${BTTV_EMOTES_CDN}/${id}/3x 4x`,\n});\n\nexport const createFfzEmote = ({ id, name, urls }: api.FfzEmote): FfzEmote => ({\n  type: 'ffz-emote',\n  id,\n  alt: name,\n  src: urls[1],\n  srcSet: getFfzSrcSet(urls),\n});\n\nexport const createEmoji = (alt: string, src: string): Emoji => ({\n  type: 'emoji',\n  alt: `:${alt}:`,\n  src,\n});\n\nexport const createMention = (text: string, target: string): Mention => ({\n  type: 'mention',\n  text,\n  target,\n});\n\nexport const createLink = (href: string): Link => ({\n  type: 'link',\n  text: href,\n  href: normalizeHref(href),\n});\n\nexport const createBadge = ({\n  title,\n  description,\n  image_url_1x: imageUrl1x,\n  image_url_2x: imageUrl2x,\n  image_url_4x: imageUrl4x,\n}: api.TwitchBadgeVersion): Badge => ({\n  alt: title,\n  label: description,\n  src: imageUrl1x,\n  srcSet: `${imageUrl1x} 1x, ${imageUrl2x} 2x, ${imageUrl4x} 4x`,\n});\n\nexport const createBadges = (\n  badges: twitchIrc.Badges,\n  globalBadges: Record<string, api.TwitchBadge>,\n  channelBadges: Record<string, api.TwitchBadge>,\n): Badge[] => {\n  const mapBadges = ([name, version]: [string, string]): Badge | false => {\n    const badge =\n      channelBadges[name]?.versions[version] ||\n      globalBadges[name]?.versions[version];\n\n    return badge ? createBadge(badge) : false;\n  };\n\n  return R.pipe<{}, [string, string][], any[], any[]>(\n    R.toPairs,\n    R.map(mapBadges),\n    R.filter(Boolean),\n  )(badges);\n};\n","\"use strict\";\n\nvar e,\n    t = (e = require(\"tls\")) && \"object\" == typeof e && \"default\" in e ? e.default : e,\n    r = require(\"net\"),\n    n = require(\"events\"),\n    s = require(\"tekko\");\n\nfunction a() {\n  return (a = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n\n      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nvar i,\n    o = function o() {\n  return \"justinfan\" + Math.floor(1e5 * Math.random()).toString().padStart(5, \"0\");\n},\n    m = function m(e) {\n  return e.startsWith(\"\u0001ACTION \") && e.endsWith(\"\u0001\");\n},\n    c = function c(e) {\n  return e.slice(8, -1);\n},\n    u = function u(e) {\n  return e.middle[0].slice(1);\n},\n    d = !(\"undefined\" == typeof process || !process.versions || !process.versions.node),\n    g = [\"mod\", \"emote-only\", \"r9k\", \"rituals\", \"subs-only\", \"msg-param-should-share-streak\"],\n    l = [\"tmi-sent-ts\", \"bits\", \"ban-duration\", \"msg-param-cumulative-months\", \"msg-param-months\", \"msg-param-promo-gift-total\", \"msg-param-streak-months\", \"msg-param-viewerCount\", \"msg-param-threshold\"],\n    p = {\n  \"badge-info\": \"badgeInfo\",\n  \"display-name\": \"displayName\",\n  \"emote-sets\": \"emoteSets\",\n  \"room-id\": \"roomId\",\n  \"tmi-sent-ts\": \"tmiSentTs\",\n  \"user-id\": \"userId\",\n  \"target-msg-id\": \"targetMsgId\",\n  \"target-user-id\": \"targetUserId\",\n  \"msg-id\": \"msgId\",\n  \"system-msg\": \"systemMsg\",\n  \"emote-only\": \"emoteOnly\",\n  \"followers-only\": \"followersOnly\",\n  \"subs-only\": \"subsOnly\",\n  \"ban-duration\": \"banDuration\",\n  \"message-id\": \"messageId\",\n  \"thread-id\": \"threadId\",\n  \"msg-param-cumulative-months\": \"msgParamCumulativeMonths\",\n  \"msg-param-displayName\": \"msgParamDisplayName\",\n  \"msg-param-login\": \"msgParamLogin\",\n  \"msg-param-months\": \"msgParamMonths\",\n  \"msg-param-promo-gift-total\": \"msgParamPromoGiftTotal\",\n  \"msg-param-promo-name\": \"msgParamPromoName\",\n  \"msg-param-recipient-display-name\": \"msgParamRecipientDisplayName\",\n  \"msg-param-recipient-id\": \"msgParamRecipientId\",\n  \"msg-param-recipient-user-name\": \"msgParamRecipientUserName\",\n  \"msg-param-sender-login\": \"msgParamSenderLogin\",\n  \"msg-param-sender-name\": \"msgParamSenderName\",\n  \"msg-param-should-share-streak\": \"msgParamShouldShareStreak\",\n  \"msg-param-streak-months\": \"msgParamStreakMonths\",\n  \"msg-param-sub-plan\": \"msgParamSubPlan\",\n  \"msg-param-sub-plan-name\": \"msgParamSubPlanName\",\n  \"msg-param-viewerCount\": \"msgParamViewerCount\",\n  \"msg-param-ritual-name\": \"msgParamRitualName\",\n  \"msg-param-threshold\": \"msgParamThreshold\"\n},\n    h = [\"subscriber\", \"turbo\", \"user-type\"],\n    f = function f(e) {\n  return void 0 === e && (e = \"\"), e ? e.split(\",\").reduce(function (e, t) {\n    var r,\n        n = t.split(\"/\");\n    return a({}, e, ((r = {})[n[0]] = n[1], r));\n  }, {}) : {};\n},\n    v = function v(e) {\n  return e ? Object.entries(e).reduce(function (e, t) {\n    var r,\n        n = t[0],\n        s = t[1];\n    return h.includes(n) ? e : a({}, e, ((r = {})[p[n] || n] = function (e, t) {\n      if (\"emotes\" === e) return void 0 === (r = t) && (r = \"\"), r ? r.split(\"/\").reduce(function (e, t) {\n        var r,\n            n = t.split(\":\");\n        return a({}, e, ((r = {})[n[0]] = n[1].split(\",\").map(function (e) {\n          var t = e.split(\"-\"),\n              r = t[1];\n          return {\n            start: Number.parseInt(t[0], 10),\n            end: Number.parseInt(r, 10)\n          };\n        }), r));\n      }, {}) : {};\n      var r;\n      if (\"badges\" === e) return f(t);\n      if (\"badge-info\" === e) return f(t);\n\n      if (\"followers-only\" === e) {\n        var n = !1;\n        return \"-1\" === t ? n = !1 : \"0\" === t ? n = !0 : \"string\" == typeof t && (n = parseInt(t, 10)), n;\n      }\n\n      if (\"slow\" === e) {\n        var s = !1;\n        return \"0\" === t ? s = !1 : \"string\" == typeof t && (s = parseInt(t, 10)), s;\n      }\n\n      return g.includes(e) ? \"1\" === t : l.includes(e) ? parseInt(t, 10) : \"string\" == typeof t ? t.replace(\"\\\\s\", \" \") : t;\n    }(n, s), r));\n  }, {}) : {};\n},\n    S = function S(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n},\n    w = function w(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    message: e.trailing,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n};\n\n(i = exports.Commands || (exports.Commands = {})).REPLY001 = \"001\", i.PING = \"PING\", i.PONG = \"PONG\", i.JOIN = \"JOIN\", i.PART = \"PART\", i.PRIVMSG = \"PRIVMSG\", i.NOTICE = \"NOTICE\", i.USERNOTICE = \"USERNOTICE\", i.GLOBALUSERSTATE = \"GLOBALUSERSTATE\", i.USERSTATE = \"USERSTATE\", i.ROOMSTATE = \"ROOMSTATE\", i.CLEARCHAT = \"CLEARCHAT\", i.CLEARMSG = \"CLEARMSG\", i.HOSTTARGET = \"HOSTTARGET\", i.WHISPER = \"WHISPER\";\n\nvar R,\n    P = function (e) {\n  var n, i;\n\n  function g(t) {\n    var r;\n    return void 0 === t && (t = {}), (r = e.call(this) || this).socket = null, r.globalUserState = null, r.channels = {}, r._connected = !1, r._connecting = !1, r._registered = !1, r.options = a({\n      secure: !0\n    }, t), r;\n  }\n\n  i = e, (n = g).prototype = Object.create(i.prototype), n.prototype.constructor = n, n.__proto__ = i;\n  var l,\n      p = g.prototype;\n  return p.connect = function () {\n    try {\n      var e = this,\n          t = d ? e._connectInNode() : e._connectInBrowser();\n      return Promise.resolve(t).then(function () {\n        return e._register();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, p.disconnect = function () {\n    this._connected && (d ? this.socket.destroy() : this.socket.close(), this.socket = null, this._connected = !1, this._connecting = !1, this._registered = !1, this.emit(\"disconnect\"));\n  }, p.receiveRaw = function (e) {\n    var t = this;\n    e.trim().split(\"\\r\\n\").forEach(function (e) {\n      return t._handleMessage(e);\n    });\n  }, p.sendRaw = function (e) {\n    return !(null === this.socket || !e || (d ? this.socket.write(e) : this.socket.send(e), 0));\n  }, p.say = function (e, t) {\n    var r = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: t\n    });\n    return this.sendRaw(r);\n  }, p.sendCommand = function (e, t, r) {\n    void 0 === r && (r = \"\");\n    var n = Array.isArray(r) ? r.join(\" \") : r,\n        a = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: \"/\" + t + \" \" + n\n    });\n    return this.sendRaw(a);\n  }, p.join = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.JOIN,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, p.part = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.PART,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, p._handleMessage = function (e) {\n    var t = s.parse(e);\n    t.raw = e;\n    var r = t.command;\n    if (r === exports.Commands.PING) return this.sendRaw(exports.Commands.PONG + \" :tmi.twitch.tv\"), void this.emit(\"ping\", {\n      raw: e\n    });\n    if (r === exports.Commands.REPLY001) return this.options.name = t.middle[0], this._registered = !0, void this.emit(\"register\");\n\n    if (r !== exports.Commands.PRIVMSG) {\n      if (r === exports.Commands.USERSTATE) {\n        var n = u(t),\n            a = S(t);\n        return this._updateUserState(n, a.tags), void this.emit(\"userstate\", a);\n      }\n\n      if (r !== exports.Commands.JOIN) {\n        if (r !== exports.Commands.PART) {\n          if (r === exports.Commands.ROOMSTATE) {\n            var i = u(t),\n                o = S(t);\n            return this._updateRoomState(i, o.tags), void this.emit(\"roomstate\", o);\n          }\n\n          if (r !== exports.Commands.NOTICE) {\n            if (r !== exports.Commands.USERNOTICE) {\n              if (r !== exports.Commands.CLEARCHAT) {\n                if (r !== exports.Commands.CLEARMSG) {\n                  if (r !== exports.Commands.HOSTTARGET) {\n                    if (r !== exports.Commands.WHISPER) {\n                      var d, g;\n\n                      if (r === exports.Commands.GLOBALUSERSTATE) {\n                        var l = function (e) {\n                          var t = e.tags;\n                          return {\n                            raw: e.raw,\n\n                            get tags() {\n                              return v(t);\n                            }\n\n                          };\n                        }(t);\n\n                        return this._updateGlobalUserState(l.tags), void this.emit(\"globaluserstate\", l);\n                      }\n                    } else {\n                      var p = (g = (d = t).tags, {\n                        raw: d.raw,\n                        message: d.trailing,\n                        channel: d.middle[0],\n                        user: d.prefix.name,\n\n                        get tags() {\n                          return v(g);\n                        }\n\n                      });\n                      this.emit(\"whisper\", p);\n                    }\n                  } else {\n                    var h = w(t);\n                    this.emit(\"hosttarget\", h);\n                  }\n                } else {\n                  var f = w(t);\n                  this.emit(\"clearmessage\", f);\n                }\n              } else {\n                var R = w(t);\n                this.emit(\"clearchat\", R);\n              }\n            } else {\n              var P = w(t);\n              this.emit(\"usernotice\", P);\n            }\n          } else {\n            var b = w(t);\n            this.emit(\"notice\", b);\n          }\n        } else {\n          var C = u(t);\n          this.emit(\"part\", {\n            channel: C\n          });\n        }\n      } else {\n        var T = u(t);\n        this.emit(\"join\", {\n          channel: T\n        });\n      }\n    } else {\n      var y = function (e) {\n        var t = e.raw,\n            r = e.trailing,\n            n = e.tags,\n            s = e.prefix.name,\n            a = m(r);\n        return {\n          raw: t,\n          message: a ? c(r) : r,\n          channel: u(e),\n          user: s,\n\n          get tags() {\n            return v(n);\n          },\n\n          isAction: a\n        };\n      }(t);\n\n      this.emit(\"message\", y);\n    }\n  }, p._connectInNode = function () {\n    var e = this,\n        n = \"irc.chat.twitch.tv\",\n        s = this.options.secure ? 6697 : 6667;\n    return new Promise(function (a, i) {\n      e._connecting = !0;\n\n      var o = function o() {\n        e._connecting = !1, e._connected = !0, e.emit(\"connect\"), a();\n      };\n\n      e.options.secure ? e.socket = t.connect(s, n, {}, o) : (e.socket = new r.Socket(), e.socket.connect(s, n, o)), e.socket.on(\"error\", function (t) {\n        e._connected = !1, e._connecting = !1, e.emit(\"disconnect\", t), i(t);\n      }), e.socket.on(\"data\", function (t) {\n        e.receiveRaw(t.toString());\n      }), e.socket.on(\"close\", function () {\n        e._connected = !1, e._connecting = !1, e._registered = !1, e.emit(\"disconnect\");\n      });\n    });\n  }, p._connectInBrowser = function () {\n    var e = this,\n        t = this.options.secure ? \"wss://irc-ws.chat.twitch.tv:443\" : \"ws://irc-ws.chat.twitch.tv:80\";\n    return new Promise(function (r, n) {\n      e._connecting = !0, e.socket = new WebSocket(t), e.socket.onopen = function () {\n        e._connected = !0, e._connecting = !1, e.emit(\"connect\"), r();\n      }, e.socket.onmessage = function (t) {\n        return e.receiveRaw(t.data);\n      }, e.socket.onerror = function () {}, e.socket.onclose = function (t) {\n        var r = t.wasClean,\n            s = t.code,\n            a = t.reason;\n        if (e.socket = null, e._connected = !1, e._connecting = !1, e._registered = !1, r) e.emit(\"disconnect\");else {\n          var i = new Error(\"[\" + s + \"] \" + a);\n          e.emit(\"disconnect\", i), n(i);\n        }\n      };\n    });\n  }, p._register = function () {\n    var e = this;\n    if (!this._connected) return Promise.reject();\n    if (this._registered) return Promise.resolve();\n    var t = this.options,\n        r = t.auth,\n        n = t.name || o(),\n        s = r ? \"oauth:\" + r : \"SCHMOOPIIE\";\n    return this.sendRaw(\"CAP REQ :twitch.tv/tags twitch.tv/commands\"), this.sendRaw(\"PASS \" + s), this.sendRaw(\"NICK \" + n), new Promise(function (t, r) {\n      var n = function r() {\n        t(), e.off(\"register\", r);\n      };\n\n      e.on(\"register\", n), setTimeout(function () {\n        r(), e.off(\"register\", n);\n      }, 1e4);\n    });\n  }, p._updateGlobalUserState = function (e) {\n    this.globalUserState = a({}, this.globalUserState, {}, e);\n  }, p._updateUserState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      userState: t\n    }), r));\n  }, p._updateRoomState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      roomState: t\n    }), r));\n  }, (l = [{\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"registered\",\n    get: function get() {\n      return this._registered;\n    }\n  }]) && function (e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var n = t[r];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }(g.prototype, l), g;\n}(n.EventEmitter);\n\n(R = exports.UserNoticeType || (exports.UserNoticeType = {})).sub = \"sub\", R.resub = \"resub\", R.subgift = \"subgift\", R.anonsubgift = \"anonsubgift\", R.submysterygift = \"submysterygift\", R.giftpaidupgrade = \"giftpaidupgrade\", R.rewardgift = \"rewardgift\", R.anongiftpaidupgrade = \"anongiftpaidupgrade\", R.raid = \"raid\", R.unraid = \"unraid\", R.ritual = \"ritual\", R.bitsbadgetier = \"bitsbadgetier\", exports.Client = P, exports.getChannelFromMessage = u, exports.getIsAction = m, exports.getRandomUsername = o, exports.isNode = d, exports.normalizeActionMessage = c, exports.parseMessageTags = v;","import * as R from 'ramda';\n\nimport * as api from 'api';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport { EmotesByText } from 'features/chat/utils/getEmotesByText';\n\n// by id\n\nconst findTwitchEmoteByIdInSets = (\n  id: number,\n  sets: Record<string, api.TwitchEmote[]>,\n) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const set of Object.values(sets)) {\n    const result = R.find(R.propEq('id', id), set);\n\n    if (result) return htmlEntity.createTwitchEmote(result);\n  }\n\n  return null;\n};\n\nconst findTwitchEmoteById = (\n  id: number,\n  { twitchGlobal, twitchUser }: NonNullable<StateEmotes>,\n) =>\n  findTwitchEmoteByIdInSets(id, twitchGlobal) ||\n  findTwitchEmoteByIdInSets(id, twitchUser);\n\nconst findBttvEmoteById = (\n  id: string,\n  { bttvGlobal, bttvChannel }: NonNullable<StateEmotes>,\n) => {\n  const findById = R.find<api.BttvGlobalEmote | api.BttvChannelEmote>(\n    R.propEq('id', id),\n  );\n  const result = findById(bttvGlobal) || findById(bttvChannel);\n\n  return result ? htmlEntity.createBttvEmote(result) : null;\n};\n\nconst findFfzEmoteById = (\n  id: number,\n  { ffzGlobal, ffzChannel }: NonNullable<StateEmotes>,\n) => {\n  const findById = R.find<api.FfzEmote>(R.propEq('id', id));\n  const result = findById(ffzGlobal) || findById(ffzChannel);\n\n  return result ? htmlEntity.createFfzEmote(result) : null;\n};\n\n// by name\n\nconst regexMap: Record<number, string> = {\n  4: '>\\\\(', // '\\\\&gt\\\\;\\\\('\n  9: '<3', // '\\\\&lt\\\\;3'\n};\n\nconst findTwitchEmoteByNameInSets = (\n  name: string,\n  sets: Record<string, api.TwitchEmote[]>,\n) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const set of Object.values(sets)) {\n    const result = R.find(({ id, code }) => {\n      // 1-14 - match by regex\n      if (id >= 1 && id <= 14) {\n        const regexString = regexMap[id] || code;\n        return RegExp(`^${regexString}$`).test(name);\n      }\n\n      return name === code;\n    }, set);\n\n    if (result) return htmlEntity.createTwitchEmote(result);\n  }\n\n  return null;\n};\n\nconst findTwitchEmoteByName = (\n  name: string,\n  { twitchGlobal, twitchUser }: NonNullable<StateEmotes>,\n) =>\n  findTwitchEmoteByNameInSets(name, twitchGlobal) ||\n  findTwitchEmoteByNameInSets(name, twitchUser);\n\nconst findBttvEmoteByName = (\n  name: string,\n  { bttvGlobal, bttvChannel }: NonNullable<StateEmotes>,\n) => {\n  const findByName = R.find<api.BttvGlobalEmote | api.BttvChannelEmote>(\n    R.propEq('code', name),\n  );\n  const result = findByName(bttvGlobal) || findByName(bttvChannel);\n\n  return result ? htmlEntity.createBttvEmote(result) : null;\n};\n\nconst findFfzEmoteByName = (\n  name: string,\n  { ffzGlobal, ffzChannel }: NonNullable<StateEmotes>,\n) => {\n  const findByName = R.find<api.FfzEmote>(R.propEq('name', name));\n  const result = findByName(ffzGlobal) || findByName(ffzChannel);\n\n  return result ? htmlEntity.createFfzEmote(result) : null;\n};\n\n// by text\n\n/* eslint-disable no-restricted-syntax */\nconst findTwitchEmotesByText = (\n  result: EmotesByText,\n  sets: Record<string, api.TwitchEmote[]>,\n  text: string,\n  limit: number,\n): boolean => {\n  for (const items of Object.values(sets)) {\n    for (const emote of items) {\n      if (result.begins.length + result.contains.length === limit) return true;\n\n      const index = emote.code.toLowerCase().indexOf(text);\n\n      if (index !== -1) {\n        const type = index === 0 ? 'begins' : 'contains';\n\n        result[type].push(htmlEntity.createTwitchEmote(emote));\n      }\n    }\n  }\n\n  return false;\n};\n\nconst findBttvEmotesByText = (\n  result: EmotesByText,\n  bttv: api.BttvGlobalEmote[] | api.BttvChannelEmote[],\n  text: string,\n  limit: number,\n): boolean => {\n  for (const emote of bttv) {\n    if (result.begins.length + result.contains.length === limit) return true;\n\n    const index = emote.code.toLowerCase().indexOf(text);\n\n    if (index !== -1) {\n      const type = index === 0 ? 'begins' : 'contains';\n\n      result[type].push(htmlEntity.createBttvEmote(emote));\n    }\n  }\n\n  return false;\n};\n\nconst findFfzEmotesByText = (\n  result: EmotesByText,\n  ffz: api.FfzEmote[],\n  text: string,\n  limit: number,\n): boolean => {\n  for (const emote of ffz) {\n    if (result.begins.length + result.contains.length === limit) return true;\n\n    const index = emote.name.toLowerCase().indexOf(text);\n\n    if (index !== -1) {\n      const type = index === 0 ? 'begins' : 'contains';\n\n      result[type].push(htmlEntity.createFfzEmote(emote));\n    }\n  }\n\n  return false;\n};\n/* eslint-enable no-restricted-syntax */\n\nconst findEmote = {\n  twitch: {\n    byId: findTwitchEmoteById,\n    byName: findTwitchEmoteByName,\n    byText: findTwitchEmotesByText,\n  },\n  bttv: {\n    byId: findBttvEmoteById,\n    byName: findBttvEmoteByName,\n    byText: findBttvEmotesByText,\n  },\n  ffz: {\n    byId: findFfzEmoteById,\n    byName: findFfzEmoteByName,\n    byText: findFfzEmotesByText,\n  },\n};\n\nexport default findEmote;\n","import { API_REQUESTS_TIMEOUT } from 'utils/constants';\n\nexport interface FetchRequestOptions extends RequestInit {\n  timeout?: number;\n}\n\nconst fetchRequest = async (\n  url: string,\n  { timeout, ...restOptions }: FetchRequestOptions = {},\n) => {\n  let options = { ...restOptions };\n  const fetchTimeout = timeout || API_REQUESTS_TIMEOUT;\n\n  if (fetchTimeout) {\n    const controller = new AbortController();\n\n    options = { ...options, signal: controller.signal };\n\n    setTimeout(() => controller.abort(), fetchTimeout);\n  }\n\n  const response = await fetch(url, options);\n\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  const body = await response.json();\n\n  return body;\n};\n\nexport default fetchRequest;\n","import { LS_ACCESS_TOKEN } from 'utils/constants';\nimport fetchRequest, { FetchRequestOptions } from 'utils/fetchRequest';\n\nconst TWITCH_API_HELIX = 'https://api.twitch.tv/helix';\nconst TWITCH_API_KRAKEN = 'https://api.twitch.tv/kraken';\n\nconst getHelixHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem(LS_ACCESS_TOKEN)}`,\n});\n\nconst getKrakenHeaders = () => ({\n  Accept: 'application/vnd.twitchtv.v5+json',\n  'Client-ID': process.env.REACT_APP_TWITCH_API_CLIENT_ID,\n  Authorization: `OAuth ${localStorage.getItem(LS_ACCESS_TOKEN)}`,\n});\n\nconst apiRequestHelix = (url: string, options?: FetchRequestOptions) =>\n  fetchRequest(`${TWITCH_API_HELIX}${url}`, {\n    ...options,\n    headers: getHelixHeaders(),\n  } as FetchRequestOptions);\n\nconst apiRequestKraken = (url: string, options?: FetchRequestOptions) =>\n  fetchRequest(`${TWITCH_API_KRAKEN}${url}`, {\n    ...options,\n    headers: getKrakenHeaders(),\n  } as FetchRequestOptions);\n\nexport interface TwitchUser {\n  id: string;\n  login: string;\n  display_name: string;\n  type: string;\n  broadcaster_type: string;\n  description: string;\n  profile_image_url: string;\n  offline_image_url: string;\n  view_count: number;\n}\n\nexport interface TwitchUsersResponse {\n  data: TwitchUser[];\n}\n\nexport interface TwitchEmote {\n  id: number;\n  code: string;\n}\n\nexport interface TwitchEmotesResponse {\n  emoticon_sets: Record<string, TwitchEmote[]>;\n}\n\nexport interface TwitchBadgeVersion {\n  image_url_1x: string;\n  image_url_2x: string;\n  image_url_4x: string;\n  description: string;\n  title: string;\n  click_action: string;\n  click_url: string;\n  last_updated: null;\n}\n\nexport interface TwitchBadge {\n  versions: Record<string, TwitchBadgeVersion>;\n}\n\nexport interface TwitchBadgesResponse {\n  badge_sets: Record<string, TwitchBadge>;\n}\n\nexport interface TwitchBlockedUser {\n  display_name: string;\n  _id: string;\n  name: string;\n  type: string;\n  bio: string | null;\n  created_at: string;\n  updated_at: string;\n  logo: string;\n}\n\nexport interface TwitchBlockedUsersResponse {\n  _total: number;\n  blocks: {\n    user: TwitchBlockedUser;\n  }[];\n}\n\nexport const fetchUser = (userId: string): Promise<TwitchUsersResponse> =>\n  apiRequestHelix(`/users?id=${userId}`);\n\nexport const fetchTwitchEmotes = (\n  userId: string,\n): Promise<TwitchEmotesResponse> => apiRequestKraken(`/users/${userId}/emotes`);\n\nexport const fetchGlobalBadges = (\n  language = 'en',\n): Promise<TwitchBadgesResponse> =>\n  fetchRequest(\n    `https://badges.twitch.tv/v1/badges/global/display?language=${language}`,\n  );\n\nexport const fetchChannelBadges = (\n  channelId: string,\n  language = 'en',\n): Promise<TwitchBadgesResponse> =>\n  fetchRequest(\n    `https://badges.twitch.tv/v1/badges/channels/${channelId}/display?language=${language}`,\n  );\n\nexport const fetchBlockedUsers = (\n  userId: string,\n): Promise<TwitchBlockedUsersResponse> =>\n  apiRequestKraken(`/users/${userId}/blocks`);\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface BttvEmote {\n  id: string;\n  code: string;\n  imageType: 'png' | 'gif';\n}\n\nexport interface BttvGlobalEmote extends BttvEmote {\n  userId: string;\n}\n\nexport interface BttvChannelEmote extends BttvEmote {\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n    providerId: string;\n  };\n}\n\nexport type BttvGlobalEmotesResponse = BttvGlobalEmote[];\n\nexport interface BttvChannelEmotesResponse {\n  id: string;\n  bots: string[];\n  channelEmotes: BttvChannelEmote[];\n  sharedEmotes: BttvChannelEmote[];\n}\n\nexport const fetchBttvGlobalEmotes = (): Promise<BttvGlobalEmotesResponse> =>\n  fetchRequest('https://api.betterttv.net/3/cached/emotes/global');\n\nexport const fetchBttvChannelEmotes = (\n  channelId: string,\n): Promise<BttvChannelEmotesResponse> =>\n  fetchRequest(`https://api.betterttv.net/3/cached/users/twitch/${channelId}`);\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface FfzEmote {\n  css: null;\n  height: number;\n  hidden: boolean;\n  id: number;\n  margins: null;\n  modifier: boolean;\n  name: string;\n  offset: null;\n  owner: {\n    _id: number;\n    display_name: string;\n    name: string;\n  };\n  public: boolean;\n  urls: {\n    '1': string;\n    '2'?: string;\n    '4'?: string;\n  };\n  width: number;\n}\n\ninterface FfzEmoteSet {\n  _type: number;\n  css: null;\n  description: null;\n  emoticons: FfzEmote[];\n  icon: null;\n  id: number;\n  title: string;\n}\n\nexport interface FfzGlobalEmotesResponse {\n  default_sets: number[];\n  sets: Record<string, FfzEmoteSet>;\n  users: Record<string, string[]>;\n}\n\nexport interface FfzChannelEmotesResponse {\n  room: {\n    _id: number;\n    css: null;\n    display_name: string;\n    id: string;\n    is_group: boolean;\n    mod_urls: null;\n    moderator_badge: null;\n    set: number;\n    twitch_id: number;\n    user_badges: {};\n  };\n  sets: Record<string, FfzEmoteSet>;\n}\n\nexport const fetchFfzGlobalEmotes = (): Promise<FfzGlobalEmotesResponse> =>\n  fetchRequest('https://api.frankerfacez.com/v1/set/global');\n\nexport const fetchFfzChannelEmotes = (\n  channelId: string,\n): Promise<FfzChannelEmotesResponse> =>\n  fetchRequest(`https://api.frankerfacez.com/v1/room/id/${channelId}`);\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface ChatHistoryResponse {\n  messages: string[];\n  error: null;\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchChatHistory = (\n  channel: string,\n): Promise<ChatHistoryResponse> =>\n  fetchRequest(\n    `https://recent-messages.robotty.de/api/v2/recent-messages/${channel}?clearchatToNotice=true`,\n  );\n","export * from './twitch';\nexport * from './bttv';\nexport * from './ffz';\nexport * from './chatHistory';\n","import { RootState } from 'app/rootReducer';\n\ntype OptionItem = {\n  type: 'switch' | 'input';\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  value: boolean | string;\n};\n\ntype OptionCategories = {\n  title: string;\n  items: OptionItem[];\n};\n\nexport const optionsSelector = (state: RootState): OptionCategories[] => [\n  {\n    title: 'My preferences',\n    items: [\n      {\n        type: 'switch',\n        id: 'show-timestamps',\n        name: 'showTimestamps',\n        title: 'Show Timestamps',\n        description: '',\n        value: state.options.showTimestamps,\n      },\n      {\n        type: 'switch',\n        id: 'split-chat',\n        name: 'splitChat',\n        title: 'Split Chat',\n        description: '',\n        value: state.options.splitChat,\n      },\n      {\n        type: 'switch',\n        id: 'fixed-width',\n        name: 'fixedWidth',\n        title: 'Fixed Width',\n        description: '',\n        value: state.options.fixedWidth,\n      },\n      // {\n      //   type: 'input',\n      //   id: 'blacklist-keywords',\n      //   name: 'blacklistKeywords',\n      //   title: 'Set Blacklist Keywords',\n      //   description: '',\n      //   value: state.options.blacklistKeywords,\n      // },\n      // {\n      //   type: 'input',\n      //   id: 'highlight-keywords',\n      //   name: 'highlightKeywords',\n      //   title: 'Set Highlight Keywords',\n      //   description: '',\n      //   value: state.options.highlightKeywords,\n      // },\n    ],\n  },\n];\n\nexport const isShowTimestampsSelector = (state: RootState) =>\n  state.options.showTimestamps;\n\nexport const isSplitChatSelector = (state: RootState) =>\n  state.options.splitChat;\n\nexport const isFixedWidthSelector = (state: RootState) =>\n  state.options.fixedWidth;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport jwt from 'jsonwebtoken';\n\nimport {\n  isAuthReadySelector,\n  initializeAuth,\n  fetchUser,\n} from 'features/auth/authSlice';\nimport { readUserFromLocatStorage } from 'features/auth/authUtils';\n\nconst useInitializeAuth = () => {\n  const dispatch = useDispatch();\n  const isAuthReady = useSelector(isAuthReadySelector);\n\n  useEffect(() => {\n    if (isAuthReady) return;\n\n    const { idToken } = localStorage;\n    const user = readUserFromLocatStorage();\n\n    if (!idToken) {\n      dispatch(initializeAuth({ isAuth: false }));\n      return;\n    }\n\n    if (user) {\n      const { id, login } = user;\n      const params = { isAuth: true, userId: id, userLogin: login };\n\n      dispatch(initializeAuth(params));\n    } else {\n      const jwtData = jwt.decode(idToken);\n\n      if (jwtData) {\n        dispatch(fetchUser(jwtData.sub));\n      } else {\n        dispatch(initializeAuth({ isAuth: false }));\n      }\n    }\n  }, [dispatch, isAuthReady]);\n};\n\nexport default useInitializeAuth;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  isAuthReadySelector,\n  isAuthSelector,\n  userIdSelector,\n} from 'features/auth/authSlice';\nimport {\n  currentChannelSelector,\n  currentChannelIdSelector,\n  isHistoryAddedSelector,\n  isHistoryLoadedSelector,\n  isTwitchEmotesLoadedSelector,\n  isBttvGlobalEmotesLoadedSelector,\n  isBttvChannelEmotesLoadedSelector,\n  isFfzGlobalEmotesLoadedSelector,\n  isFfzChannelEmotesLoadedSelector,\n  isGlobalBadgesLoadedSelector,\n  isChannelBadgesLoadedSelector,\n  isBlockedUsersLoadedSelector,\n} from 'features/chat/selectors';\nimport {\n  addChatHistory,\n  fetchChatHistory,\n  fetchTwitchEmotes,\n  fetchBttvGlobalEmotes,\n  fetchBttvChannelEmotes,\n  fetchFfzGlobalEmotes,\n  fetchFfzChannelEmotes,\n  fetchChannelBadges,\n  fetchGlobalBadges,\n  fetchBlockedUsers,\n} from 'features/chat/slice';\n\nconst useFetchChatData = () => {\n  const dispatch = useDispatch();\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n  const userId = useSelector(userIdSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const currentChannelId = useSelector(currentChannelIdSelector);\n\n  const isTwitchEmotesLoaded = useSelector(isTwitchEmotesLoadedSelector);\n  const isBttvGlobalEmotesLoaded = useSelector(\n    isBttvGlobalEmotesLoadedSelector,\n  );\n  const isBttvChannelEmotesLoaded = useSelector(\n    isBttvChannelEmotesLoadedSelector,\n  );\n  const isFfzGlobalEmotesLoaded = useSelector(isFfzGlobalEmotesLoadedSelector);\n  const isFfzChannelEmotesLoaded = useSelector(\n    isFfzChannelEmotesLoadedSelector,\n  );\n  const isGlobalBadgesLoaded = useSelector(isGlobalBadgesLoadedSelector);\n  const isChannelBadgesLoaded = useSelector(isChannelBadgesLoadedSelector);\n  const isHistoryLoaded = useSelector(isHistoryLoadedSelector);\n  const isBlockedUsersLoaded = useSelector(isBlockedUsersLoadedSelector);\n  const isHistoryAdded = useSelector(isHistoryAddedSelector);\n\n  const isReadyToAddHistory =\n    isAuthReady &&\n    currentChannel &&\n    !isHistoryAdded &&\n    (isAuth ? isTwitchEmotesLoaded : true) &&\n    (isAuth ? isBlockedUsersLoaded : true) &&\n    isBttvGlobalEmotesLoaded &&\n    isBttvChannelEmotesLoaded &&\n    isFfzGlobalEmotesLoaded &&\n    isFfzChannelEmotesLoaded &&\n    isGlobalBadgesLoaded &&\n    isChannelBadgesLoaded &&\n    isHistoryLoaded;\n\n  useEffect(() => {\n    dispatch(fetchBttvGlobalEmotes());\n    dispatch(fetchFfzGlobalEmotes());\n    dispatch(fetchGlobalBadges());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isReadyToAddHistory) {\n      dispatch(addChatHistory(currentChannel));\n    }\n  }, [dispatch, currentChannel, isReadyToAddHistory]);\n\n  useEffect(() => {\n    if (!isHistoryAdded && currentChannel) {\n      dispatch(fetchChatHistory(currentChannel));\n    }\n  }, [dispatch, currentChannel, isHistoryAdded]);\n\n  useEffect(() => {\n    if (isAuthReady && isAuth && userId) {\n      dispatch(fetchTwitchEmotes(userId));\n      dispatch(fetchBlockedUsers(userId));\n    }\n  }, [dispatch, isAuthReady, isAuth, userId]);\n\n  // TODO: check if emotes and badges is already in the store\n\n  useEffect(() => {\n    if (currentChannel && currentChannelId) {\n      dispatch(fetchBttvChannelEmotes(currentChannel, currentChannelId));\n      dispatch(fetchFfzChannelEmotes(currentChannel, currentChannelId));\n      dispatch(fetchChannelBadges(currentChannel, currentChannelId));\n    }\n  }, [dispatch, currentChannel, currentChannelId]);\n};\n\nexport default useFetchChatData;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { LS_LAST_CHANNEL } from 'utils/constants';\nimport { updateCurrentChannel } from 'features/chat/slice';\n\n// TODO: remove lastChannel if can't connect to the channel\n\nconst useCurrentChannel = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { hash } = history.location;\n\n  useEffect(() => {\n    if (hash && hash.length > 1) {\n      const channel = hash.slice(1);\n\n      dispatch(updateCurrentChannel(channel));\n\n      localStorage.setItem(LS_LAST_CHANNEL, channel);\n\n      document.title = channel\n        ? `#${channel} - ${process.env.REACT_APP_NAME} `\n        : (process.env.REACT_APP_NAME as string);\n\n      return;\n    }\n\n    const lastChannel = localStorage.getItem(LS_LAST_CHANNEL);\n\n    if (lastChannel) {\n      history.push({ pathname: '/chat/', hash: lastChannel });\n\n      dispatch(updateCurrentChannel(lastChannel));\n    } else {\n      dispatch(updateCurrentChannel(''));\n    }\n  }, [dispatch, history, hash]);\n};\n\nexport default useCurrentChannel;\n","import { useEffect, useRef } from 'react';\n\nconst usePrevious = <T>(state: T): T | undefined => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n};\n\nexport default usePrevious;\n","import { lib as emojilib } from 'emojilib';\n\nconst replaceEmojis = (text: string): string =>\n  text\n    .split(' ')\n    .map((word: string) => {\n      if (word[0] !== ':' || word[word.length - 1] !== ':') {\n        return word;\n      }\n\n      const name = word.slice(1, -1);\n      const emoji = emojilib[name];\n\n      return emoji && emoji.char ? emoji.char : word;\n    })\n    .join(' ');\n\nexport default replaceEmojis;\n","import { useEffect, useRef, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport usePrevious from 'hooks/usePrevious';\nimport { NOTICE_MESSAGE_TAGS, LS_ACCESS_TOKEN } from 'utils/constants';\nimport {\n  addMessage,\n  clearChat,\n  updateIsConnected,\n  updateGlobalUserParams,\n  updateUserParams,\n  updateRoomParams,\n  addOwnMessage,\n} from 'features/chat/slice';\nimport {\n  currentChannelSelector,\n  isConnectedSelector,\n} from 'features/chat/selectors';\nimport replaceEmojis from 'features/chat/utils/replaceEmojis';\nimport {\n  isAuthSelector,\n  isAuthReadySelector,\n  userLoginSelector,\n  invalidateAuth,\n} from 'features/auth/authSlice';\n\nconst useTwitchClient = () => {\n  const dispatch = useDispatch();\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n  const userLogin = useSelector(userLoginSelector);\n  const isConnected = useSelector(isConnectedSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const prevChannel = usePrevious(currentChannel);\n  const clientRef = useRef<twitchIrc.Client | null>(null);\n\n  const registerEvents = useCallback(\n    (client: typeof clientRef) => {\n      if (!client.current) return;\n\n      const handleRegister = () => dispatch(updateIsConnected(true));\n\n      const handleDisconnect = () => dispatch(updateIsConnected(false));\n\n      const handleGlobalUserState = (data: twitchIrc.GlobalUserStateEvent) =>\n        dispatch(updateGlobalUserParams(data));\n\n      const handleUserState = (data: twitchIrc.UserStateEvent) =>\n        dispatch(updateUserParams(data));\n\n      const handleRoomState = (data: twitchIrc.RoomStateEvent) =>\n        dispatch(updateRoomParams(data));\n\n      const handleMessage = (message: twitchIrc.MessageEvent) =>\n        dispatch(addMessage({ type: 'message', message }));\n\n      const handleNotice = (message: twitchIrc.NoticeEvent) => {\n        if (\n          client.current &&\n          message.message === 'Login authentication failed'\n        ) {\n          dispatch(invalidateAuth());\n          client.current.disconnect();\n          // eslint-disable-next-line no-param-reassign\n          client.current = null;\n          return;\n        }\n\n        dispatch(addMessage({ type: 'notice', message, id: uuid() }));\n      };\n\n      const handleUserNotice = (message: twitchIrc.UserNoticeEvent) =>\n        dispatch(addMessage({ type: 'user-notice', message }));\n\n      const handleClearChat = (data: twitchIrc.ClearChatEvent) => {\n        if (!data.tags.targetUserId) return;\n        dispatch(clearChat(data));\n      };\n\n      client.current.on('register', handleRegister);\n      client.current.on('disconnect', handleDisconnect);\n      client.current.on('globaluserstate', handleGlobalUserState);\n      client.current.on('userstate', handleUserState);\n      client.current.on('roomstate', handleRoomState);\n      client.current.on('message', handleMessage);\n      client.current.on('notice', handleNotice);\n      client.current.on('usernotice', handleUserNotice);\n      client.current.on('clearchat', handleClearChat);\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.disconnect();\n        clientRef.current = null;\n      }\n    };\n  }, [clientRef]);\n\n  useEffect(() => {\n    if (!currentChannel || !isAuthReady) return;\n\n    if (!clientRef.current) {\n      const options = isAuth\n        ? {\n            name: userLogin as string,\n            auth: localStorage.getItem(LS_ACCESS_TOKEN) as string,\n          }\n        : null;\n\n      (async () => {\n        clientRef.current = new twitchIrc.Client(options);\n\n        registerEvents(clientRef);\n\n        await clientRef.current.connect();\n\n        clientRef.current.join(currentChannel);\n      })();\n\n      return;\n    }\n\n    if (prevChannel && prevChannel !== currentChannel) {\n      clientRef.current.part(prevChannel);\n      clientRef.current.join(currentChannel);\n    }\n  }, [\n    dispatch,\n    registerEvents,\n    isAuth,\n    isAuthReady,\n    isConnected,\n    userLogin,\n    currentChannel,\n    prevChannel,\n  ]);\n\n  const client = () => ({\n    say(channel: string, message: string) {\n      if (!clientRef.current || !message.trim()) return;\n\n      const normalizedMessage = replaceEmojis(message.trim());\n\n      clientRef.current.say(channel, normalizedMessage);\n\n      function handleUserState(data: twitchIrc.UserStateEvent) {\n        if (data.channel === channel) {\n          dispatch(\n            addOwnMessage({\n              message: normalizedMessage,\n              channel,\n              tags: data.tags,\n            }),\n          );\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function handleNotice(data: twitchIrc.NoticeEvent) {\n        if (\n          data.channel === channel &&\n          NOTICE_MESSAGE_TAGS.includes(data.tags.msgId)\n        ) {\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function removeListeners() {\n        if (!clientRef.current) return;\n\n        clientRef.current.off('notice', handleNotice);\n        clientRef.current.off('userstate', handleUserState);\n      }\n\n      clientRef.current.on('notice', handleNotice);\n      clientRef.current.on('userstate', handleUserState);\n\n      setTimeout(() => removeListeners(), 10000);\n    },\n  });\n\n  return useMemo(client, [clientRef, dispatch]);\n};\n\nexport default useTwitchClient;\n","import { useCallback, useState } from 'react';\n\nconst useSetState = <T extends object>(\n  initialState: T = {} as T,\n): [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void] => {\n  const [state, set] = useState<T>(initialState);\n  const setState = useCallback(\n    (patch) => {\n      set((prevState) => ({\n        ...prevState,\n        ...(patch instanceof Function ? patch(prevState) : patch),\n      }));\n    },\n    [set],\n  );\n\n  return [state, setState];\n};\n\nexport default useSetState;\n","const getUsersByBeginText = (\n  beginText: string,\n  users: string[],\n  limit = 5,\n): string[] => {\n  const result = [];\n  const beginTextLower = beginText.toLowerCase();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const name of users) {\n    if (result.length === limit) return result;\n\n    const nameLower = name.toLowerCase();\n\n    if (beginTextLower === '' || nameLower.startsWith(beginTextLower)) {\n      result.push(name);\n    }\n  }\n\n  return result;\n};\n\nexport default getUsersByBeginText;\n","import { useRef, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport useSetState from 'hooks/useSetState';\nimport { SUGGESTION_TYPES } from 'utils/constants';\nimport getUsersByBeginText from 'features/chat/utils/getUsersByBeginText';\nimport getEmotesByText from 'features/chat/utils/getEmotesByText';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { usersSelector, emotesSelector } from 'features/chat/selectors';\n\ninterface ASuggestions {\n  isActive: boolean;\n  activeIndex: number;\n  start: number;\n  end: number;\n}\ninterface UserSuggestions extends ASuggestions {\n  type: 'users';\n  items: string[];\n}\ninterface EmoteSuggestions extends ASuggestions {\n  type: 'emotes';\n  items: htmlEntity.Emote[];\n}\nexport type SuggestionsState = UserSuggestions | EmoteSuggestions;\n\nconst suggestionsInitialState: SuggestionsState = {\n  type: 'users',\n  isActive: false,\n  items: [],\n  activeIndex: 0,\n  start: 0,\n  end: 0,\n};\n\nconst setSuggestionsIndexUp = ({\n  activeIndex,\n  items,\n  ...rest\n}: SuggestionsState) =>\n  ({\n    activeIndex: activeIndex === 0 ? items.length - 1 : activeIndex - 1,\n    items,\n    ...rest,\n  } as SuggestionsState);\n\nconst setSuggestionsIndexDown = ({\n  activeIndex,\n  items,\n  ...rest\n}: SuggestionsState) =>\n  ({\n    activeIndex: activeIndex === items.length - 1 ? 0 : activeIndex + 1,\n    items,\n    ...rest,\n  } as SuggestionsState);\n\nconst replaceSuggestionText = (\n  text: string,\n  { type, items, activeIndex, start, end }: SuggestionsState,\n) => {\n  if (items.length === 0) return text;\n\n  const currentItem = items[activeIndex];\n  const insertedText =\n    type === 'users'\n      ? `@${currentItem}`\n      : (currentItem as htmlEntity.Emote).alt;\n\n  const textBefore = text.substring(0, start);\n  const testAfter = text.substring(end) || ' ';\n\n  return `${textBefore}${insertedText}${testAfter}`;\n};\n\nconst useChatInput = (\n  setText: (value: React.SetStateAction<string>) => void,\n  onSendMessage: () => void,\n  chatInputRef: React.RefObject<HTMLElement>,\n) => {\n  const [suggestions, setSuggestions] = useSetState<SuggestionsState>(\n    suggestionsInitialState,\n  );\n\n  const emotes = useSelector(emotesSelector);\n  const users = useSelector(usersSelector);\n\n  const usersRef = useRef(users);\n  usersRef.current = users;\n  const emotesRef = useRef(emotes);\n  emotesRef.current = emotes;\n  const suggestionsRef = useRef(suggestions);\n  suggestionsRef.current = suggestions;\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const { value, selectionStart } = e.target;\n\n      setText(value);\n\n      const spaceIndexBefore = value.lastIndexOf(' ', selectionStart - 1);\n      const spaceIndexAfter = value.indexOf(' ', selectionStart);\n\n      const start = spaceIndexBefore === -1 ? 0 : spaceIndexBefore + 1;\n      const end = spaceIndexAfter === -1 ? value.length : spaceIndexAfter;\n\n      const word = value.substring(start, end);\n\n      const usersMatch = SUGGESTION_TYPES.users.regex.exec(word);\n\n      if (usersMatch) {\n        const [, beginText] = usersMatch;\n        const items = getUsersByBeginText(\n          beginText,\n          usersRef.current,\n          SUGGESTION_TYPES.users.limit,\n        );\n\n        setSuggestions({\n          type: 'users',\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      const emotesMatch = SUGGESTION_TYPES.emotes.regex.exec(word);\n\n      if (emotesMatch && emotesRef.current) {\n        const [, text] = emotesMatch;\n        const items = getEmotesByText(\n          text,\n          emotesRef.current,\n          SUGGESTION_TYPES.emotes.limit,\n        );\n\n        setSuggestions({\n          type: 'emotes',\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      if (suggestionsRef.current.isActive) {\n        setSuggestions(suggestionsInitialState);\n      }\n    },\n    [setText, setSuggestions, suggestionsRef],\n  );\n\n  const handleKeyUp = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {},\n    [],\n  );\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (suggestionsRef.current.isActive) {\n        if (e.key === 'Enter' || e.key === 'Tab') {\n          e.preventDefault();\n          setText((t) => replaceSuggestionText(t, suggestionsRef.current));\n          setSuggestions(suggestionsInitialState);\n\n          return;\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexUp);\n          return;\n        }\n\n        if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexDown);\n          return;\n        }\n\n        if (e.key === 'Escape') {\n          setSuggestions({ isActive: false });\n          return;\n        }\n      }\n\n      if (!suggestionsRef.current.isActive) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          onSendMessage();\n        }\n      }\n    },\n    [onSendMessage, setText, setSuggestions, suggestionsRef],\n  );\n\n  const handleSuggestionMouseEnter = useCallback(\n    (activeIndex: number) => setSuggestions({ activeIndex }),\n    [setSuggestions],\n  );\n\n  const handleSuggestionClick = useCallback(\n    (activeIndex: number) => {\n      setText((t) =>\n        replaceSuggestionText(t, { ...suggestionsRef.current, activeIndex }),\n      );\n\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n\n      setSuggestions(suggestionsInitialState);\n    },\n    [setText, setSuggestions, chatInputRef],\n  );\n\n  const handleBlur = useCallback(() => {\n    setSuggestions({ isActive: false });\n  }, [setSuggestions]);\n\n  return {\n    suggestions,\n    handleChange,\n    handleKeyUp,\n    handleKeyDown,\n    handleBlur,\n    handleSuggestionMouseEnter,\n    handleSuggestionClick,\n  };\n};\n\nexport default useChatInput;\n","import { useEffect } from 'react';\nimport arePassiveEventsSupported from 'are-passive-events-supported';\nimport useLatest from 'use-latest';\n\nconst MOUSEDOWN = 'mousedown';\nconst TOUCHSTART = 'touchstart';\n\ntype HandledEvents = [typeof MOUSEDOWN, typeof TOUCHSTART];\ntype HandledEventsType = HandledEvents[number];\ntype PossibleEvent = {\n  [Type in HandledEventsType]: HTMLElementEventMap[Type];\n}[HandledEventsType];\ntype Handler = (event: PossibleEvent) => void;\n\nconst events: HandledEvents = [MOUSEDOWN, TOUCHSTART];\n\nconst arePassiveEvents = arePassiveEventsSupported();\n\nconst getOptions = (event: HandledEventsType) =>\n  event === MOUSEDOWN && arePassiveEvents ? { passive: true } : undefined;\n\nconst isContainsNode = (el: HTMLElement | null, node: Node) =>\n  el && el.contains(node);\n\nconst useOnClickOutside = (\n  ref:\n    | React.RefObject<HTMLElement>\n    | React.RefObject<React.RefObject<HTMLElement>[]>,\n  handler: Handler | null,\n) => {\n  const handlerRef = useLatest(handler);\n\n  useEffect(() => {\n    if (!handler) {\n      return;\n    }\n\n    const listener = (event: PossibleEvent) => {\n      if (!ref.current || !handlerRef.current) return;\n\n      const isContains = Array.isArray(ref.current)\n        ? ref.current.some((r) =>\n            isContainsNode(r.current, event.target as Node),\n          )\n        : isContainsNode(ref.current, event.target as Node);\n\n      if (isContains) {\n        return;\n      }\n\n      handlerRef.current(event);\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, listener, getOptions(event));\n    });\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      events.forEach((event) => {\n        document.removeEventListener(\n          event,\n          listener,\n          getOptions(event) as EventListenerOptions,\n        );\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!handler]);\n};\n\nexport default useOnClickOutside;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M8.5 10L4 5.5 5.5 4 10 8.5 14.5 4 16 5.5 11.5 10l4.5 4.5-1.5 1.5-4.5-4.5L5.5 16 4 14.5 8.5 10z\"\n});\n\nconst SvgClose = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgClose, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/close.992b249e.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from 'styled-components';\n\nconst sizes = {\n  small: css`\n    width: 24px;\n    height: 24px;\n  `,\n  medium: css`\n    width: 30px;\n    height: 30px;\n  `,\n  // large: css``,\n};\n\nconst IconButton = styled.button.attrs({\n  type: 'button',\n})<{ size?: 'small' | 'medium' }>`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  outline: none;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  ${(p) => sizes[p.size || 'medium']};\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n\n  &:active {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n`;\n\nexport default IconButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ReactComponent as CloseIconSvg } from 'icons/close.svg';\nimport IconButton from 'components/IconButton';\n\nconst ChatModalRoot = styled.div`\n  height: 100%;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 4px 8px 0px,\n    rgba(0, 0, 0, 0.4) 0px 0px 4px 0px;\n  background-color: #18181b;\n  white-space: normal;\n  color: #fff;\n  border-radius: 4px;\n`;\nconst CloseButton = styled(IconButton).attrs({ size: 'small' })`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\nconst CloseIcon = styled(CloseIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  children: React.ReactNode;\n  onClose: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n};\n\nconst ChatModal = ({ children, onClose }: Props) => (\n  <ChatModalRoot>\n    <CloseButton onClick={onClose}>\n      <CloseIcon />\n    </CloseButton>\n    {children}\n  </ChatModalRoot>\n);\n\nexport default ChatModal;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M7 11a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-4 4a2 2 0 002-2H8a2 2 0 002 2z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0a6 6 0 11-12 0 6 6 0 0112 0z\",\n  clipRule: \"evenodd\"\n}));\n\nconst SvgSmileyFace = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgSmileyFace, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/smiley-face.1cc055ed.svg\";\nexport { ForwardRef as ReactComponent };","import CustomScrollbar from 'react-scrollbars-custom';\nimport styled from 'styled-components';\n\nconst Scrollbar = styled(CustomScrollbar).attrs({\n  disableTracksWidthCompensation: true,\n})`\n  overflow-y: auto;\n\n  .ScrollbarsCustom-Content {\n    padding: 0 !important;\n  }\n\n  .ScrollbarsCustom-TrackY {\n    background: none !important;\n  }\n\n  .ScrollbarsCustom-ThumbY {\n    margin-left: auto;\n    margin-right: auto;\n    width: 6px !important;\n  }\n`;\n\nexport default Scrollbar;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M13.192 14.606a7 7 0 111.414-1.414l3.101 3.1-1.414 1.415-3.1-3.1zM14 9A5 5 0 114 9a5 5 0 0110 0z\",\n  clipRule: \"evenodd\"\n});\n\nconst SvgSearch = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgSearch, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/search.a2f0945f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { RootState } from 'app/rootReducer';\nimport Scrollbar from 'components/Scrollbar';\nimport { emoteCategoriesSelector } from 'features/chat/selectors';\nimport { EmoteCategory } from 'features/chat/utils/createEmoteCategories';\nimport { ReactComponent as SearchIconSvg } from 'icons/search.svg';\n\nconst EmotePickerRoot = styled.div`\n  padding-top: 30px;\n  padding-bottom: 16px;\n  height: 100%;\n`;\nconst Categories = styled.div`\n  height: calc(100% - 30px);\n`;\nconst Category = styled.div`\n  padding-top: 10px;\n  padding-right: 16px;\n  padding-left: 16px;\n\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding-bottom: 10px;\n  font-size: 12px;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst CategoryItems = styled.div``;\nconst Emote = styled.img`\n  padding: 2px;\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n\n  &:hover {\n    background-color: rgba(119, 44, 232, 0.2);\n    cursor: pointer;\n  }\n`;\nconst SearchBlock = styled.div`\n  position: relative;\n  padding: 0 16px;\n  color: #adadb8;\n`;\nconst SearchInput = styled.input`\n  padding-left: 30px;\n  padding-right: 10px;\n  width: 100%;\n  height: 30px;\n  color: #efeff1;\n  font-family: inherit;\n  line-height: 1.5;\n  background-clip: padding-box;\n  background-color: rgba(255, 255, 255, 0.15);\n  border: 2px solid rgba(255, 255, 255, 0.15);\n  outline: 0;\n  border-radius: 4px;\n  appearance: none;\n  transition: box-shadow 0.1s ease-in, border 0.1s ease-in,\n    background-color 0.1s ease-in;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n`;\nconst SearchIcon = styled(SearchIconSvg)`\n  position: absolute;\n  top: 50%;\n  left: 21px;\n  display: block;\n  width: 20px;\n  height: 20px;\n  transform: translateY(-50%);\n`;\n\ntype Props = {\n  onEmoteClick: (name: string) => void;\n};\n\nconst EmotePicker = ({ onEmoteClick }: Props) => {\n  const [search, setSearch] = useState('');\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const emoteCategories = useSelector((state: RootState) =>\n    emoteCategoriesSelector(state, search),\n  );\n\n  useEffect(() => {\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n\n    return () => setSearch('');\n  }, []);\n\n  const renderCategory = ({ title, items }: EmoteCategory, key: number) => (\n    <Category key={key}>\n      {!!title && <CategoryHeader>{title}</CategoryHeader>}\n      <CategoryItems>\n        {items.map(({ alt, src, srcSet }) => (\n          <Emote\n            key={alt}\n            alt={alt}\n            src={src}\n            srcSet={srcSet}\n            onClick={() => onEmoteClick(alt)}\n          />\n        ))}\n      </CategoryItems>\n    </Category>\n  );\n\n  return (\n    <EmotePickerRoot>\n      <SearchBlock>\n        <SearchIcon />\n        <SearchInput\n          ref={searchInputRef}\n          placeholder=\"Search for Emotes\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </SearchBlock>\n      <Categories>\n        <Scrollbar>{emoteCategories.map(renderCategory)}</Scrollbar>\n      </Categories>\n    </EmotePickerRoot>\n  );\n};\n\nexport default EmotePicker;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport ChatModal from 'components/ChatModal';\nimport IconButton from 'components/IconButton';\nimport { ReactComponent as SmileyFaceIconSvg } from 'icons/smiley-face.svg';\nimport EmotePicker from 'features/chat/components/EmotePicker';\nimport { SuggestionsState } from 'features/chat/hooks/useChatInput';\nimport { isEmotesLoadedSelector } from 'features/chat/selectors';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\n\nconst ChatInputRoot = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n  background-color: #18181b;\n\n  & > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst ChatInputInner = styled.div`\n  position: relative;\n`;\nconst Suggestions = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n  margin-left: -5px;\n  margin-bottom: -5px;\n  margin-right: -5px;\n  margin-bottom: 0;\n  padding-top: 10px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-bottom: none;\n  background-color: #18181b;\n  color: #fff;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  /* box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0px 2px rgba(0, 0, 0, 0.1); */\n`;\nconst SuggestionItem = styled.div<{ isActive: boolean }>`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 2px;\n  background-color: ${(p) =>\n    p.isActive ? 'rgba(255, 255, 255, 0.15)' : 'transparent'};\n  cursor: pointer;\n`;\nconst SuggestionImage = styled.img`\n  margin-right: 8px;\n  width: 28px;\n  height: 28px;\n  object-fit: contain;\n`;\nconst TextareaInput = styled.div`\n  position: relative;\n`;\nconst TextareaWrapper = styled.div<{ isSuggestions: boolean }>`\n  ${(p) =>\n    p.isSuggestions &&\n    css`\n      margin-left: -5px;\n      margin-bottom: -5px;\n      margin-right: -5px;\n      padding: 5px;\n      border: 1px solid rgba(255, 255, 255, 0.15);\n      border-top: none;\n      border-bottom-left-radius: 6px;\n      border-bottom-right-radius: 6px;\n      /* box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.1),\n        0 2px 2px -2px rgba(0, 0, 0, 0.02); */\n\n      & > ${TextareaInput} {\n        margin-left: -1px;\n        margin-bottom: -1px;\n        margin-right: -1px;\n      }\n    `};\n`;\nconst EmotesModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 0;\n  bottom: 100%;\n  margin-bottom: 8px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\n// TODO: remove this after styled-components fix this\n/* eslint-disable react/jsx-props-no-spreading, @typescript-eslint/no-unused-vars */\nconst TextareaAutosizeFiltered = ({ showScroll, ...rest }: any) => (\n  <TextareaAutosize {...rest} />\n);\n/* eslint-enable react/jsx-props-no-spreading, @typescript-eslint/no-unused-vars */\nconst Textarea = styled(TextareaAutosizeFiltered)<{ showScroll: boolean }>`\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 10px;\n  padding-right: 32px;\n  width: 100%;\n  height: 38px;\n  max-height: 91px;\n  min-height: 40px;\n  overflow-x: hidden;\n  overflow-y: ${(p) => (p.showScroll ? 'auto' : 'hidden')};\n  border: 2px solid transparent;\n  background-color: rgba(255, 255, 255, 0.15);\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 4px;\n  outline: none;\n  color: #fff;\n  resize: none;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n  transition-property: box-shadow, border, background-color;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\nconst EmotesButton = styled(IconButton)`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n`;\nconst SmileyFaceIcon = styled(SmileyFaceIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  text: string;\n  suggestions: SuggestionsState;\n  isDisabled: boolean;\n  onEmoteClick: (name: string) => void;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onKeyUp: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur: () => void;\n  onSuggestionMouseEnter: (index: number) => void;\n  onSuggestionClick: (index: number) => void;\n};\n\nconst ChatInput = React.forwardRef<HTMLTextAreaElement, Props>(\n  (\n    {\n      text,\n      suggestions,\n      isDisabled,\n      onEmoteClick,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onBlur,\n      onSuggestionMouseEnter,\n      onSuggestionClick,\n    },\n    textareaRef,\n  ) => {\n    const chatInputRef = useRef(null);\n    const suggestionsRef = useRef<HTMLDivElement>(null);\n    const suggestionNodesRef = useRef([\n      textareaRef,\n      suggestionsRef,\n    ] as React.RefObject<HTMLElement>[]);\n\n    useOnClickOutside(suggestionNodesRef, () => onBlur());\n\n    const [isShowTextareaScroll, setIsShowTextareaScroll] = useState(false);\n    const [isEmotesModalVisible, setIsEmotesModalVisible] = useState(false);\n    const isEmotesLoaded = useSelector(isEmotesLoadedSelector);\n    const handleCloseEmotesModal = () => setIsEmotesModalVisible(false);\n\n    useOnClickOutside(chatInputRef, handleCloseEmotesModal);\n\n    const renderSuggestions = ({\n      type,\n      items,\n      activeIndex,\n    }: SuggestionsState) => {\n      const renderUser = (name: string, index: number) => (\n        <SuggestionItem\n          key={name}\n          isActive={index === activeIndex}\n          onMouseEnter={() => onSuggestionMouseEnter(index)}\n          onClick={() => onSuggestionClick(index)}\n        >\n          {name}\n        </SuggestionItem>\n      );\n\n      const renderEmote = (\n        { src, srcSet, alt }: htmlEntity.Emote,\n        index: number,\n      ) => (\n        <SuggestionItem\n          key={alt}\n          isActive={index === activeIndex}\n          onMouseEnter={() => onSuggestionMouseEnter(index)}\n          onClick={() => onSuggestionClick(index)}\n        >\n          <SuggestionImage src={src} srcSet={srcSet} alt={alt} />\n          {alt}\n        </SuggestionItem>\n      );\n\n      const renderItems = () =>\n        type === 'users'\n          ? (items as string[]).map(renderUser)\n          : (items as htmlEntity.Emote[]).map(renderEmote);\n\n      return (\n        <Suggestions ref={suggestionsRef}>\n          {items.length ? renderItems() : 'No matches'}\n        </Suggestions>\n      );\n    };\n\n    const renderEmotesButton = () => (\n      <EmotesButton\n        onClick={() => setIsEmotesModalVisible(!isEmotesModalVisible)}\n      >\n        <SmileyFaceIcon />\n      </EmotesButton>\n    );\n\n    const renderEmotesModal = () => (\n      <EmotesModal>\n        <ChatModal onClose={handleCloseEmotesModal}>\n          <EmotePicker onEmoteClick={onEmoteClick} />\n        </ChatModal>\n      </EmotesModal>\n    );\n\n    const handleHeightChange = (height: number) =>\n      setIsShowTextareaScroll(height >= 96);\n\n    return (\n      <ChatInputRoot ref={chatInputRef}>\n        <ChatInputInner>\n          {suggestions.isActive && renderSuggestions(suggestions)}\n          <TextareaWrapper isSuggestions={suggestions.isActive}>\n            <TextareaInput>\n              <Textarea\n                inputRef={textareaRef}\n                value={text}\n                placeholder=\"Send a message\"\n                maxLength={500}\n                maxRows={4}\n                disabled={isDisabled}\n                showScroll={isShowTextareaScroll}\n                onChange={onChange}\n                onKeyUp={onKeyUp}\n                onKeyDown={onKeyDown}\n                onHeightChange={handleHeightChange}\n              />\n              {isEmotesLoaded && renderEmotesButton()}\n            </TextareaInput>\n          </TextareaWrapper>\n          {isEmotesModalVisible && renderEmotesModal()}\n        </ChatInputInner>\n      </ChatInputRoot>\n    );\n  },\n);\n\nexport default React.memo(ChatInput);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M10 8a2 2 0 100 4 2 2 0 000-4z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M9 2h2a2.01 2.01 0 001.235 1.855l.53.22a2.01 2.01 0 002.185-.439l1.414 1.414a2.01 2.01 0 00-.439 2.185l.22.53A2.01 2.01 0 0018 9v2a2.01 2.01 0 00-1.855 1.235l-.22.53a2.01 2.01 0 00.44 2.185l-1.415 1.414a2.01 2.01 0 00-2.184-.439l-.531.22A2.01 2.01 0 0011 18H9a2.01 2.01 0 00-1.235-1.854l-.53-.22a2.009 2.009 0 00-2.185.438L3.636 14.95a2.009 2.009 0 00.438-2.184l-.22-.531A2.01 2.01 0 002 11V9c.809 0 1.545-.487 1.854-1.235l.22-.53a2.009 2.009 0 00-.438-2.185L5.05 3.636a2.01 2.01 0 002.185.438l.53-.22A2.01 2.01 0 009 2zm-4 8l1.464 3.536L10 15l3.535-1.464L15 10l-1.465-3.536L10 5 6.464 6.464 5 10z\",\n  clipRule: \"evenodd\"\n}));\n\nconst SvgGears = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgGears, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/gears.5f76af43.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M13 8l-5 5v18h6v5l5-5h4l9-9V8z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#9147ff\",\n  d: \"M26 25l4-4V10H14v15h4v4l4-4z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M20 14h2v6h-2v-6zm7 0v6h-2v-6h2z\"\n});\n\nconst SvgTwitch = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 40 40\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgTwitch, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/twitch.75e6e194.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\n\nconst SwitchRoot = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  line-height: 20px;\n`;\nconst Label = styled.label`\n  content: '';\n  position: relative;\n  display: inline-block;\n  order: 0;\n  width: 35px;\n  height: 20px;\n  vertical-align: bottom;\n  border-radius: 10px/50%;\n  background-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.1s ease;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    bottom: 2px;\n    display: block;\n    width: 16px;\n    border-radius: 50%;\n    background-color: #fff;\n    transition: left 0.1s ease;\n  }\n`;\nconst Input = styled.input.attrs({ type: 'checkbox' })`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + ${Label} {\n    background-color: #9147ff;\n\n    &:after {\n      content: '';\n      top: 2px;\n      left: calc(100% - 18px);\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 9px;\n      left: 10px;\n      display: block;\n      height: 3px;\n      width: 7px;\n      border-bottom: 2px solid #fff;\n      border-left: 2px solid #fff;\n      transform: translate3d(-50%, -50%, 0) rotate(-45deg);\n    }\n  }\n`;\n\ntype Props = {\n  id: string;\n  label: string;\n  checked?: boolean;\n  readOnly?: boolean;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Switch = ({ id, label, checked, readOnly, onChange }: Props) => (\n  <SwitchRoot>\n    <Input\n      id={id}\n      aria-label={label}\n      checked={checked}\n      readOnly={readOnly}\n      onChange={onChange}\n    />\n    <Label htmlFor={id} />\n  </SwitchRoot>\n);\n\nSwitch.defaultProps = {\n  checked: false,\n  readOnly: false,\n  onChange: () => {},\n};\n\nexport default Switch;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Scrollbar from 'components/Scrollbar';\nimport Switch from 'components/Switch';\nimport {\n  userDisplayNameSelector,\n  userColorSelector,\n  userBadgesImagesSelector,\n} from 'features/chat/selectors';\nimport { isAuthSelector } from 'features/auth/authSlice';\nimport { changeChatOption } from 'features/options/optionsSlice';\nimport { optionsSelector } from 'features/options/optionsSelectors';\n\nconst OptionsRoot = styled.div`\n  padding: 16px;\n  height: 100%;\n`;\nconst Header = styled.h2`\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst Categories = styled(Scrollbar)`\n  height: 100%;\n`;\nconst Category = styled.div`\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding: 8px 0;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst CategoryItems = styled.div``;\nconst Option = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 4px 0;\n  cursor: pointer;\n`;\nconst OptionText = styled.span``;\nconst Profile = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst UserName = styled.div`\n  font-weight: bold;\n  color: ${(p) => p.color};\n`;\nconst LogOutButton = styled(Link)`\n  margin-left: auto;\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Badge = styled.img`\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst Options = () => {\n  const dispatch = useDispatch();\n  const options = useSelector(optionsSelector);\n\n  const isAuth = useSelector(isAuthSelector);\n\n  const userDisplayName = useSelector(userDisplayNameSelector);\n  const userColor = useSelector(userColorSelector);\n  const userBadgesImages = useSelector(userBadgesImagesSelector);\n\n  const renderOption = useCallback(\n    ({ id, name, title, description, value }) => (\n      <Option\n        key={id}\n        onClick={() => dispatch(changeChatOption({ name, value: !value }))}\n        title={description}\n      >\n        <OptionText>{title}</OptionText>\n        <Switch\n          id={id}\n          label={title}\n          checked={value}\n          onChange={() => dispatch(changeChatOption({ name, value }))}\n        />\n      </Option>\n    ),\n    [dispatch],\n  );\n\n  const renderProfileCategory = () => {\n    return (\n      <Category>\n        <CategoryHeader>Profile</CategoryHeader>\n        <CategoryItems>\n          <Profile>\n            {userBadgesImages.map(({ alt, label, src, srcSet }, key) => (\n              <Badge\n                // eslint-disable-next-line react/no-array-index-key\n                key={key}\n                alt={alt}\n                aria-label={label}\n                src={src}\n                srcSet={srcSet}\n              />\n            ))}\n            <UserName color={userColor}>{userDisplayName}</UserName>\n            <LogOutButton to=\"/chat/logout\">Log Out</LogOutButton>\n          </Profile>\n        </CategoryItems>\n      </Category>\n    );\n  };\n\n  const renderOptionsCategory = useCallback(\n    ({ title, items }, key) => (\n      <Category key={key}>\n        {!!title && <CategoryHeader>{title}</CategoryHeader>}\n        <CategoryItems>{items.map(renderOption)}</CategoryItems>\n      </Category>\n    ),\n    [renderOption],\n  );\n\n  return (\n    <OptionsRoot>\n      <Header>Chat settings</Header>\n      <Categories>\n        {isAuth && renderProfileCategory()}\n        {options.map(renderOptionsCategory)}\n      </Categories>\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport { ReactComponent as GearsIconSvg } from 'icons/gears.svg';\nimport { ReactComponent as TwitchIconSvg } from 'icons/twitch.svg';\nimport IconButton from 'components/IconButton';\nimport ChatModal from 'components/ChatModal';\nimport Options from 'features/options/Options';\nimport { isAuthSelector, isAuthReadySelector } from 'features/auth/authSlice';\n\nconst ChatControlsRoot = styled.div`\n  position: relative;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n`;\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n\n  & > :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\nconst OptionsModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 10px;\n  bottom: 100%;\n  margin-bottom: 10px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nexport const buttonStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 10px;\n  height: 30px;\n  border: none;\n  color: #fff;\n  background-color: #9147ff;\n  outline: none;\n  font-size: 12px;\n  border-radius: 4px;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #772ce8;\n  }\n\n  &:active {\n    background-color: #5c16c5;\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n\n  &[disabled] {\n    background-color: rgba(255, 255, 255, 0.26);\n    color: rgba(255, 255, 255, 0.8);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nconst Button = styled.button.attrs({ type: 'button' })`\n  ${buttonStyles};\n`;\nconst SignInButton = styled(Link)`\n  ${buttonStyles};\n`;\nconst OptionsButton = styled(IconButton)`\n  margin-left: auto;\n`;\nconst GearsIcon = styled(GearsIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\nconst TwitchIcon = styled(TwitchIconSvg)`\n  display: block;\n  margin-right: 4px;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  isDisabled: boolean;\n  onSendMessage: () => void;\n};\n\nconst ChatControls = ({ isDisabled, onSendMessage }: Props) => {\n  const [isOptionsModalVisible, setIsOptionsModalVisible] = useState(false);\n  const optionsModalRef = useRef(null);\n  const optionsButtonRef = useRef(null);\n  const optionsNodesRef = useRef([optionsModalRef, optionsButtonRef]);\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n\n  const handleCloseOptionsModal = () => setIsOptionsModalVisible(false);\n  useOnClickOutside(optionsNodesRef, handleCloseOptionsModal);\n\n  const renderSignInButton = () => (\n    <SignInButton to=\"/chat/auth\">\n      <TwitchIcon />\n      Sign in with Twitch\n    </SignInButton>\n  );\n\n  const renderOptionsModal = () => (\n    <OptionsModal ref={optionsModalRef}>\n      <ChatModal onClose={handleCloseOptionsModal}>\n        <Options />\n      </ChatModal>\n    </OptionsModal>\n  );\n\n  return (\n    <ChatControlsRoot>\n      <Controls>\n        {isAuthReady && !isAuth && renderSignInButton()}\n        <OptionsButton\n          ref={optionsButtonRef}\n          onClick={() => setIsOptionsModalVisible((prev) => !prev)}\n        >\n          <GearsIcon />\n        </OptionsButton>\n        <Button disabled={isDisabled} onClick={onSendMessage}>\n          Chat\n        </Button>\n      </Controls>\n      {isOptionsModalVisible && renderOptionsModal()}\n    </ChatControlsRoot>\n  );\n};\n\nexport default React.memo(ChatControls);\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { format } from 'date-fns/fp';\n\nimport {\n  Message as MessageType,\n  MessageEntity,\n} from 'features/chat/slice/messages';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\n\ntype MessageRootProps = {\n  isAction: boolean;\n  isHistory: boolean;\n  isDeleted: boolean;\n  isMention: boolean;\n  isEven: boolean;\n};\n\nconst getChatMessageBg = (p: MessageRootProps) => {\n  if (p.isMention) return 'rgba(255, 0, 0, 0.3)';\n  if (p.isEven) return '#1f1925';\n  return 'transparent';\n};\n\nconst MessageRoot = styled.div<MessageRootProps>`\n  padding: 5px 20px;\n  color: ${(p) => (p.isAction ? p.color : '#fff')};\n  opacity: ${(p) => (p.isHistory || p.isDeleted ? '0.5' : '1')};\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${getChatMessageBg};\n`;\nconst Name = styled.span`\n  font-weight: bold;\n  color: ${(p) => p.color};\n  cursor: pointer;\n`;\n// https://github.com/night/BetterTTV/blob/master/src/modules/emotes/style.css\nconst Emote = styled.img`\n  display: inline-block;\n  margin: -5px 0;\n  vertical-align: middle;\n\n  /* Prevent stacking of IceCold, SoSnowy */\n  &[data-emote-id='5849c9a4f52be01a7ee5f79d']\n    + &[data-emote-id='5849c9a4f52be01a7ee5f79d'],\n  &[data-emote-id='567b5b520e984428652809b6']\n    + &[data-emote-id='567b5b520e984428652809b6'] {\n    display: none;\n  }\n\n  /* IceCold */\n  & + &[data-emote-id='5849c9a4f52be01a7ee5f79d'] {\n    margin-left: -33px;\n  }\n\n  /* SoSnowy */\n  & + &[data-emote-id='567b5b520e984428652809b6'] {\n    margin-left: -32px;\n  }\n\n  /* SantaHat */\n  & + &[data-emote-id='58487cc6f52be01a7ee5f205'] {\n    margin-left: -34px;\n    margin-top: -18px;\n  }\n\n  /* TopHat, CandyCane, ReinDeer */\n  & + &[data-emote-id='5849c9c8f52be01a7ee5f79e'],\n  & + &[data-emote-id='567b5c080e984428652809ba'],\n  & + &[data-emote-id='567b5dc00e984428652809bd'] {\n    margin-left: -31px;\n    margin-top: -18px;\n  }\n`;\nconst Emoji = styled.img`\n  display: inline-block;\n  margin-top: -5px;\n  margin-bottom: -4px;\n  width: 20px;\n  height: auto;\n  vertical-align: middle;\n`;\nconst Mention = styled.span<{ isActive: boolean; isOwnMessage: boolean }>`\n  ${(p) =>\n    (p.isActive || p.isOwnMessage) &&\n    css`\n      padding: 2px 4px;\n    `};\n  ${(p) =>\n    p.isOwnMessage &&\n    css`\n      background-color: #40404a;\n      color: #fff;\n    `};\n  ${(p) =>\n    p.isActive &&\n    css`\n      background-color: #fafafa;\n      color: #18181b;\n    `};\n`;\nconst Link = styled.a`\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Timestamp = styled.span`\n  margin-right: 5px;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst Badge = styled.img`\n  margin-bottom: 2px;\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst renderMessageArray = (login: string, userLogin: string | null) => (\n  item: MessageEntity,\n  key: number,\n) => {\n  if (typeof item !== 'object') return item;\n\n  if (\n    item.type === 'twitch-emote' ||\n    item.type === 'bttv-emote' ||\n    item.type === 'ffz-emote'\n  ) {\n    return (\n      <Emote\n        key={key}\n        src={item.src}\n        srcSet={item.srcSet}\n        alt={item.alt}\n        data-emote-id={item.id}\n      />\n    );\n  }\n\n  if (item.type === 'emoji') {\n    return <Emoji key={key} src={item.src} alt={item.alt} />;\n  }\n\n  if (item.type === 'mention') {\n    return (\n      <Mention\n        key={key}\n        isActive={item.target === userLogin}\n        isOwnMessage={login === userLogin}\n      >\n        {item.text}\n      </Mention>\n    );\n  }\n\n  if (item.type === 'link') {\n    return (\n      <Link\n        key={key}\n        href={item.href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n      >\n        {item.text}\n      </Link>\n    );\n  }\n\n  return null;\n};\n\nconst renderBadges = (badges: htmlEntity.Badge[]) =>\n  badges.map(({ alt, label, src, srcSet }, key: number) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <Badge key={key} alt={alt} aria-label={label} src={src} srcSet={srcSet} />\n  ));\n\ntype Props = {\n  message: MessageType;\n  userLogin: string | null;\n  isEven: boolean;\n  isShowTimestamps: boolean;\n  onNameRightClick: (name: string) => void;\n};\n\nconst MESSAGE_DELETED_LABEL = '<message deleted>';\n\nconst Message = ({\n  message: {\n    message,\n    entities,\n    user: { login, color, displayName, badges },\n    timestamp,\n    isHistory,\n    isAction,\n    isDeleted,\n  },\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}: Props) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const isMention =\n    login !== userLogin && RegExp(userLogin as string, 'gi').test(message);\n\n  const handleNameRightClick = (\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>,\n  ) => {\n    onNameRightClick(displayName);\n    e.preventDefault();\n  };\n\n  return (\n    <MessageRoot\n      isHistory={isHistory}\n      isAction={isAction}\n      isEven={isEven}\n      isMention={isMention}\n      isDeleted={isDeleted}\n      color={color}\n    >\n      {isShowTimestamps && (\n        <Timestamp>{format('h:mm', new Date(timestamp))}</Timestamp>\n      )}\n      {badges.length > 0 && renderBadges(badges)}\n      <Name color={color} onContextMenu={handleNameRightClick}>\n        {displayName}\n      </Name>\n      {isAction ? ' ' : ': '}\n      {isDeleted && !isVisible ? (\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\n        <Link onClick={() => setIsVisible(true)}>{MESSAGE_DELETED_LABEL}</Link>\n      ) : (\n        entities.map(renderMessageArray(login, userLogin))\n      )}\n    </MessageRoot>\n  );\n};\n\nexport default React.memo(Message);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Notice as NoticeType } from 'features/chat/slice/messages';\n\nconst NoticeRoot = styled.div<{ isEven: boolean }>`\n  padding: 5px 20px;\n  color: rgba(255, 255, 255, 0.6);\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${(p) => (p.isEven ? '#1f1925' : 'transparent')};\n`;\n\ntype Props = {\n  message: NoticeType;\n  isEven: boolean;\n};\n\nconst Notice = ({ message: { message }, isEven }: Props) => (\n  <NoticeRoot isEven={isEven}>{message}</NoticeRoot>\n);\n\nexport default Notice;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { UserNotice as UserNoticeType } from 'features/chat/slice/messages';\n\nconst UserNoticeRoot = styled.div`\n  padding: 5px 20px 5px 16px;\n  line-height: 20px;\n  word-wrap: break-word;\n  border-left: 4px solid #9147ff;\n  color: #fff;\n`;\n\ntype Props = {\n  message: UserNoticeType;\n};\n\nconst UserNotice = ({ message: { systemMessage } }: Props) => (\n  <UserNoticeRoot>{systemMessage}</UserNoticeRoot>\n);\n\nexport default UserNotice;\n","import React from 'react';\n\nimport assertNever from 'utils/assertNever';\nimport { ChatMessage as ChatMessageType } from 'features/chat/slice/messages';\nimport Message from 'features/chat/components/Message';\nimport Notice from 'features/chat/components/Notice';\nimport UserNotice from 'features/chat/components/UserNotice';\n\ntype Props = {\n  message: ChatMessageType;\n  userLogin: string | null;\n  isEven: boolean;\n  isShowTimestamps: boolean;\n  // onNameClick: (name: string) => void;\n  onNameRightClick: (name: string) => void;\n};\n\nconst ChatMessage = ({\n  message,\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}: Props) => {\n  if (message.type === 'message') {\n    return (\n      <Message\n        message={message}\n        userLogin={userLogin}\n        isEven={isEven}\n        isShowTimestamps={isShowTimestamps}\n        // onNameClick={onNameClick}\n        onNameRightClick={onNameRightClick}\n      />\n    );\n  }\n\n  if (message.type === 'notice') {\n    return <Notice message={message} isEven={isEven} />;\n  }\n\n  if (message.type === 'user-notice') {\n    return <UserNotice message={message} />;\n  }\n\n  return assertNever(message);\n};\n\nexport default React.memo(ChatMessage);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ScrollbarType from 'react-scrollbars-custom';\nimport { ScrollState } from 'react-scrollbars-custom/dist/types/types';\n\nimport Scrollbar from 'components/Scrollbar';\nimport ChatMessage from 'features/chat/components/ChatMessage';\nimport { messagesSelector, isEvenSelector } from 'features/chat/selectors';\nimport { userLoginSelector } from 'features/auth/authSlice';\nimport {\n  isShowTimestampsSelector,\n  isSplitChatSelector,\n} from 'features/options/optionsSelectors';\n\nconst MORE_MESSAGES_OFFSET = 100;\n\nconst MessagesRoot = styled.div`\n  position: relative;\n  flex-grow: 1;\n`;\nconst StyledScrollbar = styled(Scrollbar)`\n  .ScrollbarsCustom-Content {\n    padding-bottom: 10px !important;\n  }\n`;\nconst MoreMessagesButton = styled.button<{ isVisible: boolean }>`\n  position: absolute;\n  left: 50%;\n  bottom: 10px;\n  display: ${(p) => (p.isVisible ? 'block' : 'none')};\n  padding: 5px 20px;\n  background: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: translateX(-50%);\n`;\n\ntype Props = {\n  onNameRightClick: (name: string) => void;\n};\n\nconst Messages = ({ onNameRightClick }: Props) => {\n  const [\n    isMoreMessagesButtonVisible,\n    setIsMoreMessagesButtonVisible,\n  ] = useState(false);\n\n  const messages = useSelector(messagesSelector);\n  const userLogin = useSelector(userLoginSelector);\n\n  const isEven = useSelector(isEvenSelector);\n  const isShowTimestamps = useSelector(isShowTimestampsSelector);\n  const isSplitChat = useSelector(isSplitChatSelector);\n\n  const handleScrollUpdate = ({\n    clientHeight,\n    contentScrollHeight,\n    scrollTop,\n  }: ScrollState) => {\n    const maxScrollTop = contentScrollHeight - clientHeight;\n    const isVisible = scrollTop + MORE_MESSAGES_OFFSET < maxScrollTop;\n\n    setIsMoreMessagesButtonVisible(isVisible);\n  };\n\n  const scrollbarRef = useRef<ScrollbarType>(null);\n\n  const handleScrollToBottom = () => {\n    if (scrollbarRef.current) {\n      scrollbarRef.current.scrollToBottom();\n    }\n  };\n\n  useEffect(() => {\n    if (!isMoreMessagesButtonVisible) {\n      handleScrollToBottom();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messages]);\n\n  const getIsEven = (key: number) => {\n    if (!isSplitChat) return false;\n    return isEven ? key % 2 === 1 : key % 2 === 0;\n  };\n\n  return (\n    <MessagesRoot>\n      <StyledScrollbar onUpdate={handleScrollUpdate} ref={scrollbarRef}>\n        {messages.map((message, key) => (\n          <ChatMessage\n            key={message.id}\n            message={message}\n            userLogin={userLogin}\n            isEven={getIsEven(key)}\n            isShowTimestamps={isShowTimestamps}\n            onNameRightClick={onNameRightClick}\n          />\n        ))}\n      </StyledScrollbar>\n      <MoreMessagesButton\n        onClick={handleScrollToBottom}\n        isVisible={isMoreMessagesButtonVisible}\n      >\n        More messages below\n      </MoreMessagesButton>\n    </MessagesRoot>\n  );\n};\n\nexport default Messages;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { buttonStyles } from 'features/chat/components/ChatControls';\n\nconst JoinChannelRoot = styled.div`\n  padding: 10px;\n  flex-grow: 1;\n  width: 320px;\n`;\nconst Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 10px;\n  padding: 0;\n  color: #fff;\n`;\nconst Controls = styled.div`\n  display: flex;\n\n  & > :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst Input = styled.input`\n  display: block;\n  padding: 4px 10px;\n  width: 100%;\n  border: 2px solid transparent;\n  background-color: rgba(255, 255, 255, 0.15);\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 4px;\n  outline: none;\n  color: #fff;\n  resize: none;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n  transition-property: box-shadow, border, background-color;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\nconst Button = styled.button`\n  ${buttonStyles};\n\n  flex-shrink: none;\n`;\n\nconst JoinChannel = () => {\n  const history = useHistory();\n  const [value, setValue] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleChangeChannel = () => {\n    history.push({\n      pathname: '/chat/',\n      hash: value,\n    });\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleChangeChannel();\n    }\n  };\n\n  return (\n    <JoinChannelRoot>\n      <Title>Channel to join: </Title>\n      <Controls>\n        <Input\n          ref={inputRef}\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onKeyPress={handleKeyPress}\n        />\n        <Button onClick={handleChangeChannel} disabled={!value}>\n          Join\n        </Button>\n      </Controls>\n    </JoinChannelRoot>\n  );\n};\n\nexport default JoinChannel;\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { isAuthSelector } from 'features/auth/authSlice';\nimport { isFixedWidthSelector } from 'features/options/optionsSelectors';\nimport useInitializeAuth from 'features/auth/hooks/useInitializeAuth';\nimport useFetchChatData from 'features/chat/hooks/useFetchChatData';\nimport useCurrentChannel from 'features/chat/hooks/useCurrentChannel';\nimport useTwitchClient from 'features/chat/hooks/useTwitchClient';\nimport useChatInput from 'features/chat/hooks/useChatInput';\nimport {\n  currentChannelSelector,\n  isConnectedSelector,\n} from 'features/chat/selectors';\nimport ChatInput from 'features/chat/components/ChatInput';\nimport ChatControls from 'features/chat/components/ChatControls';\nimport Messages from 'features/chat/components/Messages';\nimport JoinChannel from 'features/chat/components/JoinChannel';\n\nconst ChatRoot = styled.div`\n  height: 100vh;\n  font-size: 12px;\n  background-color: #0e0e10;\n`;\nconst ChatWrapper = styled.div<{ isFixedWidth: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: ${(p) => (p.isFixedWidth ? '340px' : 'auto')};\n  height: 100%;\n  background-color: #18181b;\n`;\n\nconst Chat = () => {\n  const [text, setText] = useState('');\n\n  const client = useTwitchClient();\n\n  useInitializeAuth();\n  useCurrentChannel();\n  useFetchChatData();\n\n  const currentChannel = useSelector(currentChannelSelector);\n\n  const isAuth = useSelector(isAuthSelector);\n  const isConnected = useSelector(isConnectedSelector);\n\n  const isFixedWidth = useSelector(isFixedWidthSelector);\n  const chatInputRef = useRef<HTMLTextAreaElement>(null);\n\n  const textRef = useRef(text);\n  textRef.current = text;\n\n  const isDisabled = !isAuth || !isConnected;\n\n  const handleSendMessage = useCallback(() => {\n    if (!client || !textRef.current) return;\n\n    client.say(currentChannel, textRef.current);\n\n    setText('');\n  }, [client, currentChannel, textRef, setText]);\n\n  const chatInput = useChatInput(setText, handleSendMessage, chatInputRef);\n\n  const handleNameRightClick = useCallback(\n    (name: string) => {\n      setText((t) => `${t.trim()} @${name} `.trimLeft());\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n    },\n    [setText, chatInputRef],\n  );\n\n  const handleEmoteClick = useCallback(\n    (name: string) => {\n      setText((t) => `${t.trim()} ${name} `.trimLeft());\n    },\n    [setText],\n  );\n\n  // console.log(currentChannel);\n\n  return (\n    <ChatRoot>\n      <ChatWrapper isFixedWidth={isFixedWidth}>\n        {currentChannel ? (\n          <Messages onNameRightClick={handleNameRightClick} />\n        ) : (\n          <JoinChannel />\n        )}\n        <ChatInput\n          ref={chatInputRef}\n          text={text}\n          suggestions={chatInput.suggestions}\n          isDisabled={isDisabled}\n          onEmoteClick={handleEmoteClick}\n          onChange={chatInput.handleChange}\n          onKeyUp={chatInput.handleKeyUp}\n          onKeyDown={chatInput.handleKeyDown}\n          onBlur={chatInput.handleBlur}\n          onSuggestionMouseEnter={chatInput.handleSuggestionMouseEnter}\n          onSuggestionClick={chatInput.handleSuggestionClick}\n        />\n        <ChatControls\n          isDisabled={isDisabled}\n          onSendMessage={handleSendMessage}\n        />\n      </ChatWrapper>\n    </ChatRoot>\n  );\n};\n\nexport default Chat;\n","import { getAuthUrl } from 'features/auth/authUtils';\n\nconst Auth = () => {\n  window.location.href = getAuthUrl();\n\n  return null;\n};\n\nexport default Auth;\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  LS_ACCESS_TOKEN,\n  LS_ID_TOKEN,\n  LS_USER,\n  LS_LAST_CHANNEL,\n} from 'utils/constants';\nimport { invalidateAuth } from 'features/auth/authSlice';\n\nconst Logout = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  localStorage.removeItem(LS_ACCESS_TOKEN);\n  localStorage.removeItem(LS_ID_TOKEN);\n  localStorage.removeItem(LS_USER);\n\n  dispatch(invalidateAuth());\n\n  history.push({\n    pathname: '/chat/',\n    hash: localStorage.getItem(LS_LAST_CHANNEL) || '',\n  });\n\n  return null;\n};\n\nexport default Logout;\n","import { useHistory } from 'react-router-dom';\n\nimport { LS_ACCESS_TOKEN, LS_ID_TOKEN, LS_LAST_CHANNEL } from 'utils/constants';\n\nconst AuthCallback = () => {\n  const history = useHistory();\n\n  if (!window.location.hash) return null;\n\n  const params = new URLSearchParams(window.location.hash.slice(1));\n\n  const accessToken = params.get('access_token');\n  const idToken = params.get('id_token');\n\n  if (!accessToken || !idToken) return null;\n\n  localStorage.setItem(LS_ACCESS_TOKEN, accessToken);\n  localStorage.setItem(LS_ID_TOKEN, idToken);\n\n  history.push({\n    pathname: '/chat/',\n    hash: localStorage.getItem(LS_LAST_CHANNEL) || '',\n  });\n\n  return null;\n};\n\nexport default AuthCallback;\n","import { css } from 'styled-components';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    font-family: Roobert, Helvetica Neue, Helvetica, Arial, sans-serif;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\nimport colors from 'styles/colors';\nimport vars from 'styles/vars';\n\nexport default createGlobalStyle`\n  :root {\n    ${colors};\n    ${vars};\n  }\n  ${common};\n`;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from 'react-router-dom';\n\nimport { isAuthRedirect } from 'features/auth/authUtils';\nimport Chat from 'features/chat/components/Chat';\nimport Auth from 'features/auth/Auth';\nimport Logout from 'features/auth/Logout';\nimport AuthCallback from 'features/auth/AuthCallback';\nimport GlobalStyles from 'styles';\n\nconst getHomeComponent = ({ location }: RouteComponentProps) =>\n  isAuthRedirect(location.hash) ? <AuthCallback /> : <Chat />;\n\nconst App: React.FC = () => (\n  <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/chat/\" render={getHomeComponent} />\n        <Route exact path=\"/chat/auth\" component={Auth} />\n        <Route exact path=\"/chat/logout\" component={Logout} />\n      </Switch>\n    </Router>\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nconst registerValidSW = (swUrl: string, config?: Config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n};\n\nexport const register = (config?: Config) => {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nexport const unregister = () => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n};\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport auth from 'features/auth/authSlice';\nimport chat from 'features/chat/slice/chatSlice';\nimport options from 'features/options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  auth,\n  chat,\n  options,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && (module as any).hot) {\n  (module as any).hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReactGA from 'react-ga';\n\nimport * as serviceWorker from 'serviceWorker';\nimport { isAuthRedirect } from 'features/auth/authUtils';\nimport store from 'app/store';\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-139550930-3');\n\n  if (!isAuthRedirect(window.location.hash)) {\n    const page =\n      window.location.pathname + window.location.search + window.location.hash;\n    ReactGA.pageview(page);\n  }\n}\n\nconst render = () => {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && (module as any).hot) {\n  (module as any).hot.accept('./app/App', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import {\n  TWITCH_API_AUTH_BASE,\n  TWITCH_API_CLIENT_ID,\n  TWITCH_API_REDIRECT_URI,\n  LS_USER,\n} from 'utils/constants';\n\ntype StoredUser = {\n  id: string;\n  login: string;\n};\n\n/* eslint-disable @typescript-eslint/camelcase */\nconst authParams = {\n  client_id: TWITCH_API_CLIENT_ID,\n  redirect_uri: TWITCH_API_REDIRECT_URI,\n  response_type: 'token+id_token',\n  scope: [\n    'openid',\n    'channel:moderate',\n    'chat:edit',\n    'chat:read',\n    'whispers:read',\n    'whispers:edit',\n    'user_blocks_read',\n    'user_blocks_edit',\n    'user_subscriptions',\n  ].join('+'),\n  claims: JSON.stringify({\n    id_token: { email_verified: null, picture: null, preferred_username: null },\n  }),\n  // TODO:\n  // state: uid(),\n};\n/* eslint-enable @typescript-eslint/camelcase */\n\nexport const getAuthUrl = (): string => {\n  const search = Object.entries(authParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${TWITCH_API_AUTH_BASE}?${search}`;\n};\n\nexport const isAuthRedirect = (hash: string): boolean =>\n  hash.startsWith('#access_token=');\n\nexport const writeUserToLocatStorage = (user: StoredUser): void => {\n  localStorage.setItem(LS_USER, JSON.stringify(user));\n};\n\nexport const readUserFromLocatStorage = (): StoredUser | null => {\n  let user;\n\n  try {\n    user = JSON.parse(localStorage.getItem(LS_USER) as string);\n  } catch (e) {\n    user = null;\n  }\n\n  if (!user || !user.id || !user.login) return null;\n\n  return user as StoredUser;\n};\n","export const TWITCH_API_AUTH_BASE = 'https://id.twitch.tv/oauth2/authorize';\n\nexport const TWITCH_API_CLIENT_ID = process.env.REACT_APP_TWITCH_API_CLIENT_ID;\nexport const TWITCH_API_REDIRECT_URI =\n  process.env.REACT_APP_TWITCH_API_REDIRECT_URI;\n\nexport const CHANNEL_MESSAGES_LIMIT = 500;\nexport const STORE_USERS_LIMIT = 500;\n\nexport const API_REQUESTS_TIMEOUT = 10000;\n\n// local storage keys\nexport const LS_ACCESS_TOKEN = 'accessToken';\nexport const LS_ID_TOKEN = 'idToken';\nexport const LS_LAST_CHANNEL = 'lastChannel';\nexport const LS_USER = 'user';\nexport const LS_EMOTES_USAGE_STATISTIC = 'emotesUsageStatistic';\nexport const LS_OPTIONS = 'options';\n\nexport const SUGGESTION_TYPES = {\n  users: {\n    name: 'users',\n    limit: 5,\n    regex: /^@([\\w\\d_]*)$/,\n  },\n  emotes: {\n    name: 'emotes',\n    limit: 10,\n    regex: /^:([\\w\\d_]{2,})$/,\n  },\n};\n\nexport const NOTICE_MESSAGE_TAGS = [\n  'msg_banned',\n  'msg_bad_characters',\n  'msg_channel_blocked',\n  'msg_channel_suspended',\n  'msg_duplicate',\n  'msg_emoteonly',\n  'msg_facebook',\n  'msg_followersonly',\n  'msg_followersonly_followed',\n  'msg_followersonly_zero',\n  'msg_r9k',\n  'msg_ratelimit',\n  'msg_rejected',\n  'msg_rejected_mandatory',\n  'msg_room_not_found',\n  'msg_slowmode',\n  'msg_subsonly',\n  'msg_suspended',\n  'msg_timedout',\n  'msg_verified_email',\n];\n\nexport type FetchFlags = {\n  isLoading: boolean;\n  isLoaded: boolean;\n  isError: boolean;\n  error: string | null;\n};\n\nexport const initialFetchFlags: FetchFlags = {\n  isLoading: false,\n  isLoaded: false,\n  isError: false,\n  error: null,\n};\n","/* eslint-disable no-param-reassign */\nimport { FetchFlags } from 'utils/constants';\n\nfunction setFetchFlags(obj: FetchFlags, type: 'request'): void;\nfunction setFetchFlags(obj: FetchFlags, type: 'success'): void;\nfunction setFetchFlags(obj: FetchFlags, type: 'failure', error: string): void;\nfunction setFetchFlags(\n  obj: FetchFlags,\n  type: 'request' | 'success' | 'failure',\n  error: string | null = null,\n) {\n  obj.isLoading = type === 'request';\n  obj.isLoaded = type === 'success' || type === 'failure';\n  obj.isError = type === 'failure';\n  obj.error = type === 'failure' ? error : null;\n}\n\nexport default setFetchFlags;\n","import * as R from 'ramda';\nimport { parse as twemojiParser } from 'twemoji-parser';\nimport { lib as emojilib } from 'emojilib';\nimport urlRegex from 'url-regex';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport { MessageEntity } from 'features/chat/slice/messages';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport findEmote from 'features/chat/utils/findEmote';\n\nconst mentionRegex = /^@([\\p{Letter}\\p{Number}_]+)/u;\nconst linkRegex = urlRegex({ strict: false });\n\nconst normalizeEmbeddedEmotes = (embeddedEmotes: twitchIrc.Emotes) =>\n  Object.entries(embeddedEmotes).reduce((result, [key, items]) => {\n    const id = Number.parseInt(key, 10);\n\n    return {\n      ...result,\n      ...items.reduce((acc, { start }) => ({ ...acc, [start]: id }), {}),\n    };\n  }, {} as Record<string, number>);\n\nconst findEmojiByName = (char: string) =>\n  R.pipe<any, any, any, string | undefined>(\n    R.filter(R.propEq('char', char)),\n    R.keys,\n    R.head,\n  )(emojilib);\n\nconst findEntity = (\n  word: string,\n  emotes: StateEmotes,\n  parseTwitch: boolean,\n):\n  | htmlEntity.TwitchEmote\n  | htmlEntity.BttvEmote\n  | htmlEntity.FfzEmote\n  | htmlEntity.Emoji\n  | [htmlEntity.Mention, number]\n  | htmlEntity.Link\n  | null => {\n  if (!emotes) return null;\n\n  if (parseTwitch) {\n    const twitchEmote = findEmote.twitch.byName(word, emotes);\n\n    if (twitchEmote) return twitchEmote;\n  }\n\n  const emote =\n    findEmote.bttv.byName(word, emotes) || findEmote.ffz.byName(word, emotes);\n\n  if (emote) return emote;\n\n  // Don't parse two or more emotes without spaces between\n  // Don't parse emote if it's not in the emojilib package\n  const emojiMatch = twemojiParser(word, { assetType: 'png' });\n\n  if (\n    emojiMatch &&\n    emojiMatch.length === 1 &&\n    emojiMatch[0].text.length === word.length\n  ) {\n    const emoji = findEmojiByName(word);\n\n    if (emoji) {\n      const [{ url }] = emojiMatch;\n\n      return htmlEntity.createEmoji(emoji, url);\n    }\n  }\n\n  const mentionMatch = word.match(mentionRegex);\n\n  if (mentionMatch) {\n    const [text, target] = mentionMatch;\n\n    return [\n      htmlEntity.createMention(text, target.toLowerCase()),\n      word.length - text.length,\n    ] as [htmlEntity.Mention, number];\n  }\n\n  const linkMatch = word.match(linkRegex);\n\n  if (linkMatch && linkMatch[0].length === word.length) {\n    return htmlEntity.createLink(word);\n  }\n\n  return null;\n};\n\nconst parseMessageEntities = (\n  message: string,\n  emotes: StateEmotes | null,\n  embeddedEmotes: twitchIrc.Emotes | null,\n  isOwnMessage = false,\n): MessageEntity[] => {\n  // If the message was sent by the current user, there is no embedded emotes\n  // So we need to parse twitch emotes manually\n\n  const result = [];\n  let offset = 0;\n  // Before that offset all content was added to the result array\n  let arrayOffset = 0;\n\n  // Check every word. From offset to the next space index\n  do {\n    const spaceIndex = message.indexOf(' ', offset + 1);\n\n    const isStart = offset === 0;\n    const isEnd = spaceIndex === -1;\n\n    const startIndex = isStart ? offset : offset + 1;\n    const endIndex = isEnd ? message.length : spaceIndex;\n\n    const word = message.substring(startIndex, endIndex);\n\n    if (word) {\n      let entity = null;\n\n      // Check embedded twitch emotes\n      if (\n        !isOwnMessage &&\n        embeddedEmotes &&\n        Object.keys(embeddedEmotes).length > 0\n      ) {\n        const normalizedEmotes = normalizeEmbeddedEmotes(embeddedEmotes);\n        const id = normalizedEmotes[startIndex];\n\n        if (id) {\n          entity = htmlEntity.createTwitchEmote({ id, code: word });\n        }\n      }\n\n      // Check other entities\n      if (!entity) {\n        entity = findEntity(word, emotes, isOwnMessage);\n      }\n\n      if (entity) {\n        // Push all text before this entity\n        if (arrayOffset !== startIndex) {\n          const textBefore = message.substring(arrayOffset, startIndex);\n          result.push(textBefore);\n        }\n\n        // If entity it's an array it means entity may be not full word\n        // The second element is the difference between word length and entity length\n        if (Array.isArray(entity)) {\n          const [entityObject, difference] = entity;\n          result.push(entityObject);\n          arrayOffset = endIndex - difference;\n        } else {\n          result.push(entity);\n          arrayOffset = endIndex;\n        }\n      }\n    }\n\n    // If it's the last word and it wasn't added to the result add it now\n    if (spaceIndex === -1 && arrayOffset !== endIndex) {\n      const textAfter = message.substring(arrayOffset, endIndex);\n      result.push(textAfter);\n    }\n\n    offset = spaceIndex;\n  } while (offset !== -1);\n\n  return result;\n};\n\nexport default parseMessageEntities;\n","import uuid from 'uuid/v4';\nimport twitchIrc from 'twitch-simple-irc';\nimport * as tekko from 'tekko';\n\nimport * as api from 'api';\nimport { RootState } from 'app/rootReducer';\nimport { userIdSelector, userLoginSelector } from 'features/auth/authSlice';\nimport {\n  Message,\n  Notice,\n  UserNotice,\n  OwnMessage,\n} from 'features/chat/slice/messages';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  blockedUsersSelector,\n  globalBadgesSelector,\n  channelBadgesSelector,\n  emotesSelector,\n  StateEmotes,\n} from 'features/chat/selectors';\nimport parseMessageEntities from 'features/chat/utils/parseMessageEntities';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { writeEmotesUsageStatistic } from 'features/chat/utils/emotesUsageStatistic';\n\nexport const normalizeMessage = (\n  { message, tags, user, channel, isAction }: twitchIrc.MessageEvent,\n  chatState: ChatState,\n): Message | null => {\n  const fakeState = { chat: chatState } as RootState;\n  const blockedUsers = blockedUsersSelector(fakeState);\n\n  if (blockedUsers.includes(user)) return null;\n\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n\n  return {\n    type: 'message',\n    id: tags.id,\n    message,\n    channel,\n    entities: parseMessageEntities(message, emotes, tags.emotes),\n    user: {\n      id: tags.userId,\n      login: user,\n      displayName: tags.displayName,\n      color: tags.color,\n      badges: htmlEntity.createBadges(tags.badges, globalBadges, channelBadges),\n    },\n    timestamp: tags.tmiSentTs,\n    isAction,\n    isHistory: false,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeNotice = (\n  { message, channel, tags: { msgId } }: twitchIrc.NoticeEvent,\n  id: string,\n): Notice => ({\n  type: 'notice',\n  id,\n  message,\n  channel,\n  noticeType: msgId,\n});\n\nexport const normalizeUserNotice = ({\n  message,\n  channel,\n  tags: { id, msgId, login, systemMsg },\n}: twitchIrc.UserNoticeEvent): UserNotice => ({\n  type: 'user-notice',\n  id,\n  message,\n  channel,\n  noticeType: msgId,\n  systemMessage: systemMsg,\n  user: {\n    login,\n  },\n});\n\nexport const normalizeOwnMessage = (\n  { message, channel, tags }: OwnMessage,\n  state: RootState,\n): Message => {\n  const globalBadges = globalBadgesSelector(state);\n  const channelBadges = channelBadgesSelector(state);\n  const emotes = emotesSelector(state);\n  const userId = userIdSelector(state);\n  const userLogin = userLoginSelector(state);\n\n  const isAction = message.startsWith('/me ');\n  const normalizedMessage = isAction ? message.slice(4) : message;\n\n  const entities = parseMessageEntities(normalizedMessage, emotes, null, true);\n  writeEmotesUsageStatistic(entities);\n\n  return {\n    type: 'message',\n    id: uuid(),\n    message: normalizedMessage,\n    channel,\n    entities,\n    user: {\n      id: userId as string,\n      login: userLogin as string,\n      displayName: tags.displayName,\n      color: tags.color,\n      badges: htmlEntity.createBadges(tags.badges, globalBadges, channelBadges),\n    },\n    timestamp: Date.now(),\n    isAction,\n    isHistory: false,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeHistoryMessage = (\n  { tags, params: [channel, message], prefix }: tekko.Message,\n  emotes: StateEmotes,\n  globalBadges: Record<string, api.TwitchBadge>,\n  channelBadges: Record<string, api.TwitchBadge>,\n): Message => {\n  const isAction = twitchIrc.getIsAction(message);\n  const normalizedMessage = isAction\n    ? twitchIrc.normalizeActionMessage(message)\n    : message;\n  const parsedTags = (twitchIrc.parseMessageTags(\n    tags,\n  ) as unknown) as twitchIrc.MessageTags;\n\n  return {\n    type: 'message',\n    id: parsedTags.id,\n    message,\n    channel: channel.slice(1),\n    entities: parseMessageEntities(\n      normalizedMessage,\n      emotes,\n      parsedTags.emotes,\n    ),\n    user: {\n      id: parsedTags.userId,\n      login: prefix ? prefix.name : '',\n      displayName: parsedTags.displayName,\n      color: parsedTags.color,\n      badges: htmlEntity.createBadges(\n        parsedTags.badges,\n        globalBadges,\n        channelBadges,\n      ),\n    },\n    timestamp: parsedTags.tmiSentTs,\n    isAction,\n    isHistory: true,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeHistoryMessages = (\n  rawMessages: string[],\n  chatState: ChatState,\n): Message[] => {\n  const fakeState = { chat: chatState } as RootState;\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n  const blockedUsers = blockedUsersSelector(fakeState);\n\n  return rawMessages.reduce<Message[]>((acc, rawMessage) => {\n    const message = tekko.parse(rawMessage) as tekko.Message;\n\n    const { command, prefix } = message;\n\n    if (\n      command === 'PRIVMSG' &&\n      prefix &&\n      !blockedUsers.includes(prefix.name)\n    ) {\n      acc.push(\n        normalizeHistoryMessage(message, emotes, globalBadges, channelBadges),\n      );\n    }\n\n    return acc;\n  }, []);\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport * as api from 'api';\nimport {\n  FetchFlags,\n  initialFetchFlags,\n  CHANNEL_MESSAGES_LIMIT,\n  STORE_USERS_LIMIT,\n} from 'utils/constants';\nimport assertNever from 'utils/assertNever';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport {\n  normalizeMessage,\n  normalizeNotice,\n  normalizeUserNotice,\n  normalizeHistoryMessages,\n} from 'features/chat/utils/normalizeMessages';\nimport { ChatState } from 'features/chat/slice';\n\nexport type MessageEntity =\n  | htmlEntity.TwitchEmote\n  | htmlEntity.BttvEmote\n  | htmlEntity.FfzEmote\n  | htmlEntity.Emoji\n  | htmlEntity.Mention\n  | htmlEntity.Link\n  | string;\n\nexport type Message = {\n  type: 'message';\n  id: string;\n  message: string;\n  channel: string;\n  entities: MessageEntity[];\n  user: {\n    id: string;\n    login: string;\n    displayName: string;\n    color: string;\n    badges: htmlEntity.Badge[];\n  };\n  timestamp: number;\n  isAction: boolean;\n  isHistory: boolean;\n  isDeleted: boolean;\n};\n\nexport type Notice = {\n  type: 'notice';\n  id: string;\n  message: string;\n  channel: string;\n  noticeType: string;\n};\n\nexport type UserNotice = {\n  type: 'user-notice';\n  id: string;\n  message: string;\n  channel: string;\n  noticeType: keyof typeof twitchIrc.UserNoticeType;\n  systemMessage: string;\n  user: {\n    login: string;\n  };\n};\n\nexport type ChatMessage = Message | Notice | UserNotice;\n\nexport type OwnMessage = {\n  message: string;\n  channel: string;\n  tags: twitchIrc.UserStateTags;\n};\n\ntype AddMessage = {\n  type: 'message';\n  message: twitchIrc.MessageEvent;\n};\ntype AddNotice = {\n  type: 'notice';\n  id: string;\n  message: twitchIrc.NoticeEvent;\n};\ntype AddUserNotice = {\n  type: 'user-notice';\n  message: twitchIrc.UserNoticeEvent;\n};\ntype AddOwnMessage = {\n  type: 'own-message';\n  message: Message;\n};\n\ntype AddMessagePayload = AddMessage | AddNotice | AddUserNotice | AddOwnMessage;\n\ntype MessagesStateChannel = {\n  history: FetchFlags & {\n    isAdded: boolean;\n    items: string[];\n  };\n  isEven: boolean;\n  items: ChatMessage[];\n  users: string[];\n};\n\nexport type MessagesState = Record<string, MessagesStateChannel>;\n\nexport const messagesInitialState: MessagesState = {};\n\nconst messagesChannelInitialState = {\n  history: {\n    ...initialFetchFlags,\n    isAdded: false,\n    items: [],\n  },\n  isEven: false,\n  items: [],\n  users: [],\n};\n\nfunction sliceMessages<T>(items: T[]): T[] {\n  const diff = items.length - CHANNEL_MESSAGES_LIMIT;\n\n  return diff > 0 ? items.slice(diff) : items;\n}\n\nfunction sliceUsers<T>(users: T[]): T[] {\n  const diff = users.length - STORE_USERS_LIMIT;\n\n  return diff > 0 ? users.slice(diff) : users;\n}\n\nconst getIsEven = (\n  prev: boolean,\n  addedItemsCount: number,\n  isSliced: boolean,\n): boolean => {\n  if (isSliced) {\n    return addedItemsCount % 2 ? !prev : prev;\n  }\n\n  return prev;\n};\n\nconst normalizePayload = (\n  data: AddMessagePayload,\n  chatState: ChatState,\n): ChatMessage | null => {\n  if (data.type === 'message') {\n    return normalizeMessage(data.message, chatState);\n  }\n\n  if (data.type === 'notice') {\n    return normalizeNotice(data.message, data.id);\n  }\n\n  if (data.type === 'user-notice') {\n    return normalizeUserNotice(data.message);\n  }\n\n  if (data.type === 'own-message') {\n    return data.message;\n  }\n\n  return assertNever(data);\n};\n\nexport const messagesReducers = {\n  clearChat: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.ClearChatEvent>,\n  ): void => {\n    const {\n      channel,\n      tags: { targetUserId },\n    } = payload;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const message of state.messages[channel].items) {\n      if (\n        message.type === 'message' &&\n        message.user.id === targetUserId &&\n        !message.isHistory\n      ) {\n        message.isDeleted = true;\n      }\n    }\n  },\n\n  addMessage: (\n    state: ChatState,\n    { payload }: PayloadAction<AddMessagePayload>,\n  ): void => {\n    const message = normalizePayload(payload, state);\n\n    if (!message) return;\n\n    const { channel } = message;\n\n    const prevItems = state.messages[channel].items;\n    const newItems = [...prevItems, message];\n    const slicedMessages = sliceMessages(newItems);\n\n    const isSliced = newItems.length > slicedMessages.length;\n    const prevIsEven = state.messages[channel].isEven;\n\n    state.messages[channel].isEven = getIsEven(prevIsEven, 1, isSliced);\n    state.messages[channel].items = slicedMessages;\n\n    // add user\n    const { users } = state.messages[channel];\n\n    if (\n      message.type === 'message' &&\n      !users.includes(message.user.displayName)\n    ) {\n      users.push(message.user.displayName);\n    }\n\n    state.messages[channel].users = sliceUsers(users);\n  },\n\n  addChatHistory: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    const channel = payload;\n\n    const rawHistory = state.messages[channel].history.items;\n    const history = normalizeHistoryMessages(sliceMessages(rawHistory), state);\n    const prevItems = state.messages[channel].items;\n    const newItems = [...history, ...prevItems];\n    const slicedMessages = sliceMessages(newItems);\n\n    const isSliced = newItems.length > slicedMessages.length;\n    const prevIsEven = state.messages[channel].isEven;\n\n    state.messages[channel].isEven = getIsEven(\n      prevIsEven,\n      history.length,\n      isSliced,\n    );\n    state.messages[channel].items = slicedMessages;\n\n    // add users\n    const { users } = state.messages[channel];\n\n    history.forEach((message) => {\n      if (\n        message.type === 'message' &&\n        !users.includes(message.user.displayName)\n      ) {\n        users.push(message.user.displayName);\n      }\n    });\n\n    state.messages[channel].history.items = [];\n    state.messages[channel].history.isAdded = true;\n  },\n\n  fetchChatHistoryRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.messages[channel]) {\n      state.messages[channel] = messagesChannelInitialState;\n    }\n\n    setFetchFlags(state.messages[channel].history, 'request');\n  },\n\n  fetchChatHistorySuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: api.ChatHistoryResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.messages[channel].history.items = data.messages;\n\n    setFetchFlags(state.messages[channel].history, 'success');\n  },\n\n  fetchChatHistoryFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.messages[channel].history, 'failure', error);\n  },\n};\n","import * as R from 'ramda';\n\nimport * as api from 'api';\n\nexport const parseTwitchGlobalEmotes = R.pipe<\n  api.TwitchEmotesResponse,\n  Record<string, api.TwitchEmote[]>,\n  Record<string, api.TwitchEmote[]>\n>(R.prop('emoticon_sets'), R.pick(['0']));\n\nexport const parseTwitchChannelEmotes = R.pipe<\n  api.TwitchEmotesResponse,\n  Record<string, api.TwitchEmote[]>,\n  Record<string, api.TwitchEmote[]>\n>(R.prop('emoticon_sets'), R.omit(['0']));\n\nexport const parseBttvGlobalEmotes = (\n  data: api.BttvGlobalEmotesResponse,\n): api.BttvGlobalEmote[] => data;\n\nexport const parseBttvChannelEmotes = (\n  data: api.BttvChannelEmotesResponse,\n): api.BttvChannelEmote[] => [...data.channelEmotes, ...data.sharedEmotes];\n\nexport const parseFfzGlobalEmotes = ({\n  default_sets: defaultSets,\n  sets,\n}: api.FfzGlobalEmotesResponse): api.FfzEmote[] =>\n  R.pipe<any, any, any, any, api.FfzEmote[]>(\n    R.pick((defaultSets as unknown) as string[]),\n    R.values,\n    R.map(R.propOr([], 'emoticons')),\n    R.flatten,\n  )(sets);\n\nexport const parseFfzChannelEmotes: (\n  data: api.FfzChannelEmotesResponse,\n) => api.FfzEmote[] = R.pipe(\n  R.pathOr({}, ['sets']),\n  R.values,\n  R.map(R.pathOr([], ['emoticons'])),\n  R.flatten,\n);\n\nexport const parseBlockedUsers = R.pipe<\n  api.TwitchBlockedUsersResponse,\n  {}[],\n  string[]\n>(R.prop('blocks'), R.map<any, any>(R.path(['user', 'name'])));\n\nexport const parseBadges = R.prop('badge_sets');\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  parseTwitchGlobalEmotes,\n  parseTwitchChannelEmotes,\n} from 'features/chat/utils/parseApiResponse';\n\nexport type TwitchEmotesState = FetchFlags & {\n  global: Record<string, api.TwitchEmote[]>;\n  user: Record<string, api.TwitchEmote[]>;\n};\n\nexport const twitchEmotesInitialState: TwitchEmotesState = {\n  ...initialFetchFlags,\n  global: {},\n  user: {},\n};\n\nexport const twitchEmotesReducers = {\n  fetchTwitchEmotesRequest: (state: ChatState): void => {\n    setFetchFlags(state.twitchEmotes, 'request');\n  },\n\n  fetchTwitchEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<api.TwitchEmotesResponse>,\n  ): void => {\n    state.twitchEmotes.global = parseTwitchGlobalEmotes(payload);\n    state.twitchEmotes.user = parseTwitchChannelEmotes(payload);\n\n    setFetchFlags(state.twitchEmotes, 'success');\n  },\n\n  fetchTwitchEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.twitchEmotes, 'failure', payload);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  parseBttvGlobalEmotes,\n  parseBttvChannelEmotes,\n} from 'features/chat/utils/parseApiResponse';\n\ntype BttvGlobalEmotes = FetchFlags & {\n  items: api.BttvGlobalEmote[];\n};\n\ntype BttvChannelEmotes = FetchFlags & {\n  items: api.BttvChannelEmote[];\n};\n\nexport type BttvEmotesState = {\n  global: BttvGlobalEmotes;\n  byChannels: Record<string, BttvChannelEmotes>;\n};\n\nexport const bttvEmotesInitialState: BttvEmotesState = {\n  global: {\n    ...initialFetchFlags,\n    items: [],\n  },\n  byChannels: {},\n};\n\nconst bttvChannelEmotesInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const bttvEmotesReducers = {\n  fetchBttvGlobalEmotesRequest: (state: ChatState) => {\n    setFetchFlags(state.bttvEmotes.global, 'request');\n  },\n\n  fetchBttvGlobalEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<api.BttvGlobalEmotesResponse>,\n  ): void => {\n    state.bttvEmotes.global.items = parseBttvGlobalEmotes(payload);\n\n    setFetchFlags(state.bttvEmotes.global, 'success');\n  },\n\n  fetchBttvGlobalEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.bttvEmotes.global, 'failure', payload);\n  },\n\n  fetchBttvChannelEmotesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.bttvEmotes.byChannels[channel]) {\n      state.bttvEmotes.byChannels[channel] = bttvChannelEmotesInitialState;\n    }\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'request');\n  },\n\n  fetchBttvChannelEmotesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: api.BttvChannelEmotesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.bttvEmotes.byChannels[channel].items = parseBttvChannelEmotes(data);\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'success');\n  },\n\n  fetchBttvChannelEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  parseFfzGlobalEmotes,\n  parseFfzChannelEmotes,\n} from 'features/chat/utils/parseApiResponse';\n\ntype FfzEmotes = FetchFlags & {\n  items: api.FfzEmote[];\n};\n\nexport type FfzEmotesState = {\n  global: FfzEmotes;\n  byChannels: Record<string, FfzEmotes>;\n};\n\nexport const ffzEmotesInitialState: FfzEmotesState = {\n  global: {\n    ...initialFetchFlags,\n    items: [],\n  },\n  byChannels: {},\n};\n\nconst ffzChannelEmotesInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const ffzEmotesReducers = {\n  fetchFfzGlobalEmotesRequest: (state: ChatState) => {\n    setFetchFlags(state.ffzEmotes.global, 'request');\n  },\n\n  fetchFfzGlobalEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<api.FfzGlobalEmotesResponse>,\n  ): void => {\n    state.ffzEmotes.global.items = parseFfzGlobalEmotes(payload);\n\n    setFetchFlags(state.ffzEmotes.global, 'success');\n  },\n\n  fetchFfzGlobalEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.ffzEmotes.global, 'failure', payload);\n  },\n\n  fetchFfzChannelEmotesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.ffzEmotes.byChannels[channel]) {\n      state.ffzEmotes.byChannels[channel] = ffzChannelEmotesInitialState;\n    }\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'request');\n  },\n\n  fetchFfzChannelEmotesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: api.FfzChannelEmotesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.ffzEmotes.byChannels[channel].items = parseFfzChannelEmotes(data);\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'success');\n  },\n\n  fetchFfzChannelEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport { parseBadges } from 'features/chat/utils/parseApiResponse';\n\ntype Badges = FetchFlags & {\n  items: Record<string, api.TwitchBadge>;\n};\n\nexport type BadgesState = {\n  global: Badges;\n  byChannels: Record<string, Badges>;\n};\n\nexport const badgesInitialState: BadgesState = {\n  global: {\n    ...initialFetchFlags,\n    items: {},\n  },\n  byChannels: {},\n};\n\nconst badgesChannelInitialState = {\n  ...initialFetchFlags,\n  items: {},\n};\n\nexport const badgesReducers = {\n  fetchGlobalBadgesRequest: (state: ChatState) => {\n    setFetchFlags(state.badges.global, 'request');\n  },\n\n  fetchGlobalBadgesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<api.TwitchBadgesResponse>,\n  ): void => {\n    state.badges.global.items = parseBadges(payload);\n\n    setFetchFlags(state.badges.global, 'success');\n  },\n\n  fetchGlobalBadgesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.badges.global, 'failure', payload);\n  },\n\n  fetchChannelBadgesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.badges.byChannels[channel]) {\n      state.badges.byChannels[channel] = badgesChannelInitialState;\n    }\n\n    setFetchFlags(state.badges.byChannels[channel], 'request');\n  },\n\n  fetchChannelBadgesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: api.TwitchBadgesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.badges.byChannels[channel].items = parseBadges(data);\n\n    setFetchFlags(state.badges.byChannels[channel], 'success');\n  },\n\n  fetchChannelBadgesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.badges.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport twitchIrc from 'twitch-simple-irc';\n\nimport { ChatState } from 'features/chat/slice';\n\ntype Params = {\n  room: twitchIrc.RoomStateTags | null;\n  user: twitchIrc.UserStateTags | null;\n};\n\nexport type ParamsState = {\n  global: twitchIrc.GlobalUserStateTags | null;\n  byChannels: Record<string, Params>;\n};\n\nexport const paramsInitialState: ParamsState = {\n  global: null,\n  byChannels: {},\n};\n\nconst channelParamsInitialState = {\n  room: null,\n  user: null,\n};\n\nexport const paramsReducers = {\n  updateGlobalUserParams: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.GlobalUserStateEvent>,\n  ): void => {\n    state.params.global = payload.tags;\n  },\n\n  updateUserParams: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.UserStateEvent>,\n  ): void => {\n    const { channel, tags } = payload;\n\n    if (!state.params.byChannels[channel]) {\n      state.params.byChannels[channel] = channelParamsInitialState;\n    }\n\n    state.params.byChannels[channel].user = tags;\n  },\n\n  updateRoomParams: (\n    state: ChatState,\n    { payload }: PayloadAction<twitchIrc.RoomStateEvent>,\n  ): void => {\n    const { channel, tags } = payload;\n\n    if (!state.params.byChannels[channel]) {\n      state.params.byChannels[channel] = channelParamsInitialState;\n    }\n\n    // TODO: merge tags\n    state.params.byChannels[channel].room = tags;\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\nimport { parseBlockedUsers } from 'features/chat/utils/parseApiResponse';\n\nexport type BlockedUsersState = FetchFlags & {\n  items: string[];\n};\n\nexport const blockedUsersInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const blockedUsersReducers = {\n  fetchBlockedUsersRequest: (state: ChatState): void => {\n    setFetchFlags(state.blockedUsers, 'request');\n  },\n\n  fetchBlockedUsersSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<api.TwitchBlockedUsersResponse>,\n  ): void => {\n    state.blockedUsers.items = parseBlockedUsers(payload);\n\n    setFetchFlags(state.blockedUsers, 'success');\n  },\n\n  fetchBlockedUsersFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.blockedUsers, 'failure', payload);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { AppThunk } from 'app/store';\nimport {\n  messagesInitialState,\n  messagesReducers,\n  MessagesState,\n  OwnMessage,\n} from 'features/chat/slice/messages';\nimport {\n  twitchEmotesInitialState,\n  twitchEmotesReducers,\n  TwitchEmotesState,\n} from 'features/chat/slice/twitchEmotes';\nimport {\n  bttvEmotesInitialState,\n  bttvEmotesReducers,\n  BttvEmotesState,\n} from 'features/chat/slice/bttvEmotes';\nimport {\n  ffzEmotesInitialState,\n  ffzEmotesReducers,\n  FfzEmotesState,\n} from 'features/chat/slice/ffzEmotes';\nimport {\n  badgesInitialState,\n  badgesReducers,\n  BadgesState,\n} from 'features/chat/slice/badges';\nimport {\n  paramsInitialState,\n  paramsReducers,\n  ParamsState,\n} from 'features/chat/slice/params';\nimport {\n  blockedUsersInitialState,\n  blockedUsersReducers,\n  BlockedUsersState,\n} from 'features/chat/slice/blockedUsers';\nimport { normalizeOwnMessage } from 'features/chat/utils/normalizeMessages';\n\nexport type ChatState = {\n  isConnected: boolean;\n  currentChannel: string;\n  messages: MessagesState;\n  twitchEmotes: TwitchEmotesState;\n  bttvEmotes: BttvEmotesState;\n  ffzEmotes: FfzEmotesState;\n  badges: BadgesState;\n  params: ParamsState;\n  blockedUsers: BlockedUsersState;\n};\n\nconst initialState: ChatState = {\n  isConnected: false,\n  currentChannel: '',\n  messages: messagesInitialState,\n  twitchEmotes: twitchEmotesInitialState,\n  bttvEmotes: bttvEmotesInitialState,\n  ffzEmotes: ffzEmotesInitialState,\n  badges: badgesInitialState,\n  params: paramsInitialState,\n  blockedUsers: blockedUsersInitialState,\n};\n\nconst chat = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    updateIsConnected: (state, { payload }: PayloadAction<boolean>): void => {\n      state.isConnected = payload;\n    },\n    updateCurrentChannel: (state, { payload }: PayloadAction<string>): void => {\n      state.currentChannel = payload;\n    },\n\n    ...messagesReducers,\n    ...twitchEmotesReducers,\n    ...bttvEmotesReducers,\n    ...ffzEmotesReducers,\n    ...badgesReducers,\n    ...paramsReducers,\n    ...blockedUsersReducers,\n  },\n});\n\nexport const {\n  updateIsConnected,\n  updateCurrentChannel,\n\n  // messages\n  clearChat,\n  addMessage,\n  addChatHistory,\n\n  // params\n  updateGlobalUserParams,\n  updateUserParams,\n  updateRoomParams,\n} = chat.actions;\n\nexport default chat.reducer;\n\nconst {\n  // messages\n  fetchChatHistoryRequest,\n  fetchChatHistorySuccess,\n  fetchChatHistoryFailure,\n\n  // twitch emotes\n  fetchTwitchEmotesRequest,\n  fetchTwitchEmotesSuccess,\n  fetchTwitchEmotesFailure,\n\n  // bttv emotes\n  fetchBttvGlobalEmotesRequest,\n  fetchBttvGlobalEmotesSuccess,\n  fetchBttvGlobalEmotesFailure,\n  fetchBttvChannelEmotesRequest,\n  fetchBttvChannelEmotesSuccess,\n  fetchBttvChannelEmotesFailure,\n\n  // ffz emotes\n  fetchFfzGlobalEmotesRequest,\n  fetchFfzGlobalEmotesSuccess,\n  fetchFfzGlobalEmotesFailure,\n  fetchFfzChannelEmotesRequest,\n  fetchFfzChannelEmotesSuccess,\n  fetchFfzChannelEmotesFailure,\n\n  // badges\n  fetchGlobalBadgesRequest,\n  fetchGlobalBadgesSuccess,\n  fetchGlobalBadgesFailure,\n  fetchChannelBadgesRequest,\n  fetchChannelBadgesSuccess,\n  fetchChannelBadgesFailure,\n\n  // blocked users\n  fetchBlockedUsersRequest,\n  fetchBlockedUsersSuccess,\n  fetchBlockedUsersFailure,\n} = chat.actions;\n\nexport const fetchChatHistory = (channel: string): AppThunk => async (\n  dispatch,\n) => {\n  try {\n    dispatch(fetchChatHistoryRequest({ channel }));\n    const data = await api.fetchChatHistory(channel);\n    dispatch(fetchChatHistorySuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchChatHistoryFailure({ channel, error }));\n  }\n};\n\nexport const fetchTwitchEmotes = (userId: string): AppThunk => async (\n  dispatch,\n) => {\n  try {\n    dispatch(fetchTwitchEmotesRequest());\n    const data = await api.fetchTwitchEmotes(userId);\n    dispatch(fetchTwitchEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchTwitchEmotesFailure(error));\n  }\n};\n\nexport const fetchBttvGlobalEmotes = (): AppThunk => async (dispatch) => {\n  try {\n    dispatch(fetchBttvGlobalEmotesRequest());\n    const data = await api.fetchBttvGlobalEmotes();\n    dispatch(fetchBttvGlobalEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchBttvGlobalEmotesFailure(error));\n  }\n};\n\nexport const fetchBttvChannelEmotes = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(fetchBttvChannelEmotesRequest({ channel }));\n    const data = await api.fetchBttvChannelEmotes(channelId);\n    dispatch(fetchBttvChannelEmotesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchBttvChannelEmotesFailure({ channel, error }));\n  }\n};\n\nexport const fetchFfzGlobalEmotes = (): AppThunk => async (dispatch) => {\n  try {\n    dispatch(fetchFfzGlobalEmotesRequest());\n    const data = await api.fetchFfzGlobalEmotes();\n    dispatch(fetchFfzGlobalEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchFfzGlobalEmotesFailure(error));\n  }\n};\n\nexport const fetchFfzChannelEmotes = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(fetchFfzChannelEmotesRequest({ channel }));\n    const data = await api.fetchFfzChannelEmotes(channelId);\n    dispatch(fetchFfzChannelEmotesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchFfzChannelEmotesFailure({ channel, error }));\n  }\n};\n\nexport const fetchGlobalBadges = (): AppThunk => async (dispatch) => {\n  try {\n    dispatch(fetchGlobalBadgesRequest());\n    const data = await api.fetchGlobalBadges();\n    dispatch(fetchGlobalBadgesSuccess(data));\n  } catch (error) {\n    dispatch(fetchGlobalBadgesFailure(error));\n  }\n};\n\nexport const fetchChannelBadges = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(fetchChannelBadgesRequest({ channel }));\n    const data = await api.fetchChannelBadges(channelId);\n    dispatch(fetchChannelBadgesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchChannelBadgesFailure({ channel, error }));\n  }\n};\n\nexport const fetchBlockedUsers = (userId: string): AppThunk => async (\n  dispatch,\n) => {\n  try {\n    dispatch(fetchBlockedUsersRequest());\n    const data = await api.fetchBlockedUsers(userId);\n    dispatch(fetchBlockedUsersSuccess(data));\n  } catch (error) {\n    dispatch(fetchBlockedUsersFailure(error));\n  }\n};\n\nexport const addOwnMessage = (ownMessage: OwnMessage): AppThunk => async (\n  dispatch,\n  getState,\n) => {\n  const state = getState();\n  const message = normalizeOwnMessage(ownMessage, state);\n\n  dispatch(addMessage({ type: 'own-message', message }));\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./twitch-simple-irc.cjs.production.min.js');\n} else {\n  module.exports = require('./twitch-simple-irc.cjs.development.js');\n}","import * as R from 'ramda';\n\nimport * as api from 'api';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors';\nimport getEmotesByText from 'features/chat/utils/getEmotesByText';\nimport { getEmotesFromUsageStatistic } from 'features/chat/utils/emotesUsageStatistic';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport type EmoteCategory = {\n  title?: string;\n  items: htmlEntity.Emote[];\n};\n\nconst getTwitchUserEmoteCategories = R.pipe<\n  Record<string, api.TwitchEmote[]>,\n  api.TwitchEmote[][],\n  EmoteCategory[]\n>(\n  R.values,\n  R.map((items) => ({ items: R.map(htmlEntity.createTwitchEmote, items) })),\n);\n\nconst createMainEmoteCategories = (emotes: StateEmotes) => {\n  if (!emotes) return [];\n\n  const {\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  } = emotes;\n\n  return [\n    {\n      title: 'BetterTTV Channel Emotes',\n      items: bttvChannel.map(htmlEntity.createBttvEmote),\n    },\n    {\n      title: 'FrankerFaceZ Channel Emotes',\n      items: ffzChannel.map(htmlEntity.createFfzEmote),\n    },\n    ...getTwitchUserEmoteCategories(twitchUser),\n    {\n      title: 'Twitch',\n      items: R.map(\n        htmlEntity.createTwitchEmote,\n        R.propOr([], '0', twitchGlobal),\n      ),\n    },\n    {\n      title: 'BetterTTV',\n      items: bttvGlobal.map(htmlEntity.createBttvEmote),\n    },\n    {\n      title: 'FrankerFaceZ',\n      items: ffzGlobal.map(htmlEntity.createFfzEmote),\n    },\n  ].filter(R.path(['items', 'length'])) as EmoteCategory[];\n};\n\nconst getMainEmoteCategories = createSelector(\n  (emotes: any) => emotes,\n  createMainEmoteCategories,\n);\n\nconst createEmoteCategories = (emotes: StateEmotes, text: string) => {\n  if (!emotes) return [];\n\n  if (text) {\n    const items = getEmotesByText(text, emotes);\n    const title = `${items.length ? '' : 'No '}Search Results for \"${text}\"`;\n\n    return [{ title, items }];\n  }\n\n  const mainEmoteCategories = getMainEmoteCategories(emotes);\n  const frequentlyUsed = getEmotesFromUsageStatistic(emotes);\n\n  if (!frequentlyUsed.length) {\n    return mainEmoteCategories;\n  }\n\n  const frequentlyUsedCategory = {\n    title: 'Frequently Used',\n    items: frequentlyUsed,\n  };\n\n  return [frequentlyUsedCategory, ...mainEmoteCategories] as EmoteCategory[];\n};\n\nexport default createEmoteCategories;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport * as api from 'api';\nimport { RootState } from 'app/rootReducer';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { ChatMessage } from 'features/chat/slice/messages';\nimport createEmoteCategories from 'features/chat/utils/createEmoteCategories';\n\nexport type StateEmotes = {\n  twitchGlobal: Record<string, api.TwitchEmote[]>;\n  twitchUser: Record<string, api.TwitchEmote[]>;\n  bttvGlobal: api.BttvGlobalEmote[];\n  bttvChannel: api.BttvChannelEmote[];\n  ffzGlobal: api.FfzEmote[];\n  ffzChannel: api.FfzEmote[];\n} | null;\n\nexport const currentChannelSelector = (state: RootState) =>\n  state.chat.currentChannel;\n\nexport const isConnectedSelector = (state: RootState) => state.chat.isConnected;\n\n// messages\n\nexport const messagesSelector = (state: RootState): ChatMessage[] =>\n  state.chat.messages[currentChannelSelector(state)]?.items || [];\n\nexport const usersSelector = (state: RootState): string[] =>\n  state.chat.messages[currentChannelSelector(state)]?.users || [];\n\nexport const isHistoryLoadedSelector = (state: RootState) =>\n  state.chat.messages[currentChannelSelector(state)]?.history.isLoaded || false;\n\nexport const isHistoryAddedSelector = (state: RootState) =>\n  state.chat.messages[currentChannelSelector(state)]?.history.isAdded || false;\n\nexport const isEvenSelector = (state: RootState) =>\n  state.chat.messages[currentChannelSelector(state)]?.isEven || false;\n\n// emotes isLoaded\n\nexport const isTwitchEmotesLoadedSelector = (state: RootState) =>\n  state.chat.twitchEmotes.isLoaded;\n\nexport const isBttvGlobalEmotesLoadedSelector = (state: RootState) =>\n  state.chat.bttvEmotes.global.isLoaded;\n\nexport const isBttvChannelEmotesLoadedSelector = (state: RootState) =>\n  state.chat.bttvEmotes.byChannels[currentChannelSelector(state)]?.isLoaded ||\n  false;\n\nexport const isBttvEmotesLoadedSelector = (state: RootState) =>\n  isBttvGlobalEmotesLoadedSelector(state) &&\n  isBttvChannelEmotesLoadedSelector(state);\n\nexport const isFfzGlobalEmotesLoadedSelector = (state: RootState) =>\n  state.chat.ffzEmotes.global.isLoaded;\n\nexport const isFfzChannelEmotesLoadedSelector = (state: RootState) =>\n  state.chat.ffzEmotes.byChannels[currentChannelSelector(state)]?.isLoaded ||\n  false;\n\nexport const isFfzEmotesLoadedSelector = (state: RootState) =>\n  isFfzGlobalEmotesLoadedSelector(state) &&\n  isFfzChannelEmotesLoadedSelector(state);\n\nexport const isEmotesLoadedSelector = (state: RootState) =>\n  isTwitchEmotesLoadedSelector(state) &&\n  isBttvGlobalEmotesLoadedSelector(state) &&\n  isBttvChannelEmotesLoadedSelector(state) &&\n  isFfzGlobalEmotesLoadedSelector(state) &&\n  isFfzChannelEmotesLoadedSelector(state);\n\n// emotes\n\nconst twitchGlobalEmotesSelector = (state: RootState) =>\n  state.chat.twitchEmotes.global;\nconst twitchUserEmotesSelector = (state: RootState) =>\n  state.chat.twitchEmotes.user;\n\nconst bttvGlobalEmotesSelector = (state: RootState) =>\n  state.chat.bttvEmotes.global.items;\nconst bttvChannelEmotesSelector = (state: RootState) =>\n  state.chat.bttvEmotes.byChannels[currentChannelSelector(state)]?.items || [];\n\nconst ffzGlobalEmotesSelector = (state: RootState) =>\n  state.chat.ffzEmotes.global.items;\nconst ffzChannelEmotesSelector = (state: RootState) =>\n  state.chat.ffzEmotes.byChannels[currentChannelSelector(state)]?.items || [];\n\nexport const emotesSelector = createSelector(\n  isEmotesLoadedSelector,\n  twitchGlobalEmotesSelector,\n  twitchUserEmotesSelector,\n  bttvGlobalEmotesSelector,\n  bttvChannelEmotesSelector,\n  ffzGlobalEmotesSelector,\n  ffzChannelEmotesSelector,\n  (\n    isEmotesLoaded,\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  ) => {\n    if (!isEmotesLoaded) return null;\n\n    return {\n      twitchGlobal,\n      twitchUser,\n      bttvGlobal,\n      bttvChannel,\n      ffzGlobal,\n      ffzChannel,\n    } as StateEmotes;\n  },\n);\n\nexport const emoteCategoriesSelector = (state: RootState, search: string) => {\n  const emotes = emotesSelector(state);\n\n  return createEmoteCategories(emotes, search);\n};\n\n// Badges\n\nexport const userBadgesSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.user?.badges ||\n  {};\n\nexport const isGlobalBadgesLoadedSelector = (state: RootState) =>\n  state.chat.badges.global.isLoaded;\n\nexport const isChannelBadgesLoadedSelector = (state: RootState) =>\n  state.chat.badges.byChannels[currentChannelSelector(state)]?.isLoaded ||\n  false;\n\nexport const isBadgesLoadedSelector = (state: RootState) =>\n  isGlobalBadgesLoadedSelector(state) && isChannelBadgesLoadedSelector(state);\n\nexport const globalBadgesSelector = (state: RootState) =>\n  state.chat.badges.global.items;\n\nexport const channelBadgesSelector = (state: RootState) =>\n  state.chat.badges.byChannels[currentChannelSelector(state)]?.items || {};\n\nexport const userBadgesImagesSelector = createSelector(\n  userBadgesSelector,\n  globalBadgesSelector,\n  channelBadgesSelector,\n  htmlEntity.createBadges,\n);\n\n// params\n\nexport const currentChannelIdSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.room?.roomId ||\n  '';\n\nexport const userColorSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.user?.color ||\n  '';\n\nexport const userDisplayNameSelector = (state: RootState) =>\n  state.chat.params.byChannels[currentChannelSelector(state)]?.user\n    ?.displayName || '';\n\n// blocked users\n\nexport const isBlockedUsersLoadedSelector = (state: RootState) =>\n  state.chat.blockedUsers.isLoaded;\n\nexport const blockedUsersSelector = (state: RootState) =>\n  state.chat.blockedUsers.items;\n","export * from './chatSelectors';\n","import { LS_OPTIONS } from 'utils/constants';\n\nexport const readOptionsFromLocalStorage = (): object => {\n  try {\n    const options = localStorage.getItem(LS_OPTIONS);\n    return JSON.parse(options as string) || {};\n  } catch {\n    return {};\n  }\n};\n\nexport const writeOptionsToLocalStore = (options: object): void => {\n  localStorage.setItem(\n    LS_OPTIONS,\n    JSON.stringify({\n      ...readOptionsFromLocalStorage(),\n      ...options,\n    }),\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'app/store';\nimport {\n  writeOptionsToLocalStore,\n  readOptionsFromLocalStorage,\n} from 'features/options/optionsUtils';\n\ntype OptionsState = {\n  showTimestamps: boolean;\n  splitChat: boolean;\n  blacklistKeywords: string;\n  highlightKeywords: string;\n  fixedWidth: boolean;\n};\n\ntype ChangeOption = {\n  name: keyof OptionsState;\n  value: any;\n};\n\nexport const initialState: OptionsState = {\n  showTimestamps: false,\n  splitChat: true,\n  blacklistKeywords: '',\n  highlightKeywords: '',\n  fixedWidth: false,\n  ...readOptionsFromLocalStorage(),\n};\n\nconst options = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    changeOption: (state, { payload }: PayloadAction<ChangeOption>): void => {\n      const { name, value } = payload;\n      (state[name] as unknown) = value;\n    },\n  },\n});\n\nexport const { changeOption } = options.actions;\n\nexport default options.reducer;\n\nexport const changeChatOption = ({\n  name,\n  value,\n}: ChangeOption): AppThunk => async (dispatch): Promise<void> => {\n  writeOptionsToLocalStore({ [name]: value });\n  dispatch(changeOption({ name, value }));\n};\n","const assertNever = (value: never): never => value;\n\nexport default assertNever;\n","/* eslint-disable no-restricted-syntax */\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport findEmote from 'features/chat/utils/findEmote';\n\nexport type EmotesByText = {\n  begins: htmlEntity.Emote[];\n  contains: htmlEntity.Emote[];\n};\n\nconst getEmotesByText = (\n  text: string,\n  emotes: StateEmotes,\n  limit = -1,\n): htmlEntity.Emote[] => {\n  if (!emotes) return [];\n\n  const result: EmotesByText = {\n    begins: [],\n    contains: [],\n  };\n  const textLower = text.toLowerCase();\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const isOver =\n    findEmote.bttv.byText(result, emotes.bttvChannel, textLower, limit) ||\n    findEmote.ffz.byText(result, emotes.ffzChannel, textLower, limit) ||\n    findEmote.twitch.byText(result, emotes.twitchUser, textLower, limit) ||\n    findEmote.twitch.byText(result, emotes.twitchGlobal, textLower, limit) ||\n    findEmote.bttv.byText(result, emotes.bttvGlobal, textLower, limit) ||\n    findEmote.ffz.byText(result, emotes.ffzGlobal, textLower, limit);\n\n  return [...result.begins, ...result.contains];\n};\n\nexport default getEmotesByText;\n","import * as R from 'ramda';\n\nimport { LS_EMOTES_USAGE_STATISTIC } from 'utils/constants';\nimport * as htmlEntity from 'features/chat/utils/htmlEntity';\nimport findEmote from 'features/chat/utils/findEmote';\nimport { StateEmotes } from 'features/chat/selectors';\nimport { MessageEntity } from 'features/chat/slice/messages';\n\ntype Type = 'twitch-emote' | 'bttv-emote' | 'ffz-emote';\n\ntype AUsageItem = {\n  lastUpdatedAt: number;\n  uses: number;\n};\n\ntype UsageItemTwitchFfz = AUsageItem & {\n  type: 'twitch-emote' | 'ffz-emote';\n  id: number;\n};\n\ntype UsageItemBttv = AUsageItem & {\n  type: 'bttv-emote';\n  id: string;\n};\n\ntype UsageItem = UsageItemTwitchFfz | UsageItemBttv;\n\ntype EmotesUsageStatistic = Record<Type, Record<string, UsageItem>>;\n\nexport const readEmotesUsageStatistic = (): Partial<EmotesUsageStatistic> => {\n  try {\n    const statistic = localStorage.getItem(LS_EMOTES_USAGE_STATISTIC);\n\n    return JSON.parse(statistic as string) || {};\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getUsageStatisticFromEntities = R.pipe<\n  MessageEntity[],\n  any,\n  any,\n  any\n>(\n  R.filter((v: any) =>\n    R.includes(R.prop('type', v), ['twitch-emote', 'bttv-emote', 'ffz-emote']),\n  ),\n  R.groupBy<any>(R.prop('type')),\n  R.map(\n    R.pipe<any, any, any>(\n      R.groupBy<any>(R.prop('id')),\n      R.map((items: any) => ({\n        type: items[0].type,\n        id: items[0].id,\n        lastUpdatedAt: Date.now(),\n        uses: items.length,\n      })),\n    ),\n  ),\n);\n\nconst mergeFn = (key: string, left: any, right: any) =>\n  key === 'uses' ? left + right : right;\n\nexport const writeEmotesUsageStatistic = (entries: MessageEntity[]) => {\n  const statistic = getUsageStatisticFromEntities(entries) as Partial<\n    EmotesUsageStatistic\n  >;\n\n  if (R.isEmpty(statistic)) return;\n\n  const history = readEmotesUsageStatistic();\n\n  const newHistory = R.mergeDeepWithKey(mergeFn, history, statistic);\n\n  localStorage.setItem(LS_EMOTES_USAGE_STATISTIC, JSON.stringify(newHistory));\n};\n\nconst normalizeHistory = R.pipe<any, any, any, any, UsageItem[]>(\n  R.values,\n  R.map(R.values),\n  R.flatten,\n  R.sortWith([R.descend(R.prop('uses')), R.descend(R.prop('lastUpdatedAt'))]),\n);\n\nexport const getEmotesFromUsageStatistic = (\n  emotes: StateEmotes,\n  limit = 27,\n) => {\n  if (!emotes) return [];\n\n  const result: htmlEntity.Emote[] = [];\n  const history = R.pipe(readEmotesUsageStatistic, normalizeHistory)();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const item of history) {\n    if (result.length === limit) return result;\n\n    let emoteEntity = null;\n\n    if (item.type === 'twitch-emote') {\n      emoteEntity = findEmote.twitch.byId(item.id, emotes);\n    }\n\n    if (item.type === 'bttv-emote') {\n      emoteEntity = findEmote.bttv.byId(item.id, emotes);\n    }\n\n    if (item.type === 'ffz-emote') {\n      emoteEntity = findEmote.ffz.byId(item.id, emotes);\n    }\n\n    if (emoteEntity) {\n      result.push(emoteEntity);\n    }\n  }\n\n  return result;\n};\n"],"sourceRoot":""}