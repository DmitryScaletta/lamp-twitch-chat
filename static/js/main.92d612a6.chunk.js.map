{"version":3,"sources":["utils/constants.ts","features/auth/authSlice.ts","utils/normalizeHref.ts","features/chat/utils/htmlEntity.ts","../../twitch-simple-irc/dist/twitch-simple-irc.cjs.production.min.js","utils/fetchRequest.ts","hooks/useSetState.ts","features/options/optionsSelectors.ts","features/auth/hooks/useInitializeAuth.ts","features/chat/hooks/useFetchChatData.ts","hooks/useLocationHash.ts","features/chat/hooks/useCurrentChannel.ts","hooks/usePrevious.ts","features/chat/hooks/useTwitchClient.ts","features/chat/utils/getUserSuggestions.ts","features/chat/utils/getEmoteSuggestions.ts","features/chat/utils/replaceEmojis.ts","hooks/useOnClickOutside.ts","icons/close.svg","components/IconButton.tsx","components/ChatModal.tsx","icons/smiley-face.svg","components/Scrollbar.tsx","features/chat/components/EmotePicker.tsx","features/chat/components/ChatInput.tsx","icons/gears.svg","icons/twitch.svg","components/Switch.tsx","features/options/Options.tsx","features/chat/components/ChatControls.tsx","features/chat/components/Message.tsx","features/chat/components/Notice.tsx","features/chat/components/UserNotice.tsx","features/chat/components/ChatMessage.tsx","features/chat/components/Messages.tsx","features/chat/components/Chat.tsx","features/auth/Auth.tsx","features/auth/Logout.tsx","features/auth/AuthCallback.tsx","styles/common.js","styles/colors.js","styles/vars.js","styles/index.js","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","features/auth/authUtils.ts","api/twitch.ts","features/chat/selectors/chatSelectors.ts","features/chat/selectors/index.ts","api/bttv.ts","api/ffz.ts","api/chatHistory.ts","utils/setFetchFlags.ts","features/chat/utils/formatMessage.ts","features/chat/utils/normalizeMessages.ts","features/chat/slice/messages.ts","features/chat/slice/twitchEmotes.ts","features/chat/slice/bttvEmotes.ts","features/chat/slice/ffzEmotes.ts","features/chat/slice/badges.ts","features/chat/slice/params.ts","features/chat/slice/blockedUsers.ts","features/chat/slice/chatSlice.ts","../../twitch-simple-irc/dist/index.js","features/options/optionsUtils.ts","features/options/optionsSlice.ts"],"names":["TWITCH_API_AUTH_BASE","TWITCH_API_CLIENT_ID","process","TWITCH_API_REDIRECT_URI","CHANNEL_MESSAGES_LIMIT","STORE_USERS_LIMIT","API_REQUESTS_TIMEOUT","SUGGESTION_TYPES","users","name","limit","regex","emotes","NOTICE_MESSAGE_TAGS","initialFetchFlags","isLoading","isLoaded","isError","error","initialState","isAuthReady","isAuth","userId","userLogin","auth","createSlice","reducers","initializeAuth","state","payload","invalidateAuth","fetchUserRequest","fetchUserSuccess","data","id","login","fetchUserFailure","actions","fetchUser","dispatch","a","apiFetchUser","writeUserToLocatStorage","isAuthReadySelector","isAuthSelector","userLoginSelector","userIdSelector","isStartsWithProtocolRegex","normalizeHref","href","test","TWITCH_EMOTES_CDN","getFfzSrcSet","R","dpi","url","createTwitchEmote","type","alt","code","src","srcSet","createBttvEmote","createFfzEmote","urls","createEmoji","createMention","text","target","createLink","createBadges","badges","globalBadges","channelBadges","version","badge","title","description","imageUrl1x","image_url_1x","imageUrl2x","image_url_2x","imageUrl4x","image_url_4x","label","createBadge","Boolean","e","t","default","r","n","s","Object","assign","arguments","length","prototype","hasOwnProperty","call","apply","this","i","o","Math","floor","random","toString","padStart","m","startsWith","endsWith","c","slice","u","middle","d","versions","node","g","l","p","h","f","split","reduce","v","entries","includes","map","start","Number","parseInt","end","replace","S","tags","raw","channel","w","message","trailing","exports","Commands","REPLY001","PING","PONG","JOIN","PART","PRIVMSG","NOTICE","USERNOTICE","GLOBALUSERSTATE","USERSTATE","ROOMSTATE","CLEARCHAT","CLEARMSG","HOSTTARGET","WHISPER","P","socket","globalUserState","channels","_connected","_connecting","_registered","options","secure","create","constructor","__proto__","connect","_connectInNode","_connectInBrowser","Promise","resolve","then","_register","reject","disconnect","destroy","close","emit","receiveRaw","trim","forEach","_handleMessage","sendRaw","write","send","say","format","command","sendCommand","Array","isArray","join","part","parse","_updateUserState","_updateRoomState","_updateGlobalUserState","user","prefix","b","C","T","y","isAction","Socket","on","WebSocket","onopen","onmessage","onerror","onclose","wasClean","reason","Error","off","setTimeout","userState","roomState","key","get","enumerable","configurable","writable","defineProperty","EventEmitter","UserNoticeType","sub","resub","subgift","anonsubgift","submysterygift","giftpaidupgrade","rewardgift","anongiftpaidupgrade","raid","unraid","ritual","bitsbadgetier","Client","getChannelFromMessage","getIsAction","getRandomUsername","isNode","normalizeActionMessage","parseMessageTags","fetchRequest","fetchOptions","timeout","controller","AbortController","signal","abort","fetch","response","json","body","ok","statusText","useSetState","useState","set","setState","useCallback","patch","prevState","Function","optionsSelector","items","value","showTimestamps","splitChat","fixedWidth","isShowTimestampsSelector","isSplitChatSelector","isFixedWidthSelector","useInitializeAuth","useDispatch","useSelector","useEffect","idToken","localStorage","readUserFromLocatStorage","params","jwtData","jwt","decode","useFetchChatData","currentChannel","currentChannelSelector","currentChannelId","currentChannelIdSelector","isTwitchEmotesLoaded","isTwitchEmotesLoadedSelector","isBttvGlobalEmotesLoaded","isBttvGlobalEmotesLoadedSelector","isBttvChannelEmotesLoaded","isBttvChannelEmotesLoadedSelector","isFfzGlobalEmotesLoaded","isFfzGlobalEmotesLoadedSelector","isFfzChannelEmotesLoaded","isFfzChannelEmotesLoadedSelector","isGlobalBadgesLoaded","isGlobalBadgesLoadedSelector","isChannelBadgesLoaded","isChannelBadgesLoadedSelector","isHistoryLoaded","isHistoryLoadedSelector","isBlockedUsersLoaded","isBlockedUsersLoadedSelector","isHistoryAdded","isHistoryAddedSelector","isReadyToAddHistory","fetchBttvGlobalEmotes","fetchFfzGlobalEmotes","fetchGlobalBadges","addChatHistory","fetchChatHistory","fetchTwitchEmotes","fetchBlockedUsers","fetchBttvChannelEmotes","fetchFfzChannelEmotes","fetchChannelBadges","useLocationHash","window","location","hash","setHash","handleHashChange","addEventListener","removeEventListener","useCurrentChannel","updateCurrentChannel","setItem","document","usePrevious","ref","useRef","current","useTwitchClient","isConnected","isConnectedSelector","prevChannel","clientRef","registerEvents","client","updateIsConnected","updateGlobalUserParams","updateUserParams","updateRoomParams","addMessage","uuid","targetUserId","clearChat","accessToken","TwitchIrc","useMemo","handleUserState","ownMessage","timestamp","Date","getTime","removeListeners","handleNotice","msgId","getUserSuggestions","beginText","result","beginTextLower","toLowerCase","nameLower","push","checkTwitch","sets","values","emote","checkBttv","checkFfz","getEmoteSuggestions","twitchGlobal","twitchUser","bttvGlobal","bttvChannel","ffzGlobal","ffzChannel","replaceEmojis","word","emoji","emojilib","char","events","arePassiveEvents","arePassiveEventsSupported","getOptions","event","passive","undefined","isContainsNode","el","contains","useOnClickOutside","handler","handlerRef","useLatest","listener","some","_extends","source","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","_ref","svgRef","props","viewBox","ForwardRef","forwardRef","sizes","small","css","medium","IconButton","styled","button","attrs","size","defaultProps","ChatModalRoot","div","CloseButton","CloseIcon","CloseIconSvg","ChatModal","children","onClose","onClick","fillRule","clipRule","Scrollbar","CustomScrollbar","disableTracksWidthCompensation","EmotePickerRoot","Categories","Category","CategoryHeader","CategoryItems","Emote","img","EmotePicker","onEmoteClick","emoteCategories","emoteCategoriesSelector","ChatInputRoot","ChatInputInner","Suggestions","SuggestionItem","isActive","SuggestionImage","TextareaInput","TextareaWrapper","isSuggestions","EmotesModal","Textarea","textarea","EmotesButton","SmileyFaceIcon","SmileyFaceIconSvg","ChatInput","React","textareaRef","suggestions","isDisabled","onChange","onKeyUp","onKeyDown","onBlur","onSuggestionMouseEnter","onSuggestionClick","chatInputRef","suggestionsRef","suggestionNodesRef","isEmotesModalVisible","setIsEmotesModalVisible","isEmotesLoaded","isEmotesLoadedSelector","handleCloseEmotesModal","activeIndex","renderUser","index","onMouseEnter","renderEmote","renderSuggestions","placeholder","maxLength","disabled","memo","_ref4","SwitchRoot","Label","Input","input","Switch","checked","readOnly","aria-label","htmlFor","OptionsRoot","Header","h2","Option","OptionText","span","Profile","UserName","color","LogOutButton","Badge","Options","userDisplayName","userDisplayNameSelector","userColor","userColorSelector","userBadgesImages","userBadgesImagesSelector","renderOption","changeChatOption","renderOptionsCategory","logOutButton","as","Link","to","renderProfileCategory","ChatControlsRoot","Controls","OptionsModal","Button","OptionsButton","GearsIcon","GearsIconSvg","TwitchIcon","TwitchIconSvg","ChatControls","onSendMessage","isOptionsModalVisible","setIsOptionsModalVisible","optionsModalRef","handleCloseOptionsModal","optionsButton","MessageRoot","isHistory","isDeleted","isMention","isEven","Name","Emoji","Mention","isOwnMessage","Timestamp","Message","entities","displayName","isShowTimestamps","onNameRightClick","isVisible","setIsVisible","RegExp","renderBadges","onContextMenu","preventDefault","item","rel","renderMessageArray","NoticeRoot","Notice","UserNoticeRoot","systemMessage","ChatMessage","MessagesRoot","StyledScrollbar","MoreMessagesButton","Messages","isMoreMessagesButtonVisible","setIsMoreMessagesButtonVisible","messages","messagesSelector","isEvenSelector","isSplitChat","scrollbarRef","handleScrollToBottom","scrollToBottom","getIsEven","onUpdate","clientHeight","contentScrollHeight","scrollTop","ChatRoot","ChatWrapper","isFixedWidth","suggestionsInitialState","setSuggestionsIndexUp","rest","setSuggestionsIndexDown","replaceSuggestionText","currentItem","insertedText","textBefore","substring","testAfter","Chat","setText","emotesSelector","usersSelector","setSuggestions","textRef","usersRef","emotesRef","normalizedMessage","handleNameRightClick","trimLeft","focus","handleEmoteClick","handleSendMessage","handleBlur","handleChange","selectionStart","spaceIndexBefore","lastIndexOf","spaceIndexAfter","usersMatch","exec","emotesMatch","handleKeyUp","handleKeyDown","Auth","getAuthUrl","Logout","history","useHistory","removeItem","pathname","lastChannel","AuthCallback","URLSearchParams","createGlobalStyle","colors","vars","common","getHomeComponent","isAuthRedirect","App","exact","path","render","component","rootReducer","combineReducers","chat","store","configureStore","reducer","ReactGA","initialize","page","search","pageview","require","ReactDOM","getElementById","authParams","client_id","redirect_uri","response_type","scope","claims","JSON","stringify","id_token","email_verified","picture","preferred_username","apiRequestKraken","headers","Accept","Authorization","language","channelId","twitchEmotes","bttvEmotes","global","ffzEmotes","createChannelEmotesSelector","bttvChannelEmotesSelector","ffzChannelEmotesSelector","createSelector","regexEmotesMap","createGlobalTwitchEmote","filter","globalBadgesSelector","channelBadgesSelector","userBadges","blockedUsers","blockedUsersSelector","setFetchFlags","obj","mentionRegex","linkRegex","urlRegex","strict","normalizeEmotesFromTags","regexMap","4","9","findTwitchEmote","findTwitchEmoteInSets","findBttvEmote","findFfzEmote","findEntity","parseTwitch","twitchEmote","bttvEmote","ffzEmote","emojiMatch","twemojiParser","assetType","mentionMatch","match","linkMatch","formatMessage","embeddedEmotes","offset","arrayOffset","spaceIndex","isStart","isEnd","startIndex","endIndex","entity","normalizedEmbeddedEmotes","embeddedEmote","entityObject","difference","textAfter","normalizeHistoryMessages","rawMessages","chatState","fakeState","acc","rawMessage","tekko","parsedTags","tmiSentTs","normalizeHistoryMessage","messagesChannelInitialState","isAdded","sliceMessages","diff","prev","addedItemsCount","isSliced","normalizePayload","normalizeMessage","noticeType","systemMsg","normalizeUserNotice","normalizeOwnMessage","messagesReducers","prevItems","newItems","slicedMessages","prevIsEven","sliceUsers","rawHistory","fetchChatHistoryRequest","fetchChatHistorySuccess","fetchChatHistoryFailure","twitchEmotesInitialState","twitchEmotesReducers","fetchTwitchEmotesRequest","fetchTwitchEmotesSuccess","emoticon_sets","fetchTwitchEmotesFailure","bttvEmotesInitialState","byChannels","bttvChannelEmotesInitialState","bttvEmotesReducers","fetchBttvGlobalEmotesRequest","fetchBttvGlobalEmotesSuccess","fetchBttvGlobalEmotesFailure","fetchBttvChannelEmotesRequest","fetchBttvChannelEmotesSuccess","channelEmotes","sharedEmotes","fetchBttvChannelEmotesFailure","ffzEmotesInitialState","ffzChannelEmotesInitialState","parseFfzChannelEmotes","ffzEmotesReducers","fetchFfzGlobalEmotesRequest","fetchFfzGlobalEmotesSuccess","defaultSets","default_sets","parseFfzGlobalEmotes","fetchFfzGlobalEmotesFailure","fetchFfzChannelEmotesRequest","fetchFfzChannelEmotesSuccess","fetchFfzChannelEmotesFailure","badgesInitialState","badgesChannelInitialState","badgesReducers","fetchGlobalBadgesRequest","fetchGlobalBadgesSuccess","badge_sets","fetchGlobalBadgesFailure","fetchChannelBadgesRequest","fetchChannelBadgesSuccess","fetchChannelBadgesFailure","channelParamsInitialState","room","paramsReducers","blockedUsersInitialState","parseBlockedUsers","blockedUsersReducers","fetchBlockedUsersRequest","fetchBlockedUsersSuccess","fetchBlockedUsersFailure","chatHistoryApi","twitchApi","bttvApi","ffzApi","module","readOptionsFromLocalStorage","writeOptionsToLocalStore","blacklistKeywords","highlightKeywords","changeOption"],"mappings":"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","file":"static/js/main.92d612a6.chunk.js","sourcesContent":["export const TWITCH_API_AUTH_BASE = 'https://id.twitch.tv/oauth2/authorize';\n\nexport const TWITCH_API_CLIENT_ID = process.env.REACT_APP_TWITCH_API_CLIENT_ID;\nexport const TWITCH_API_REDIRECT_URI =\n  process.env.REACT_APP_TWITCH_API_REDIRECT_URI;\n\nexport const CHANNEL_MESSAGES_LIMIT = 500;\nexport const STORE_USERS_LIMIT = 500;\n\nexport const API_REQUESTS_TIMEOUT = 10000;\n\nexport const SUGGESTION_TYPES = {\n  users: {\n    name: 'users',\n    limit: 5,\n    regex: /^@([\\w\\d_]*)$/,\n  },\n  emotes: {\n    name: 'emotes',\n    limit: 10,\n    regex: /^:([\\w\\d_]{2,})$/,\n  },\n};\n\nexport const NOTICE_MESSAGE_TAGS = [\n  'msg_banned',\n  'msg_bad_characters',\n  'msg_channel_blocked',\n  'msg_channel_suspended',\n  'msg_duplicate',\n  'msg_emoteonly',\n  'msg_facebook',\n  'msg_followersonly',\n  'msg_followersonly_followed',\n  'msg_followersonly_zero',\n  'msg_r9k',\n  'msg_ratelimit',\n  'msg_rejected',\n  'msg_rejected_mandatory',\n  'msg_room_not_found',\n  'msg_slowmode',\n  'msg_subsonly',\n  'msg_suspended',\n  'msg_timedout',\n  'msg_verified_email',\n];\n\nexport type FetchFlags = {\n  isLoading: boolean;\n  isLoaded: boolean;\n  isError: boolean;\n  error: string | null;\n};\n\nexport const initialFetchFlags: FetchFlags = {\n  isLoading: false,\n  isLoaded: false,\n  isError: false,\n  error: null,\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetchUser as apiFetchUser, TwitchUsersResponse } from 'api/twitch';\nimport { AppThunk } from 'app/store';\nimport { RootState } from 'app/rootReducer';\nimport { writeUserToLocatStorage } from 'features/auth/authUtils';\n\ninterface AuthState {\n  isAuthReady: boolean;\n  isAuth: boolean;\n  userId: string | null;\n  userLogin: string | null;\n}\n\ninterface InitializeAuth {\n  isAuth: boolean;\n  userId?: string;\n  userLogin?: string;\n}\n\nexport const initialState: AuthState = {\n  isAuthReady: false,\n  isAuth: false,\n  userId: null,\n  userLogin: null,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    initializeAuth: (\n      state,\n      { payload }: PayloadAction<InitializeAuth>,\n    ): void => {\n      state.isAuthReady = true;\n      state.isAuth = payload.isAuth;\n\n      if (payload.userId) {\n        state.userId = payload.userId;\n      }\n\n      if (payload.userLogin) {\n        state.userLogin = payload.userLogin;\n      }\n    },\n\n    invalidateAuth: (): AuthState => initialState,\n\n    fetchUserRequest: (state): void => {\n      state.isAuthReady = false;\n      state.isAuth = false;\n    },\n\n    fetchUserSuccess: (\n      state,\n      { payload }: PayloadAction<TwitchUsersResponse>,\n    ): void => {\n      state.isAuthReady = true;\n      state.isAuth = true;\n\n      state.userId = payload.data[0].id;\n      state.userLogin = payload.data[0].login;\n    },\n\n    fetchUserFailure: (state, { payload }: PayloadAction<string>): void => {\n      state.isAuthReady = true;\n      state.isAuth = false;\n    },\n  },\n});\n\nexport const {\n  initializeAuth,\n  invalidateAuth,\n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserFailure,\n} = auth.actions;\n\nexport default auth.reducer;\n\nexport const fetchUser = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchUserRequest());\n    const users = await apiFetchUser(userId);\n    const { id, login } = users.data[0];\n    writeUserToLocatStorage({ id, login });\n    dispatch(fetchUserSuccess(users));\n  } catch (e) {\n    dispatch(fetchUserFailure(e));\n  }\n};\n\nexport const isAuthReadySelector = (state: RootState): boolean =>\n  state.auth.isAuthReady;\n\nexport const isAuthSelector = (state: RootState): boolean => state.auth.isAuth;\n\nexport const userLoginSelector = (state: RootState): string | null =>\n  state.auth.userLogin;\n\nexport const userIdSelector = (state: RootState): string | null =>\n  state.auth.userId;\n","// https://regex101.com/r/cpaNXh/1\nconst isStartsWithProtocolRegex = /^(?:(?:[a-z]+:)?\\/\\/)/;\n\nconst normalizeHref = (href: string) =>\n  isStartsWithProtocolRegex.test(href) ? href : `//${href}`;\n\nexport default normalizeHref;\n","import * as R from 'ramda';\nimport TwitchIrc from 'twitch-simple-irc';\n\nimport normalizeHref from 'utils/normalizeHref';\nimport { TwitchEmote, TwitchBadgeVersion, TwitchBadges } from 'api/twitch';\nimport { BttvGlobalEmote, BttvChannelEmote } from 'api/bttv';\nimport { FfzEmote } from 'api/ffz';\n\nexport interface HtmlEntityTwitchEmote {\n  type: 'twitch-emote';\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface HtmlEntityBttvEmote {\n  type: 'bttv-emote';\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface HtmlEntityFfzEmote {\n  type: 'ffz-emote';\n  alt: string;\n  src: string;\n  srcSet: string;\n}\nexport interface HtmlEntityEmoji {\n  type: 'emoji';\n  alt: string;\n  src: string;\n  srcSet: null;\n}\nexport interface HtmlEntityMention {\n  type: 'mention';\n  text: string;\n  target: string;\n}\nexport interface HtmlEntityLink {\n  type: 'link';\n  text: string;\n  href: string;\n}\nexport interface HtmlEntityBadge {\n  alt: string;\n  label: string;\n  src: string;\n  srcSet: string;\n}\n\nexport type HtmlEntityEmote =\n  | HtmlEntityTwitchEmote\n  | HtmlEntityBttvEmote\n  | HtmlEntityFfzEmote;\n\nconst TWITCH_EMOTES_CDN = '//static-cdn.jtvnw.net/emoticons/v1';\nconst BTTV_EMOTES_CDN = '//cdn.betterttv.net/emote';\n\nconst getFfzSrcSet = R.pipe(\n  // @ts-ignore\n  R.toPairs,\n  R.map(([dpi, url]) => `${url} ${dpi}x`),\n  R.join(', '),\n);\n\nexport const createTwitchEmote = ({\n  id,\n  code,\n}: TwitchEmote): HtmlEntityTwitchEmote => ({\n  type: 'twitch-emote',\n  alt: code,\n  src: `${TWITCH_EMOTES_CDN}/${id}/1.0`,\n  srcSet: `${TWITCH_EMOTES_CDN}/${id}/1.0 1x, ${TWITCH_EMOTES_CDN}/${id}/2.0 2x, ${TWITCH_EMOTES_CDN}/${id}/3.0 4x`,\n});\n\nexport const createBttvEmote = ({\n  id,\n  code,\n}: BttvGlobalEmote | BttvChannelEmote): HtmlEntityBttvEmote => ({\n  type: 'bttv-emote',\n  alt: code,\n  src: `${BTTV_EMOTES_CDN}/${id}/1x`,\n  srcSet: `${BTTV_EMOTES_CDN}/${id}/2x 2x, ${BTTV_EMOTES_CDN}/${id}/3x 4x`,\n});\n\nexport const createFfzEmote = ({\n  name,\n  urls,\n}: FfzEmote): HtmlEntityFfzEmote => ({\n  type: 'ffz-emote',\n  alt: name,\n  src: urls[1],\n  srcSet: getFfzSrcSet(urls),\n});\n\nexport const createEmoji = (alt: string, src: string): HtmlEntityEmoji => ({\n  type: 'emoji',\n  alt: `:${alt}:`,\n  src,\n  srcSet: null,\n});\n\nexport const createMention = (\n  text: string,\n  target: string,\n): HtmlEntityMention => ({\n  type: 'mention',\n  text,\n  target,\n});\n\nexport const createLink = (href: string): HtmlEntityLink => ({\n  type: 'link',\n  text: href,\n  href: normalizeHref(href),\n});\n\nexport const createBadge = ({\n  title,\n  description,\n  image_url_1x: imageUrl1x,\n  image_url_2x: imageUrl2x,\n  image_url_4x: imageUrl4x,\n}: TwitchBadgeVersion): HtmlEntityBadge => ({\n  alt: title,\n  label: description,\n  src: imageUrl1x,\n  srcSet: `${imageUrl1x} 1x, ${imageUrl2x} 2x, ${imageUrl4x} 4x`,\n});\n\nexport const createBadges = (\n  badges: TwitchIrc.Badges,\n  globalBadges: TwitchBadges,\n  channelBadges: TwitchBadges,\n): HtmlEntityBadge[] => {\n  const mapBadges = ([name, version]: [string, string]):\n    | HtmlEntityBadge\n    | false => {\n    const badge =\n      R.pathOr(false, [name, 'versions', version], channelBadges) ||\n      R.pathOr(false, [name, 'versions', version], globalBadges);\n\n    return badge ? createBadge(badge) : false;\n  };\n\n  return R.pipe(\n    // @ts-ignore\n    R.toPairs,\n    R.map(mapBadges),\n    R.filter(Boolean),\n  )(badges) as HtmlEntityBadge[];\n};\n","\"use strict\";\n\nvar e,\n    t = (e = require(\"tls\")) && \"object\" == typeof e && \"default\" in e ? e.default : e,\n    r = require(\"net\"),\n    n = require(\"events\"),\n    s = require(\"tekko\");\n\nfunction a() {\n  return (a = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n\n      for (var n in r) {\n        Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n      }\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nvar i,\n    o = function o() {\n  return \"justinfan\" + Math.floor(1e5 * Math.random()).toString().padStart(5, \"0\");\n},\n    m = function m(e) {\n  return e.startsWith(\"\u0001ACTION \") && e.endsWith(\"\u0001\");\n},\n    c = function c(e) {\n  return e.slice(8, -1);\n},\n    u = function u(e) {\n  return e.middle[0].slice(1);\n},\n    d = !(\"undefined\" == typeof process || !process.versions || !process.versions.node),\n    g = [\"mod\", \"emote-only\", \"r9k\", \"rituals\", \"subs-only\", \"msg-param-should-share-streak\"],\n    l = [\"tmi-sent-ts\", \"bits\", \"ban-duration\", \"msg-param-cumulative-months\", \"msg-param-months\", \"msg-param-promo-gift-total\", \"msg-param-streak-months\", \"msg-param-viewerCount\", \"msg-param-threshold\"],\n    p = {\n  \"badge-info\": \"badgeInfo\",\n  \"display-name\": \"displayName\",\n  \"emote-sets\": \"emoteSets\",\n  \"room-id\": \"roomId\",\n  \"tmi-sent-ts\": \"tmiSentTs\",\n  \"user-id\": \"userId\",\n  \"target-msg-id\": \"targetMsgId\",\n  \"target-user-id\": \"targetUserId\",\n  \"msg-id\": \"msgId\",\n  \"system-msg\": \"systemMsg\",\n  \"emote-only\": \"emoteOnly\",\n  \"followers-only\": \"followersOnly\",\n  \"subs-only\": \"subsOnly\",\n  \"ban-duration\": \"banDuration\",\n  \"message-id\": \"messageId\",\n  \"thread-id\": \"threadId\",\n  \"msg-param-cumulative-months\": \"msgParamCumulativeMonths\",\n  \"msg-param-displayName\": \"msgParamDisplayName\",\n  \"msg-param-login\": \"msgParamLogin\",\n  \"msg-param-months\": \"msgParamMonths\",\n  \"msg-param-promo-gift-total\": \"msgParamPromoGiftTotal\",\n  \"msg-param-promo-name\": \"msgParamPromoName\",\n  \"msg-param-recipient-display-name\": \"msgParamRecipientDisplayName\",\n  \"msg-param-recipient-id\": \"msgParamRecipientId\",\n  \"msg-param-recipient-user-name\": \"msgParamRecipientUserName\",\n  \"msg-param-sender-login\": \"msgParamSenderLogin\",\n  \"msg-param-sender-name\": \"msgParamSenderName\",\n  \"msg-param-should-share-streak\": \"msgParamShouldShareStreak\",\n  \"msg-param-streak-months\": \"msgParamStreakMonths\",\n  \"msg-param-sub-plan\": \"msgParamSubPlan\",\n  \"msg-param-sub-plan-name\": \"msgParamSubPlanName\",\n  \"msg-param-viewerCount\": \"msgParamViewerCount\",\n  \"msg-param-ritual-name\": \"msgParamRitualName\",\n  \"msg-param-threshold\": \"msgParamThreshold\"\n},\n    h = [\"subscriber\", \"turbo\", \"user-type\"],\n    f = function f(e) {\n  return void 0 === e && (e = \"\"), e ? e.split(\",\").reduce(function (e, t) {\n    var r,\n        n = t.split(\"/\");\n    return a({}, e, ((r = {})[n[0]] = n[1], r));\n  }, {}) : {};\n},\n    v = function v(e) {\n  return e ? Object.entries(e).reduce(function (e, t) {\n    var r,\n        n = t[0],\n        s = t[1];\n    return h.includes(n) ? e : a({}, e, ((r = {})[p[n] || n] = function (e, t) {\n      if (\"emotes\" === e) return void 0 === (r = t) && (r = \"\"), r ? r.split(\"/\").reduce(function (e, t) {\n        var r,\n            n = t.split(\":\");\n        return a({}, e, ((r = {})[n[0]] = n[1].split(\",\").map(function (e) {\n          var t = e.split(\"-\"),\n              r = t[1];\n          return {\n            start: Number.parseInt(t[0], 10),\n            end: Number.parseInt(r, 10)\n          };\n        }), r));\n      }, {}) : {};\n      var r;\n      if (\"badges\" === e) return f(t);\n      if (\"badge-info\" === e) return f(t);\n\n      if (\"followers-only\" === e) {\n        var n = !1;\n        return \"-1\" === t ? n = !1 : \"0\" === t ? n = !0 : \"string\" == typeof t && (n = parseInt(t, 10)), n;\n      }\n\n      if (\"slow\" === e) {\n        var s = !1;\n        return \"0\" === t ? s = !1 : \"string\" == typeof t && (s = parseInt(t, 10)), s;\n      }\n\n      return g.includes(e) ? \"1\" === t : l.includes(e) ? parseInt(t, 10) : \"string\" == typeof t ? t.replace(\"\\\\s\", \" \") : t;\n    }(n, s), r));\n  }, {}) : {};\n},\n    S = function S(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n},\n    w = function w(e) {\n  var t = e.tags;\n  return {\n    raw: e.raw,\n    message: e.trailing,\n    channel: u(e),\n\n    get tags() {\n      return v(t);\n    }\n\n  };\n};\n\n(i = exports.Commands || (exports.Commands = {})).REPLY001 = \"001\", i.PING = \"PING\", i.PONG = \"PONG\", i.JOIN = \"JOIN\", i.PART = \"PART\", i.PRIVMSG = \"PRIVMSG\", i.NOTICE = \"NOTICE\", i.USERNOTICE = \"USERNOTICE\", i.GLOBALUSERSTATE = \"GLOBALUSERSTATE\", i.USERSTATE = \"USERSTATE\", i.ROOMSTATE = \"ROOMSTATE\", i.CLEARCHAT = \"CLEARCHAT\", i.CLEARMSG = \"CLEARMSG\", i.HOSTTARGET = \"HOSTTARGET\", i.WHISPER = \"WHISPER\";\n\nvar R,\n    P = function (e) {\n  var n, i;\n\n  function g(t) {\n    var r;\n    return void 0 === t && (t = {}), (r = e.call(this) || this).socket = null, r.globalUserState = null, r.channels = {}, r._connected = !1, r._connecting = !1, r._registered = !1, r.options = a({\n      secure: !0\n    }, t), r;\n  }\n\n  i = e, (n = g).prototype = Object.create(i.prototype), n.prototype.constructor = n, n.__proto__ = i;\n  var l,\n      p = g.prototype;\n  return p.connect = function () {\n    try {\n      var e = this,\n          t = d ? e._connectInNode() : e._connectInBrowser();\n      return Promise.resolve(t).then(function () {\n        return e._register();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, p.disconnect = function () {\n    this._connected && (d ? this.socket.destroy() : this.socket.close(), this.socket = null, this._connected = !1, this._connecting = !1, this._registered = !1, this.emit(\"disconnect\"));\n  }, p.receiveRaw = function (e) {\n    var t = this;\n    e.trim().split(\"\\r\\n\").forEach(function (e) {\n      return t._handleMessage(e);\n    });\n  }, p.sendRaw = function (e) {\n    return !(null === this.socket || !e || (d ? this.socket.write(e) : this.socket.send(e), 0));\n  }, p.say = function (e, t) {\n    var r = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: t\n    });\n    return this.sendRaw(r);\n  }, p.sendCommand = function (e, t, r) {\n    void 0 === r && (r = \"\");\n    var n = Array.isArray(r) ? r.join(\" \") : r,\n        a = s.format({\n      command: exports.Commands.PRIVMSG,\n      middle: [\"#\" + e],\n      trailing: \"/\" + t + \" \" + n\n    });\n    return this.sendRaw(a);\n  }, p.join = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.JOIN,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, p.part = function (e) {\n    if (!this._registered) return !1;\n    var t = s.format({\n      command: exports.Commands.PART,\n      middle: [\"#\" + e]\n    });\n    return this.sendRaw(t);\n  }, p._handleMessage = function (e) {\n    var t = s.parse(e);\n    t.raw = e;\n    var r = t.command;\n    if (r === exports.Commands.PING) return this.sendRaw(exports.Commands.PONG + \" :tmi.twitch.tv\"), void this.emit(\"ping\", {\n      raw: e\n    });\n    if (r === exports.Commands.REPLY001) return this.options.name = t.middle[0], this._registered = !0, void this.emit(\"register\");\n\n    if (r !== exports.Commands.PRIVMSG) {\n      if (r === exports.Commands.USERSTATE) {\n        var n = u(t),\n            a = S(t);\n        return this._updateUserState(n, a.tags), void this.emit(\"userstate\", a);\n      }\n\n      if (r !== exports.Commands.JOIN) {\n        if (r !== exports.Commands.PART) {\n          if (r === exports.Commands.ROOMSTATE) {\n            var i = u(t),\n                o = S(t);\n            return this._updateRoomState(i, o.tags), void this.emit(\"roomstate\", o);\n          }\n\n          if (r !== exports.Commands.NOTICE) {\n            if (r !== exports.Commands.USERNOTICE) {\n              if (r !== exports.Commands.CLEARCHAT) {\n                if (r !== exports.Commands.CLEARMSG) {\n                  if (r !== exports.Commands.HOSTTARGET) {\n                    if (r !== exports.Commands.WHISPER) {\n                      var d, g;\n\n                      if (r === exports.Commands.GLOBALUSERSTATE) {\n                        var l = function (e) {\n                          var t = e.tags;\n                          return {\n                            raw: e.raw,\n\n                            get tags() {\n                              return v(t);\n                            }\n\n                          };\n                        }(t);\n\n                        return this._updateGlobalUserState(l.tags), void this.emit(\"globaluserstate\", l);\n                      }\n                    } else {\n                      var p = (g = (d = t).tags, {\n                        raw: d.raw,\n                        message: d.trailing,\n                        channel: d.middle[0],\n                        user: d.prefix.name,\n\n                        get tags() {\n                          return v(g);\n                        }\n\n                      });\n                      this.emit(\"whisper\", p);\n                    }\n                  } else {\n                    var h = w(t);\n                    this.emit(\"hosttarget\", h);\n                  }\n                } else {\n                  var f = w(t);\n                  this.emit(\"clearmessage\", f);\n                }\n              } else {\n                var R = w(t);\n                this.emit(\"clearchat\", R);\n              }\n            } else {\n              var P = w(t);\n              this.emit(\"usernotice\", P);\n            }\n          } else {\n            var b = w(t);\n            this.emit(\"notice\", b);\n          }\n        } else {\n          var C = u(t);\n          this.emit(\"part\", {\n            channel: C\n          });\n        }\n      } else {\n        var T = u(t);\n        this.emit(\"join\", {\n          channel: T\n        });\n      }\n    } else {\n      var y = function (e) {\n        var t = e.raw,\n            r = e.trailing,\n            n = e.tags,\n            s = e.prefix.name,\n            a = m(r);\n        return {\n          raw: t,\n          message: a ? c(r) : r,\n          channel: u(e),\n          user: s,\n\n          get tags() {\n            return v(n);\n          },\n\n          isAction: a\n        };\n      }(t);\n\n      this.emit(\"message\", y);\n    }\n  }, p._connectInNode = function () {\n    var e = this,\n        n = \"irc.chat.twitch.tv\",\n        s = this.options.secure ? 6697 : 6667;\n    return new Promise(function (a, i) {\n      e._connecting = !0;\n\n      var o = function o() {\n        e._connecting = !1, e._connected = !0, e.emit(\"connect\"), a();\n      };\n\n      e.options.secure ? e.socket = t.connect(s, n, {}, o) : (e.socket = new r.Socket(), e.socket.connect(s, n, o)), e.socket.on(\"error\", function (t) {\n        e._connected = !1, e._connecting = !1, e.emit(\"disconnect\", t), i(t);\n      }), e.socket.on(\"data\", function (t) {\n        e.receiveRaw(t.toString());\n      }), e.socket.on(\"close\", function () {\n        e._connected = !1, e._connecting = !1, e._registered = !1, e.emit(\"disconnect\");\n      });\n    });\n  }, p._connectInBrowser = function () {\n    var e = this,\n        t = this.options.secure ? \"wss://irc-ws.chat.twitch.tv:443\" : \"ws://irc-ws.chat.twitch.tv:80\";\n    return new Promise(function (r, n) {\n      e._connecting = !0, e.socket = new WebSocket(t), e.socket.onopen = function () {\n        e._connected = !0, e._connecting = !1, e.emit(\"connect\"), r();\n      }, e.socket.onmessage = function (t) {\n        return e.receiveRaw(t.data);\n      }, e.socket.onerror = function () {}, e.socket.onclose = function (t) {\n        var r = t.wasClean,\n            s = t.code,\n            a = t.reason;\n        if (e.socket = null, e._connected = !1, e._connecting = !1, e._registered = !1, r) e.emit(\"disconnect\");else {\n          var i = new Error(\"[\" + s + \"] \" + a);\n          e.emit(\"disconnect\", i), n(i);\n        }\n      };\n    });\n  }, p._register = function () {\n    var e = this;\n    if (!this._connected) return Promise.reject();\n    if (this._registered) return Promise.resolve();\n    var t = this.options,\n        r = t.auth,\n        n = t.name || o(),\n        s = r ? \"oauth:\" + r : \"SCHMOOPIIE\";\n    return this.sendRaw(\"CAP REQ :twitch.tv/tags twitch.tv/commands\"), this.sendRaw(\"PASS \" + s), this.sendRaw(\"NICK \" + n), new Promise(function (t, r) {\n      var n = function r() {\n        t(), e.off(\"register\", r);\n      };\n\n      e.on(\"register\", n), setTimeout(function () {\n        r(), e.off(\"register\", n);\n      }, 1e4);\n    });\n  }, p._updateGlobalUserState = function (e) {\n    this.globalUserState = a({}, this.globalUserState, {}, e);\n  }, p._updateUserState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      userState: t\n    }), r));\n  }, p._updateRoomState = function (e, t) {\n    var r;\n    this.channels = a({}, this.channels, ((r = {})[e] = a({}, this.channels[e], {\n      roomState: t\n    }), r));\n  }, (l = [{\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"registered\",\n    get: function get() {\n      return this._registered;\n    }\n  }]) && function (e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var n = t[r];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }(g.prototype, l), g;\n}(n.EventEmitter);\n\n(R = exports.UserNoticeType || (exports.UserNoticeType = {})).sub = \"sub\", R.resub = \"resub\", R.subgift = \"subgift\", R.anonsubgift = \"anonsubgift\", R.submysterygift = \"submysterygift\", R.giftpaidupgrade = \"giftpaidupgrade\", R.rewardgift = \"rewardgift\", R.anongiftpaidupgrade = \"anongiftpaidupgrade\", R.raid = \"raid\", R.unraid = \"unraid\", R.ritual = \"ritual\", R.bitsbadgetier = \"bitsbadgetier\", exports.Client = P, exports.getChannelFromMessage = u, exports.getIsAction = m, exports.getRandomUsername = o, exports.isNode = d, exports.normalizeActionMessage = c, exports.parseMessageTags = v;","import { API_REQUESTS_TIMEOUT } from 'utils/constants';\n\nexport interface FetchRequestOptions extends RequestInit {\n  timeout?: number;\n}\n\nconst fetchRequest = async (url: string, options: FetchRequestOptions = {}) => {\n  let fetchOptions = { timeout: API_REQUESTS_TIMEOUT, ...options };\n\n  if (options.timeout) {\n    const controller = new AbortController();\n    delete fetchOptions.timeout;\n    fetchOptions = { ...fetchOptions, signal: controller.signal };\n    setTimeout(() => controller.abort(), options.timeout);\n  }\n\n  const response = await fetch(url, fetchOptions);\n\n  const body = await response.json();\n\n  if (!response.ok) {\n    const error = Error(response.statusText);\n    // error.data = body;\n    throw error;\n  }\n\n  return body;\n};\n\nexport default fetchRequest;\n","import { useCallback, useState } from 'react';\n\nconst useSetState = <T extends object>(\n  initialState: T = {} as T,\n): [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void] => {\n  const [state, set] = useState<T>(initialState);\n  const setState = useCallback(\n    (patch) => {\n      set((prevState) =>\n        Object.assign(\n          {},\n          prevState,\n          patch instanceof Function ? patch(prevState) : patch,\n        ),\n      );\n    },\n    [set],\n  );\n\n  return [state, setState];\n};\n\nexport default useSetState;\n","import { RootState } from 'app/rootReducer';\n\ntype OptionItem = {\n  type: 'switch' | 'input';\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  value: boolean | string;\n};\n\ntype OptionCategories = {\n  title: string;\n  items: OptionItem[];\n};\n\nexport const optionsSelector = (state: RootState): OptionCategories[] => [\n  {\n    title: 'My preferences',\n    items: [\n      {\n        type: 'switch',\n        id: 'show-timestamps',\n        name: 'showTimestamps',\n        title: 'Show Timestamps',\n        description: '',\n        value: state.options.showTimestamps,\n      },\n      {\n        type: 'switch',\n        id: 'split-chat',\n        name: 'splitChat',\n        title: 'Split Chat',\n        description: '',\n        value: state.options.splitChat,\n      },\n      {\n        type: 'switch',\n        id: 'fixed-width',\n        name: 'fixedWidth',\n        title: 'Fixed Width',\n        description: '',\n        value: state.options.fixedWidth,\n      },\n      // {\n      //   type: 'input',\n      //   id: 'blacklist-keywords',\n      //   name: 'blacklistKeywords',\n      //   title: 'Set Blacklist Keywords',\n      //   description: '',\n      //   value: state.options.blacklistKeywords,\n      // },\n      // {\n      //   type: 'input',\n      //   id: 'highlight-keywords',\n      //   name: 'highlightKeywords',\n      //   title: 'Set Highlight Keywords',\n      //   description: '',\n      //   value: state.options.highlightKeywords,\n      // },\n    ],\n  },\n];\n\nexport const isShowTimestampsSelector = (state: RootState) =>\n  state.options.showTimestamps;\n\nexport const isSplitChatSelector = (state: RootState) =>\n  state.options.splitChat;\n\nexport const isFixedWidthSelector = (state: RootState) =>\n  state.options.fixedWidth;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport jwt from 'jsonwebtoken';\n\nimport {\n  isAuthReadySelector,\n  initializeAuth,\n  fetchUser,\n} from 'features/auth/authSlice';\nimport { readUserFromLocatStorage } from 'features/auth/authUtils';\n\nconst useInitializeAuth = () => {\n  const dispatch = useDispatch();\n  const isAuthReady = useSelector(isAuthReadySelector);\n\n  useEffect(() => {\n    if (isAuthReady) return;\n\n    const { idToken } = localStorage;\n    const user = readUserFromLocatStorage();\n\n    if (!idToken) {\n      dispatch(initializeAuth({ isAuth: false }));\n      return;\n    }\n\n    if (user) {\n      const { id, login } = user;\n      const params = { isAuth: true, userId: id, userLogin: login };\n\n      dispatch(initializeAuth(params));\n    } else {\n      const jwtData = jwt.decode(idToken);\n\n      if (jwtData) {\n        dispatch(fetchUser(jwtData.sub));\n      } else {\n        dispatch(initializeAuth({ isAuth: false }));\n      }\n    }\n  }, [dispatch, isAuthReady]);\n};\n\nexport default useInitializeAuth;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  isAuthReadySelector,\n  isAuthSelector,\n  userIdSelector,\n} from 'features/auth/authSlice';\nimport {\n  currentChannelSelector,\n  currentChannelIdSelector,\n  isHistoryAddedSelector,\n  isHistoryLoadedSelector,\n  isTwitchEmotesLoadedSelector,\n  isBttvGlobalEmotesLoadedSelector,\n  isBttvChannelEmotesLoadedSelector,\n  isFfzGlobalEmotesLoadedSelector,\n  isFfzChannelEmotesLoadedSelector,\n  isGlobalBadgesLoadedSelector,\n  isChannelBadgesLoadedSelector,\n  isBlockedUsersLoadedSelector,\n} from 'features/chat/selectors';\nimport {\n  addChatHistory,\n  fetchChatHistory,\n  fetchTwitchEmotes,\n  fetchBttvGlobalEmotes,\n  fetchBttvChannelEmotes,\n  fetchFfzGlobalEmotes,\n  fetchFfzChannelEmotes,\n  fetchChannelBadges,\n  fetchGlobalBadges,\n  fetchBlockedUsers,\n} from 'features/chat/slice';\n\nconst useFetchChatData = () => {\n  const dispatch = useDispatch();\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n  const userId = useSelector(userIdSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const currentChannelId = useSelector(currentChannelIdSelector);\n\n  const isTwitchEmotesLoaded = useSelector(isTwitchEmotesLoadedSelector);\n  const isBttvGlobalEmotesLoaded = useSelector(\n    isBttvGlobalEmotesLoadedSelector,\n  );\n  const isBttvChannelEmotesLoaded = useSelector(\n    isBttvChannelEmotesLoadedSelector,\n  );\n  const isFfzGlobalEmotesLoaded = useSelector(isFfzGlobalEmotesLoadedSelector);\n  const isFfzChannelEmotesLoaded = useSelector(\n    isFfzChannelEmotesLoadedSelector,\n  );\n  const isGlobalBadgesLoaded = useSelector(isGlobalBadgesLoadedSelector);\n  const isChannelBadgesLoaded = useSelector(isChannelBadgesLoadedSelector);\n  const isHistoryLoaded = useSelector(isHistoryLoadedSelector);\n  const isBlockedUsersLoaded = useSelector(isBlockedUsersLoadedSelector);\n  const isHistoryAdded = useSelector(isHistoryAddedSelector);\n\n  const isReadyToAddHistory =\n    isAuthReady &&\n    currentChannel &&\n    !isHistoryAdded &&\n    (isAuth ? isTwitchEmotesLoaded : true) &&\n    (isAuth ? isBlockedUsersLoaded : true) &&\n    isBttvGlobalEmotesLoaded &&\n    isBttvChannelEmotesLoaded &&\n    isFfzGlobalEmotesLoaded &&\n    isFfzChannelEmotesLoaded &&\n    isGlobalBadgesLoaded &&\n    isChannelBadgesLoaded &&\n    isHistoryLoaded;\n\n  useEffect(() => {\n    dispatch(fetchBttvGlobalEmotes());\n    dispatch(fetchFfzGlobalEmotes());\n    dispatch(fetchGlobalBadges());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isReadyToAddHistory) {\n      dispatch(addChatHistory(currentChannel));\n    }\n  }, [dispatch, currentChannel, isReadyToAddHistory]);\n\n  useEffect(() => {\n    if (!isHistoryAdded && currentChannel) {\n      dispatch(fetchChatHistory(currentChannel));\n    }\n  }, [dispatch, currentChannel, isHistoryAdded]);\n\n  useEffect(() => {\n    if (isAuthReady && isAuth && userId) {\n      dispatch(fetchTwitchEmotes(userId));\n      dispatch(fetchBlockedUsers(userId));\n    }\n  }, [dispatch, isAuthReady, isAuth, userId]);\n\n  // TODO: check if emotes and badges is already in the store\n\n  useEffect(() => {\n    if (currentChannel && currentChannelId) {\n      dispatch(fetchBttvChannelEmotes(currentChannel, currentChannelId));\n      dispatch(fetchFfzChannelEmotes(currentChannel, currentChannelId));\n      dispatch(fetchChannelBadges(currentChannel, currentChannelId));\n    }\n  }, [dispatch, currentChannel, currentChannelId]);\n};\n\nexport default useFetchChatData;\n","import { useState, useEffect } from 'react';\n\nconst useLocationHash = () => {\n  const [hash, setHash] = useState(window.location.hash);\n\n  useEffect(() => {\n    const handleHashChange = () => setHash(window.location.hash);\n\n    window.addEventListener('hashchange', handleHashChange);\n\n    return () => window.removeEventListener('hashchange', handleHashChange);\n  }, []);\n\n  return hash;\n};\n\nexport default useLocationHash;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useLocationHash from 'hooks/useLocationHash';\nimport { updateCurrentChannel } from 'features/chat/slice';\n\nconst useCurrentChannel = () => {\n  const dispatch = useDispatch();\n  const hash = useLocationHash();\n\n  useEffect(() => {\n    if (hash && hash.length > 1) {\n      const channel = hash.slice(1);\n\n      dispatch(updateCurrentChannel(channel));\n\n      localStorage.setItem('lastChannel', channel);\n\n      // @ts-ignore\n      document.title = channel\n        ? `#${channel} - ${process.env.REACT_APP_NAME} `\n        : process.env.REACT_APP_NAME;\n    }\n  }, [dispatch, hash]);\n};\n\nexport default useCurrentChannel;\n","import { useEffect, useRef } from 'react';\n\nconst usePrevious = <T>(state: T): T | undefined => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n};\n\nexport default usePrevious;\n","import { useEffect, useRef, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport TwitchIrc from 'twitch-simple-irc';\n\nimport usePrevious from 'hooks/usePrevious';\nimport { NOTICE_MESSAGE_TAGS } from 'utils/constants';\nimport {\n  addMessage,\n  clearChat,\n  updateIsConnected,\n  updateGlobalUserParams,\n  updateUserParams,\n  updateRoomParams,\n} from 'features/chat/slice';\nimport {\n  currentChannelSelector,\n  isConnectedSelector,\n} from 'features/chat/selectors';\nimport { OwnMessage } from 'features/chat/slice/messages';\nimport {\n  isAuthSelector,\n  userIdSelector,\n  isAuthReadySelector,\n  userLoginSelector,\n  invalidateAuth,\n} from 'features/auth/authSlice';\n\nconst useTwitchClient = () => {\n  const dispatch = useDispatch();\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n  const userId = useSelector(userIdSelector);\n  const userLogin = useSelector(userLoginSelector);\n  const isConnected = useSelector(isConnectedSelector);\n  const currentChannel = useSelector(currentChannelSelector);\n  const prevChannel = usePrevious(currentChannel);\n  const clientRef = useRef<TwitchIrc.Client | null>(null);\n\n  const registerEvents = useCallback(\n    (client: typeof clientRef) => {\n      if (!client.current) return;\n\n      const handleRegister = () => dispatch(updateIsConnected(true));\n\n      const handleDisconnect = () => dispatch(updateIsConnected(false));\n\n      const handleGlobalUserState = (data: TwitchIrc.GlobalUserStateEvent) =>\n        dispatch(updateGlobalUserParams(data));\n\n      const handleUserState = (data: TwitchIrc.UserStateEvent) =>\n        dispatch(updateUserParams(data));\n\n      const handleRoomState = (data: TwitchIrc.RoomStateEvent) =>\n        dispatch(updateRoomParams(data));\n\n      const handleMessage = (message: TwitchIrc.MessageEvent) =>\n        dispatch(addMessage({ type: 'message', message }));\n\n      const handleNotice = (message: TwitchIrc.NoticeEvent) => {\n        if (\n          client.current &&\n          message.message === 'Login authentication failed'\n        ) {\n          dispatch(invalidateAuth());\n          client.current.disconnect();\n          // eslint-disable-next-line no-param-reassign\n          client.current = null;\n          return;\n        }\n\n        dispatch(addMessage({ type: 'notice', message, id: uuid() }));\n      };\n\n      const handleUserNotice = (message: TwitchIrc.UserNoticeEvent) =>\n        dispatch(addMessage({ type: 'user-notice', message }));\n\n      const handleClearChat = (data: TwitchIrc.ClearChatEvent) => {\n        if (!data.tags.targetUserId) return;\n        dispatch(clearChat(data));\n      };\n\n      client.current.on('register', handleRegister);\n      client.current.on('disconnect', handleDisconnect);\n      client.current.on('globaluserstate', handleGlobalUserState);\n      client.current.on('userstate', handleUserState);\n      client.current.on('roomstate', handleRoomState);\n      client.current.on('message', handleMessage);\n      client.current.on('notice', handleNotice);\n      client.current.on('usernotice', handleUserNotice);\n      client.current.on('clearchat', handleClearChat);\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.disconnect();\n        clientRef.current = null;\n      }\n    };\n  }, [clientRef]);\n\n  useEffect(() => {\n    if (!currentChannel || !isAuthReady) return;\n\n    if (!clientRef.current) {\n      const options = isAuth\n        ? { name: userLogin as string, auth: localStorage.accessToken }\n        : null;\n\n      (async () => {\n        clientRef.current = new TwitchIrc.Client(options);\n\n        registerEvents(clientRef);\n\n        await clientRef.current.connect();\n\n        clientRef.current.join(currentChannel);\n      })();\n\n      return;\n    }\n\n    if (prevChannel && prevChannel !== currentChannel) {\n      clientRef.current.part(prevChannel);\n      clientRef.current.join(currentChannel);\n    }\n  }, [\n    dispatch,\n    registerEvents,\n    isAuth,\n    isAuthReady,\n    isConnected,\n    userLogin,\n    currentChannel,\n    prevChannel,\n  ]);\n\n  const client = () => ({\n    say(channel: string, message: string) {\n      if (!clientRef.current) return;\n\n      clientRef.current.say(channel, message);\n\n      function handleUserState(data: TwitchIrc.UserStateEvent) {\n        if (data.channel === channel) {\n          const ownMessage = {\n            message,\n            id: uuid(),\n            channel,\n            tags: data.tags,\n            timestamp: new Date().getTime(),\n            userId,\n            userLogin,\n          } as OwnMessage;\n          dispatch(addMessage({ type: 'own-message', message: ownMessage }));\n          // eslint-disable-next-line no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function handleNotice(data: TwitchIrc.NoticeEvent) {\n        if (\n          data.channel === channel &&\n          NOTICE_MESSAGE_TAGS.includes(data.tags.msgId)\n        ) {\n          // eslint-disable-next-line no-use-before-define\n          removeListeners();\n        }\n      }\n\n      function removeListeners() {\n        if (!clientRef.current) return;\n\n        clientRef.current.off('notice', handleNotice);\n        clientRef.current.off('userstate', handleUserState);\n      }\n\n      clientRef.current.on('notice', handleNotice);\n      clientRef.current.on('userstate', handleUserState);\n\n      setTimeout(() => removeListeners(), 10000);\n    },\n  });\n\n  return useMemo(client, [clientRef, dispatch, userLogin, userId]);\n};\n\nexport default useTwitchClient;\n","const getUserSuggestions = (\n  beginText: string,\n  users: string[],\n  limit = 5,\n): string[] => {\n  const result = [];\n  const beginTextLower = beginText.toLowerCase();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const name of users) {\n    if (result.length === limit) return result;\n\n    const nameLower = name.toLowerCase();\n\n    if (beginTextLower === '' || nameLower.startsWith(beginTextLower)) {\n      result.push(name);\n    }\n  }\n\n  return result;\n};\n\nexport default getUserSuggestions;\n","/* eslint-disable no-restricted-syntax */\nimport {\n  createTwitchEmote,\n  createBttvEmote,\n  createFfzEmote,\n  HtmlEntityEmote,\n} from 'features/chat/utils/htmlEntity';\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport { TwitchEmote } from 'api/twitch';\nimport { BttvGlobalEmote, BttvChannelEmote } from 'api/bttv';\nimport { FfzEmote } from 'api/ffz';\n\nconst checkTwitch = (\n  result: any[],\n  sets: {\n    [setId: string]: TwitchEmote[];\n  },\n  beginText: string,\n  limit: number,\n): boolean => {\n  for (const items of Object.values(sets)) {\n    for (const emote of items) {\n      if (result.length === limit) return true;\n\n      if (emote.code.toLowerCase().includes(beginText)) {\n        result.push(createTwitchEmote(emote));\n      }\n    }\n  }\n\n  return false;\n};\n\nconst checkBttv = (\n  result: any[],\n  items: Array<BttvGlobalEmote | BttvChannelEmote>,\n  beginText: string,\n  limit: number,\n): boolean => {\n  for (const emote of items) {\n    if (result.length === limit) return true;\n\n    if (emote.code.toLowerCase().includes(beginText)) {\n      result.push(createBttvEmote(emote));\n    }\n  }\n\n  return false;\n};\n\nconst checkFfz = (\n  result: any[],\n  items: FfzEmote[],\n  beginText: string,\n  limit: number,\n): boolean => {\n  for (const emote of items) {\n    if (result.length === limit) return true;\n\n    if (emote.name.toLowerCase().includes(beginText)) {\n      result.push(createFfzEmote(emote));\n    }\n  }\n\n  return false;\n};\n\nconst getEmoteSuggestions = (\n  beginText: string,\n  emotes: StateEmotes,\n  limit = 10,\n): HtmlEntityEmote[] => {\n  if (!emotes) return [];\n\n  const result: HtmlEntityEmote[] = [];\n  const {\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  } = emotes;\n\n  const beginTextLower = beginText.toLowerCase();\n\n  // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n  const isOver =\n    checkBttv(result, bttvChannel, beginTextLower, limit) ||\n    checkFfz(result, ffzChannel, beginTextLower, limit) ||\n    checkTwitch(result, twitchUser, beginTextLower, limit) ||\n    checkTwitch(result, twitchGlobal, beginTextLower, limit) ||\n    checkBttv(result, bttvGlobal, beginTextLower, limit) ||\n    checkFfz(result, ffzGlobal, beginTextLower, limit);\n\n  return result;\n};\n\nexport default getEmoteSuggestions;\n","import { lib as emojilib } from 'emojilib';\n\nconst replaceEmojis = (text: string): string =>\n  text\n    .split(' ')\n    .map((word: string) => {\n      if (word[0] !== ':' || word[word.length - 1] !== ':') {\n        return word;\n      }\n\n      const name = word.slice(1, -1);\n      const emoji = emojilib[name];\n\n      return emoji && emoji.char ? emoji.char : word;\n    })\n    .join(' ');\n\nexport default replaceEmojis;\n","import { useEffect } from 'react';\nimport arePassiveEventsSupported from 'are-passive-events-supported';\nimport useLatest from 'use-latest';\n\nconst MOUSEDOWN = 'mousedown';\nconst TOUCHSTART = 'touchstart';\n\ntype HandledEvents = [typeof MOUSEDOWN, typeof TOUCHSTART];\ntype HandledEventsType = HandledEvents[number];\ntype PossibleEvent = {\n  [Type in HandledEventsType]: HTMLElementEventMap[Type];\n}[HandledEventsType];\ntype Handler = (event: PossibleEvent) => void;\n\nconst events: HandledEvents = [MOUSEDOWN, TOUCHSTART];\n\nconst arePassiveEvents = arePassiveEventsSupported();\n\nconst getOptions = (event: HandledEventsType) =>\n  event === MOUSEDOWN && arePassiveEvents ? { passive: true } : undefined;\n\nconst isContainsNode = (el: HTMLElement | null, node: Node) =>\n  el && el.contains(node);\n\nconst useOnClickOutside = (\n  ref:\n    | React.RefObject<HTMLElement>\n    | React.RefObject<React.RefObject<HTMLElement>[]>,\n  handler: Handler | null,\n) => {\n  const handlerRef = useLatest(handler);\n\n  useEffect(() => {\n    if (!handler) {\n      return;\n    }\n\n    const listener = (event: PossibleEvent) => {\n      if (!ref.current || !handlerRef.current) return;\n\n      if (Array.isArray(ref.current)) {\n        const isContains = ref.current.some((r) =>\n          isContainsNode(r.current, event.target as Node),\n        );\n\n        if (isContains) {\n          return;\n        }\n      } else if (isContainsNode(ref.current, event.target as Node)) {\n        return;\n      }\n\n      handlerRef.current(event);\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, listener, getOptions(event));\n    });\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      events.forEach((event) => {\n        document.removeEventListener(\n          event,\n          listener,\n          getOptions(event) as EventListenerOptions,\n        );\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!handler]);\n};\n\nexport default useOnClickOutside;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M8.5 10L4 5.5 5.5 4 10 8.5 14.5 4 16 5.5 11.5 10l4.5 4.5-1.5 1.5-4.5-4.5L5.5 16 4 14.5 8.5 10z\"\n});\n\nvar SvgClose = function SvgClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close.992b249e.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from 'styled-components';\n\nconst sizes = {\n  small: css`\n    width: 24px;\n    height: 24px;\n  `,\n  medium: css`\n    width: 30px;\n    height: 30px;\n  `,\n  // large: css``,\n};\n\nconst IconButton = styled.button.attrs({\n  type: 'button',\n})<{ size: 'small' | 'medium' }>`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  outline: none;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  ${(p) => sizes[p.size]};\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n\n  &:active {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n`;\n\nIconButton.defaultProps = {\n  size: 'medium',\n};\n\nexport default IconButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ReactComponent as CloseIconSvg } from 'icons/close.svg';\nimport IconButton from 'components/IconButton';\n\nconst ChatModalRoot = styled.div`\n  height: 100%;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 4px 8px 0px,\n    rgba(0, 0, 0, 0.4) 0px 0px 4px 0px;\n  background-color: #18181b;\n  white-space: normal;\n  color: #fff;\n  border-radius: 4px;\n`;\nconst CloseButton = styled(IconButton).attrs({ size: 'small' })`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\nconst CloseIcon = styled(CloseIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\ninterface Props {\n  children: React.ReactNode;\n  onClose: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst ChatModal = ({ children, onClose }: Props) => (\n  <ChatModalRoot>\n    <CloseButton onClick={onClose}>\n      <CloseIcon />\n    </CloseButton>\n    {children}\n  </ChatModalRoot>\n);\n\nChatModal.defaultProps = {};\n\nexport default ChatModal;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M7 11a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-4 4a2 2 0 002-2H8a2 2 0 002 2z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0a6 6 0 11-12 0 6 6 0 0112 0z\",\n  clipRule: \"evenodd\"\n}));\n\nvar SvgSmileyFace = function SvgSmileyFace(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSmileyFace, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/smiley-face.1cc055ed.svg\";\nexport { ForwardRef as ReactComponent };","import CustomScrollbar from 'react-scrollbars-custom';\nimport styled from 'styled-components';\n\nconst Scrollbar = styled(CustomScrollbar).attrs({\n  disableTracksWidthCompensation: true,\n})`\n  overflow-y: auto;\n\n  .ScrollbarsCustom-TrackY {\n    background: none !important;\n  }\n\n  .ScrollbarsCustom-ThumbY {\n    margin-left: auto;\n    margin-right: auto;\n    width: 6px !important;\n  }\n`;\n\nexport default Scrollbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Scrollbar from 'components/Scrollbar';\nimport {\n  EmoteCategory,\n  emoteCategoriesSelector,\n} from 'features/chat/selectors';\n\nconst EmotePickerRoot = styled.div`\n  padding-top: 32px;\n  padding-bottom: 16px;\n  height: 100%;\n`;\nconst Categories = styled.div`\n  height: 100%;\n`;\nconst Category = styled.div`\n  padding-top: 10px;\n  padding-right: 16px;\n  padding-left: 16px;\n\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding-bottom: 10px;\n  font-size: 12px;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst CategoryItems = styled.div``;\nconst Emote = styled.img`\n  padding: 2px;\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n\n  &:hover {\n    background-color: rgba(119, 44, 232, 0.2);\n    cursor: pointer;\n  }\n`;\n\ninterface Props {\n  onEmoteClick: (name: string) => void;\n}\n\nconst EmotePicker = ({ onEmoteClick }: Props) => {\n  const emoteCategories = useSelector(emoteCategoriesSelector);\n\n  const renderCategory = ({ title, items }: EmoteCategory, key: number) => (\n    <Category key={key}>\n      {!!title && <CategoryHeader>{title}</CategoryHeader>}\n      <CategoryItems>\n        {items.map(({ alt, src, srcSet }) => (\n          <Emote\n            key={alt}\n            alt={alt}\n            src={src}\n            srcSet={srcSet}\n            onClick={() => onEmoteClick(alt)}\n          />\n        ))}\n      </CategoryItems>\n    </Category>\n  );\n\n  return (\n    <EmotePickerRoot>\n      <Categories>\n        <Scrollbar>{emoteCategories.map(renderCategory)}</Scrollbar>\n      </Categories>\n    </EmotePickerRoot>\n  );\n};\n\nexport default EmotePicker;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport ChatModal from 'components/ChatModal';\nimport IconButton from 'components/IconButton';\nimport { ReactComponent as SmileyFaceIconSvg } from 'icons/smiley-face.svg';\nimport EmotePicker from 'features/chat/components/EmotePicker';\nimport { SuggestionsState } from 'features/chat/components/Chat';\nimport { isEmotesLoadedSelector } from 'features/chat/selectors';\nimport { HtmlEntityEmote } from 'features/chat/utils/htmlEntity';\n\nconst ChatInputRoot = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n  background-color: #18181b;\n\n  & > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst ChatInputInner = styled.div`\n  position: relative;\n`;\nconst Suggestions = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n  margin-left: -5px;\n  margin-bottom: -5px;\n  margin-right: -5px;\n  margin-bottom: 0;\n  padding-top: 10px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-bottom: none;\n  background-color: #18181b;\n  color: #fff;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  /* box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0px 2px rgba(0, 0, 0, 0.1); */\n`;\nconst SuggestionItem = styled.div<{ isActive: boolean }>`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 2px;\n  background-color: ${(p) =>\n    p.isActive ? 'rgba(255, 255, 255, 0.15)' : 'transparent'};\n  cursor: pointer;\n`;\nconst SuggestionImage = styled.img`\n  margin-right: 8px;\n  width: 28px;\n  height: 28px;\n  object-fit: contain;\n`;\nconst TextareaInput = styled.div`\n  position: relative;\n`;\nconst TextareaWrapper = styled.div<{ isSuggestions: boolean }>`\n  ${(p) =>\n    p.isSuggestions &&\n    css`\n      margin-left: -5px;\n      margin-bottom: -5px;\n      margin-right: -5px;\n      padding: 5px;\n      border: 1px solid rgba(255, 255, 255, 0.15);\n      border-top: none;\n      border-bottom-left-radius: 6px;\n      border-bottom-right-radius: 6px;\n      /* box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.1),\n        0 2px 2px -2px rgba(0, 0, 0, 0.02); */\n\n      & > ${TextareaInput} {\n        margin-left: -1px;\n        margin-bottom: -1px;\n        margin-right: -1px;\n      }\n    `};\n`;\nconst EmotesModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 0;\n  bottom: 100%;\n  margin-bottom: 8px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nconst Textarea = styled.textarea`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  height: 38px;\n  max-height: 91px;\n  min-height: 40px;\n  overflow: hidden;\n  border: 2px solid transparent;\n  background-color: rgba(255, 255, 255, 0.15);\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 4px;\n  outline: none;\n  color: #fff;\n  resize: none;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n  transition-property: box-shadow, border, background-color;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\nconst EmotesButton = styled(IconButton)`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n`;\nconst SmileyFaceIcon = styled(SmileyFaceIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\n\ntype Props = {\n  text: string;\n  suggestions: SuggestionsState;\n  isDisabled: boolean;\n  onEmoteClick: (name: string) => void;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onKeyUp: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur: () => void;\n  onSuggestionMouseEnter: (index: number) => void;\n  onSuggestionClick: (index: number) => void;\n};\n\nconst ChatInput = React.forwardRef<HTMLTextAreaElement, Props>(\n  (\n    {\n      text,\n      suggestions,\n      isDisabled,\n      onEmoteClick,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onBlur,\n      onSuggestionMouseEnter,\n      onSuggestionClick,\n    },\n    textareaRef,\n  ) => {\n    const chatInputRef = useRef(null);\n    const suggestionsRef = useRef<HTMLDivElement>(null);\n    const suggestionNodesRef = useRef<React.RefObject<HTMLElement>[]>([\n      textareaRef,\n      suggestionsRef,\n    ] as React.RefObject<HTMLElement>[]);\n\n    useOnClickOutside(suggestionNodesRef, () => onBlur());\n\n    const [isEmotesModalVisible, setIsEmotesModalVisible] = useState(false);\n    const isEmotesLoaded = useSelector(isEmotesLoadedSelector);\n    const handleCloseEmotesModal = () => setIsEmotesModalVisible(false);\n\n    useOnClickOutside(chatInputRef, handleCloseEmotesModal);\n\n    const renderSuggestions = ({\n      type,\n      items,\n      activeIndex,\n    }: SuggestionsState) => {\n      const renderUser = (name: string, index: number) => (\n        <SuggestionItem\n          key={name}\n          isActive={index === activeIndex}\n          onMouseEnter={() => onSuggestionMouseEnter(index)}\n          onClick={() => onSuggestionClick(index)}\n        >\n          {name}\n        </SuggestionItem>\n      );\n\n      const renderEmote = (\n        { src, srcSet, alt }: HtmlEntityEmote,\n        index: number,\n      ) => (\n        <SuggestionItem\n          key={alt}\n          isActive={index === activeIndex}\n          onMouseEnter={() => onSuggestionMouseEnter(index)}\n          onClick={() => onSuggestionClick(index)}\n        >\n          <SuggestionImage src={src} srcSet={srcSet} alt={alt} />\n          {alt}\n        </SuggestionItem>\n      );\n\n      const renderItems = () =>\n        type === 'users'\n          ? (items as string[]).map(renderUser)\n          : (items as HtmlEntityEmote[]).map(renderEmote);\n\n      return (\n        <Suggestions ref={suggestionsRef}>\n          {items.length ? renderItems() : 'No matches'}\n        </Suggestions>\n      );\n    };\n\n    const renderEmotesButton = () => (\n      // @ts-ignore\n      <EmotesButton\n        onClick={() => setIsEmotesModalVisible(!isEmotesModalVisible)}\n      >\n        <SmileyFaceIcon />\n      </EmotesButton>\n    );\n\n    const renderEmotesModal = () => (\n      <EmotesModal>\n        <ChatModal onClose={handleCloseEmotesModal}>\n          <EmotePicker onEmoteClick={onEmoteClick} />\n        </ChatModal>\n      </EmotesModal>\n    );\n\n    return (\n      <ChatInputRoot ref={chatInputRef}>\n        <ChatInputInner>\n          {suggestions.isActive && renderSuggestions(suggestions)}\n          <TextareaWrapper isSuggestions={suggestions.isActive}>\n            <TextareaInput>\n              <Textarea\n                ref={textareaRef}\n                value={text}\n                placeholder=\"Send a message\"\n                maxLength={500}\n                disabled={isDisabled}\n                onChange={onChange}\n                onKeyUp={onKeyUp}\n                onKeyDown={onKeyDown}\n              />\n              {isEmotesLoaded && renderEmotesButton()}\n            </TextareaInput>\n          </TextareaWrapper>\n          {isEmotesModalVisible && renderEmotesModal()}\n        </ChatInputInner>\n      </ChatInputRoot>\n    );\n  },\n);\n\nChatInput.defaultProps = {\n  isDisabled: false,\n};\n\nexport default React.memo(ChatInput);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"currentColor\"\n}, React.createElement(\"path\", {\n  d: \"M10 8a2 2 0 100 4 2 2 0 000-4z\"\n}), React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M9 2h2a2.01 2.01 0 001.235 1.855l.53.22a2.01 2.01 0 002.185-.439l1.414 1.414a2.01 2.01 0 00-.439 2.185l.22.53A2.01 2.01 0 0018 9v2a2.01 2.01 0 00-1.855 1.235l-.22.53a2.01 2.01 0 00.44 2.185l-1.415 1.414a2.01 2.01 0 00-2.184-.439l-.531.22A2.01 2.01 0 0011 18H9a2.01 2.01 0 00-1.235-1.854l-.53-.22a2.009 2.009 0 00-2.185.438L3.636 14.95a2.009 2.009 0 00.438-2.184l-.22-.531A2.01 2.01 0 002 11V9c.809 0 1.545-.487 1.854-1.235l.22-.53a2.009 2.009 0 00-.438-2.185L5.05 3.636a2.01 2.01 0 002.185.438l.53-.22A2.01 2.01 0 009 2zm-4 8l1.464 3.536L10 15l3.535-1.464L15 10l-1.465-3.536L10 5 6.464 6.464 5 10z\",\n  clipRule: \"evenodd\"\n}));\n\nvar SvgGears = function SvgGears(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGears, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/gears.5f76af43.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M13 8l-5 5v18h6v5l5-5h4l9-9V8z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#9147ff\",\n  d: \"M26 25l4-4V10H14v15h4v4l4-4z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M20 14h2v6h-2v-6zm7 0v6h-2v-6h2z\"\n});\n\nvar SvgTwitch = function SvgTwitch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 40 40\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTwitch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/twitch.75e6e194.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\n\nconst SwitchRoot = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  line-height: 20px;\n`;\nconst Label = styled.label`\n  content: '';\n  position: relative;\n  display: inline-block;\n  order: 0;\n  width: 35px;\n  height: 20px;\n  vertical-align: bottom;\n  border-radius: 10px/50%;\n  background-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.1s ease;\n  cursor: pointer;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    bottom: 2px;\n    display: block;\n    width: 16px;\n    border-radius: 50%;\n    background-color: #fff;\n    transition: left 0.1s ease;\n  }\n`;\nconst Input = styled.input.attrs({ type: 'checkbox' })`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + ${Label} {\n    background-color: #9147ff;\n\n    &:after {\n      content: '';\n      top: 2px;\n      left: calc(100% - 18px);\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 9px;\n      left: 10px;\n      display: block;\n      height: 3px;\n      width: 7px;\n      border-bottom: 2px solid #fff;\n      border-left: 2px solid #fff;\n      transform: translate3d(-50%, -50%, 0) rotate(-45deg);\n    }\n  }\n`;\n\ninterface Props {\n  id: string;\n  label: string;\n  checked?: boolean;\n  readOnly?: boolean;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Switch = ({ id, label, checked, readOnly, onChange }: Props) => (\n  <SwitchRoot>\n    <Input\n      id={id}\n      aria-label={label}\n      checked={checked}\n      readOnly={readOnly}\n      onChange={onChange}\n    />\n    <Label htmlFor={id} />\n  </SwitchRoot>\n);\n\nSwitch.defaultProps = {\n  checked: false,\n  readOnly: false,\n  onChange: () => {},\n};\n\nexport default Switch;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Scrollbar from 'components/Scrollbar';\nimport Switch from 'components/Switch';\nimport {\n  userDisplayNameSelector,\n  userColorSelector,\n  userBadgesImagesSelector,\n} from 'features/chat/selectors';\nimport { isAuthSelector } from 'features/auth/authSlice';\nimport { changeChatOption } from 'features/options/optionsSlice';\nimport { optionsSelector } from 'features/options/optionsSelectors';\n\nconst OptionsRoot = styled.div`\n  padding: 16px;\n  height: 100%;\n`;\nconst Header = styled.h2`\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.8);\n`;\nconst Categories = styled(Scrollbar)`\n  height: 100%;\n`;\nconst Category = styled.div`\n  &:not(:last-child) {\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  }\n`;\nconst CategoryHeader = styled.div`\n  padding: 8px 0;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst CategoryItems = styled.div``;\nconst Option = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 4px 0;\n  cursor: pointer;\n`;\nconst OptionText = styled.span``;\nconst Profile = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst UserName = styled.div`\n  font-weight: bold;\n  color: ${(p) => p.color};\n`;\nconst LogOutButton = styled.a`\n  margin-left: auto;\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Badge = styled.img`\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst Options = () => {\n  const dispatch = useDispatch();\n  const options = useSelector(optionsSelector);\n\n  const isAuth = useSelector(isAuthSelector);\n\n  const userDisplayName = useSelector(userDisplayNameSelector);\n  const userColor = useSelector(userColorSelector);\n  const userBadgesImages = useSelector(userBadgesImagesSelector);\n\n  const renderOption = useCallback(\n    ({ id, name, title, description, value }) => (\n      <Option\n        key={id}\n        onClick={() => dispatch(changeChatOption({ name, value: !value }))}\n        title={description}\n      >\n        <OptionText>{title}</OptionText>\n        <Switch\n          id={id}\n          label={title}\n          checked={value}\n          onChange={() => dispatch(changeChatOption({ name, value }))}\n        />\n      </Option>\n    ),\n    [dispatch],\n  );\n\n  const renderProfileCategory = () => {\n    const logOutButton = (\n      // @ts-ignore\n      <LogOutButton as={Link} to=\"/chat/logout\">\n        Log Out\n      </LogOutButton>\n    );\n\n    return (\n      <Category>\n        <CategoryHeader>Profile</CategoryHeader>\n        <CategoryItems>\n          <Profile>\n            {userBadgesImages.map(({ alt, label, src, srcSet }, key) => (\n              <Badge\n                // eslint-disable-next-line react/no-array-index-key\n                key={key}\n                alt={alt}\n                aria-label={label}\n                src={src}\n                srcSet={srcSet}\n              />\n            ))}\n            <UserName color={userColor}>{userDisplayName}</UserName>\n            {logOutButton}\n          </Profile>\n        </CategoryItems>\n      </Category>\n    );\n  };\n\n  const renderOptionsCategory = useCallback(\n    ({ title, items }, key) => (\n      <Category key={key}>\n        {!!title && <CategoryHeader>{title}</CategoryHeader>}\n        <CategoryItems>{items.map(renderOption)}</CategoryItems>\n      </Category>\n    ),\n    [renderOption],\n  );\n\n  return (\n    <OptionsRoot>\n      <Header>Chat settings</Header>\n      <Categories>\n        {isAuth && renderProfileCategory()}\n        {options.map(renderOptionsCategory)}\n      </Categories>\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport { ReactComponent as GearsIconSvg } from 'icons/gears.svg';\nimport { ReactComponent as TwitchIconSvg } from 'icons/twitch.svg';\nimport IconButton from 'components/IconButton';\nimport ChatModal from 'components/ChatModal';\nimport Options from 'features/options/Options';\nimport { isAuthSelector, isAuthReadySelector } from 'features/auth/authSlice';\n\nconst ChatControlsRoot = styled.div`\n  position: relative;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n`;\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n\n  & > :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\nconst OptionsModal = styled.div`\n  position: absolute;\n  top: auto;\n  right: 10px;\n  bottom: 100%;\n  margin-bottom: 10px;\n  width: 320px;\n  height: 405px;\n  min-width: 0;\n  white-space: nowrap;\n`;\nconst Button = styled.button.attrs({ type: 'button' })`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 10px;\n  height: 30px;\n  border: none;\n  color: #fff;\n  background-color: #9147ff;\n  outline: none;\n  font-size: 12px;\n  border-radius: 4px;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #772ce8;\n  }\n\n  &:active {\n    background-color: #5c16c5;\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n\n  &[disabled] {\n    background-color: rgba(255, 255, 255, 0.26);\n    color: rgba(255, 255, 255, 0.8);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nconst OptionsButton = styled(IconButton)`\n  margin-left: auto;\n`;\nconst GearsIcon = styled(GearsIconSvg)`\n  display: block;\n  width: 20px;\n  height: 20px;\n`;\nconst TwitchIcon = styled(TwitchIconSvg)`\n  display: block;\n  margin-right: 4px;\n  width: 20px;\n  height: 20px;\n`;\n\ninterface Props {\n  isDisabled: boolean;\n  onSendMessage: () => void;\n}\n\nconst ChatControls = ({ isDisabled, onSendMessage }: Props) => {\n  const [isOptionsModalVisible, setIsOptionsModalVisible] = useState(false);\n  const optionsModalRef = useRef(null);\n\n  const isAuthReady = useSelector(isAuthReadySelector);\n  const isAuth = useSelector(isAuthSelector);\n\n  const handleCloseOptionsModal = () => setIsOptionsModalVisible(false);\n\n  useOnClickOutside(optionsModalRef, handleCloseOptionsModal);\n\n  const renderSignInButton = () => (\n    // @ts-ignore\n    <Button as={Link} to=\"/chat/auth\">\n      <TwitchIcon />\n      Sign in with Twitch\n    </Button>\n  );\n\n  const renderOptionsModal = () => (\n    <OptionsModal ref={optionsModalRef}>\n      <ChatModal onClose={handleCloseOptionsModal}>\n        <Options />\n      </ChatModal>\n    </OptionsModal>\n  );\n\n  const optionsButton = (\n    // @ts-ignore\n    <OptionsButton\n      onClick={() => setIsOptionsModalVisible(!isOptionsModalVisible)}\n    >\n      <GearsIcon />\n    </OptionsButton>\n  );\n\n  return (\n    <ChatControlsRoot>\n      <Controls>\n        {isAuthReady && !isAuth && renderSignInButton()}\n        {optionsButton}\n        <Button disabled={isDisabled} onClick={onSendMessage}>\n          Chat\n        </Button>\n      </Controls>\n      {isOptionsModalVisible && renderOptionsModal()}\n    </ChatControlsRoot>\n  );\n};\n\nChatControls.defaultProps = {\n  isDisabled: false,\n};\n\nexport default React.memo(ChatControls);\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { format } from 'date-fns/fp';\n\nimport {\n  Message as MessageType,\n  MessageEntity,\n} from 'features/chat/slice/messages';\nimport { HtmlEntityBadge } from 'features/chat/utils/htmlEntity';\n\ntype MessageRootProps = {\n  isAction: boolean;\n  isHistory: boolean;\n  isDeleted: boolean;\n  isMention: boolean;\n  isEven: boolean;\n};\n\nconst getChatMessageBg = (p: MessageRootProps) => {\n  if (p.isMention) return 'rgba(255, 0, 0, 0.3)';\n  if (p.isEven) return '#1f1925';\n  return 'transparent';\n};\n\nconst MessageRoot = styled.div<MessageRootProps>`\n  padding: 5px 20px;\n  color: ${(p) => (p.isAction ? p.color : '#fff')};\n  opacity: ${(p) => (p.isHistory || p.isDeleted ? '0.5' : '1')};\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${getChatMessageBg};\n`;\nconst Name = styled.span`\n  font-weight: bold;\n  color: ${(p) => p.color};\n  cursor: pointer;\n`;\nconst Emote = styled.img`\n  display: inline-block;\n  margin: -5px 0;\n  vertical-align: middle;\n`;\nconst Emoji = styled.img`\n  display: inline-block;\n  margin-top: -5px;\n  margin-bottom: -4px;\n  width: 20px;\n  height: auto;\n  vertical-align: middle;\n`;\nconst Mention = styled.span<{ isActive: boolean; isOwnMessage: boolean }>`\n  ${(p) =>\n    (p.isActive || p.isOwnMessage) &&\n    css`\n      padding: 2px 4px;\n    `};\n  ${(p) =>\n    p.isOwnMessage &&\n    css`\n      background-color: #40404a;\n      color: #fff;\n    `};\n  ${(p) =>\n    p.isActive &&\n    css`\n      background-color: #fafafa;\n      color: #18181b;\n    `};\n`;\nconst Link = styled.a`\n  color: #bf94ff;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: #a970ff;\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: #a970ff;\n  }\n`;\nconst Timestamp = styled.span`\n  margin-right: 5px;\n  color: rgba(255, 255, 255, 0.6);\n`;\nconst Badge = styled.img`\n  margin-bottom: 2px;\n  margin-right: 3px;\n  max-width: 100%;\n  vertical-align: middle;\n  border-radius: 3px;\n`;\n\nconst renderMessageArray = (login: string, userLogin: string | null) => (\n  item: MessageEntity,\n  key: number,\n) => {\n  if (typeof item !== 'object') return item;\n\n  if (\n    item.type === 'twitch-emote' ||\n    item.type === 'bttv-emote' ||\n    item.type === 'ffz-emote'\n  ) {\n    return (\n      <Emote key={key} src={item.src} srcSet={item.srcSet} alt={item.alt} />\n    );\n  }\n\n  if (item.type === 'emoji') {\n    return <Emoji key={key} src={item.src} alt={item.alt} />;\n  }\n\n  if (item.type === 'mention') {\n    return (\n      <Mention\n        key={key}\n        isActive={item.target === userLogin}\n        isOwnMessage={login === userLogin}\n      >\n        {item.text}\n      </Mention>\n    );\n  }\n\n  if (item.type === 'link') {\n    return (\n      <Link\n        key={key}\n        href={item.href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n      >\n        {item.text}\n      </Link>\n    );\n  }\n\n  return null;\n};\n\nconst renderBadges = (badges: HtmlEntityBadge[]) =>\n  badges.map(({ alt, label, src, srcSet }, key: number) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <Badge key={key} alt={alt} aria-label={label} src={src} srcSet={srcSet} />\n  ));\n\ninterface Props {\n  message: MessageType;\n  userLogin: string | null;\n  isEven: boolean;\n  isShowTimestamps: boolean;\n  onNameRightClick: (name: string) => void;\n}\n\nconst MESSAGE_DELETED_LABEL = '<message deleted>';\n\nconst Message = ({\n  message: {\n    message,\n    entities,\n    user: { login, color, displayName, badges },\n    timestamp,\n    isHistory,\n    isAction,\n    isDeleted,\n  },\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}: Props) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const isMention =\n    login !== userLogin && RegExp(userLogin as string, 'gi').test(message);\n\n  const handleNameRightClick = (\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>,\n  ) => {\n    onNameRightClick(displayName);\n    e.preventDefault();\n  };\n\n  return (\n    <MessageRoot\n      isHistory={isHistory}\n      isAction={isAction}\n      isEven={isEven}\n      isMention={isMention}\n      isDeleted={isDeleted}\n      color={color}\n    >\n      {isShowTimestamps && (\n        <Timestamp>{format('h:mm', new Date(timestamp))}</Timestamp>\n      )}\n      {badges.length > 0 && renderBadges(badges)}\n      <Name color={color} onContextMenu={handleNameRightClick}>\n        {displayName}\n      </Name>\n      {isAction ? ' ' : ': '}\n      {isDeleted && !isVisible ? (\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\n        <Link onClick={() => setIsVisible(true)}>{MESSAGE_DELETED_LABEL}</Link>\n      ) : (\n        entities.map(renderMessageArray(login, userLogin))\n      )}\n    </MessageRoot>\n  );\n};\n\nMessage.defaultProps = {\n  userLogin: '',\n  isEven: false,\n  isShowTimestamps: false,\n  // onNameClick: () => {},\n  onNameRightClick: () => {},\n};\n\nexport default React.memo(Message);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Notice as NoticeType } from 'features/chat/slice/messages';\n\nconst NoticeRoot = styled.div<{ isEven: boolean }>`\n  padding: 5px 20px;\n  color: rgba(255, 255, 255, 0.6);\n  line-height: 20px;\n  word-wrap: break-word;\n  background-color: ${(p) => (p.isEven ? '#1f1925' : 'transparent')};\n`;\n\ninterface Props {\n  message: NoticeType;\n  isEven: boolean;\n}\n\nconst Notice = ({ message: { message }, isEven }: Props) => (\n  <NoticeRoot isEven={isEven}>{message}</NoticeRoot>\n);\n\nNotice.defaultProps = {\n  isEven: false,\n};\n\nexport default React.memo(Notice);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { UserNotice as UserNoticeType } from 'features/chat/slice/messages';\n\nconst UserNoticeRoot = styled.div`\n  padding: 5px 20px 5px 16px;\n  line-height: 20px;\n  word-wrap: break-word;\n  border-left: 4px solid #9147ff;\n  color: #fff;\n`;\n\ninterface Props {\n  message: UserNoticeType;\n}\n\nconst UserNotice = ({ message: { systemMessage } }: Props) => (\n  <UserNoticeRoot>{systemMessage}</UserNoticeRoot>\n);\n\nexport default React.memo(UserNotice);\n","import React from 'react';\n\nimport { ChatMessage as ChatMessageType } from 'features/chat/slice/messages';\nimport Message from 'features/chat/components/Message';\nimport Notice from 'features/chat/components/Notice';\nimport UserNotice from 'features/chat/components/UserNotice';\n\ninterface Props {\n  message: ChatMessageType;\n  userLogin: string | null;\n  isEven: boolean;\n  isShowTimestamps: boolean;\n  // onNameClick: (name: string) => void;\n  onNameRightClick: (name: string) => void;\n}\n\nconst ChatMessage = ({\n  message,\n  userLogin,\n  isEven,\n  isShowTimestamps,\n  // onNameClick,\n  onNameRightClick,\n}: Props) => {\n  if (message.type === 'message') {\n    return (\n      <Message\n        message={message}\n        userLogin={userLogin}\n        isEven={isEven}\n        isShowTimestamps={isShowTimestamps}\n        // onNameClick={onNameClick}\n        onNameRightClick={onNameRightClick}\n      />\n    );\n  }\n\n  if (message.type === 'notice') {\n    return <Notice message={message} isEven={isEven} />;\n  }\n\n  if (message.type === 'user-notice') {\n    return <UserNotice message={message} />;\n  }\n\n  return null as never;\n};\n\nChatMessage.defaultProps = {\n  userLogin: '',\n  isEven: false,\n  isShowTimestamps: false,\n  // onNameClick: () => {},\n  onNameRightClick: () => {},\n};\n\nexport default React.memo(ChatMessage);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ScrollbarType from 'react-scrollbars-custom';\nimport { ScrollState } from 'react-scrollbars-custom/dist/types/types';\n\nimport Scrollbar from 'components/Scrollbar';\nimport ChatMessage from 'features/chat/components/ChatMessage';\nimport { messagesSelector, isEvenSelector } from 'features/chat/selectors';\nimport { userLoginSelector } from 'features/auth/authSlice';\nimport {\n  isShowTimestampsSelector,\n  isSplitChatSelector,\n} from 'features/options/optionsSelectors';\n\nconst MORE_MESSAGES_OFFSET = 100;\n\nconst MessagesRoot = styled.div`\n  position: relative;\n  flex-grow: 1;\n`;\nconst StyledScrollbar = styled(Scrollbar)`\n  .ScrollbarsCustom-Content {\n    padding-bottom: 10px !important;\n  }\n`;\nconst MoreMessagesButton = styled.button<{ isVisible: boolean }>`\n  position: absolute;\n  left: 50%;\n  bottom: 10px;\n  display: ${(p) => (p.isVisible ? 'block' : 'none')};\n  padding: 5px 20px;\n  background: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: translateX(-50%);\n`;\n\ntype Props = {\n  onNameRightClick: (name: string) => void;\n};\n\nconst Messages = ({ onNameRightClick }: Props) => {\n  const [\n    isMoreMessagesButtonVisible,\n    setIsMoreMessagesButtonVisible,\n  ] = useState(false);\n\n  const messages = useSelector(messagesSelector);\n  const userLogin = useSelector(userLoginSelector);\n\n  const isEven = useSelector(isEvenSelector);\n  const isShowTimestamps = useSelector(isShowTimestampsSelector);\n  const isSplitChat = useSelector(isSplitChatSelector);\n\n  const handleScrollUpdate = ({\n    clientHeight,\n    contentScrollHeight,\n    scrollTop,\n  }: ScrollState) => {\n    const maxScrollTop = contentScrollHeight - clientHeight;\n    const isVisible = scrollTop + MORE_MESSAGES_OFFSET < maxScrollTop;\n\n    setIsMoreMessagesButtonVisible(isVisible);\n  };\n\n  const scrollbarRef = useRef<ScrollbarType>(null);\n\n  const handleScrollToBottom = () => {\n    if (scrollbarRef.current) {\n      scrollbarRef.current.scrollToBottom();\n    }\n  };\n\n  useEffect(() => {\n    if (!isMoreMessagesButtonVisible) {\n      handleScrollToBottom();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messages]);\n\n  const getIsEven = (key: number) => {\n    if (!isSplitChat) return false;\n    return isEven ? key % 2 === 1 : key % 2 === 0;\n  };\n\n  return (\n    <MessagesRoot>\n      <StyledScrollbar onUpdate={handleScrollUpdate} ref={scrollbarRef}>\n        {messages.map((message, key) => (\n          <ChatMessage\n            key={message.id}\n            message={message}\n            userLogin={userLogin}\n            isEven={getIsEven(key)}\n            isShowTimestamps={isShowTimestamps}\n            onNameRightClick={onNameRightClick}\n          />\n        ))}\n      </StyledScrollbar>\n      <MoreMessagesButton\n        onClick={handleScrollToBottom}\n        isVisible={isMoreMessagesButtonVisible}\n      >\n        More messages below\n      </MoreMessagesButton>\n    </MessagesRoot>\n  );\n};\n\nMessages.defaultProps = {\n  onNameRightClick: () => {},\n};\n\nexport default React.memo(Messages);\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport useSetState from 'hooks/useSetState';\nimport { SUGGESTION_TYPES } from 'utils/constants';\nimport { isAuthSelector } from 'features/auth/authSlice';\nimport { isFixedWidthSelector } from 'features/options/optionsSelectors';\nimport useInitializeAuth from 'features/auth/hooks/useInitializeAuth';\nimport useFetchChatData from 'features/chat/hooks/useFetchChatData';\nimport useCurrentChannel from 'features/chat/hooks/useCurrentChannel';\nimport useTwitchClient from 'features/chat/hooks/useTwitchClient';\nimport {\n  currentChannelSelector,\n  usersSelector,\n  emotesSelector,\n  isConnectedSelector,\n} from 'features/chat/selectors';\nimport getUserSuggestions from 'features/chat/utils/getUserSuggestions';\nimport getEmoteSuggestions from 'features/chat/utils/getEmoteSuggestions';\nimport { HtmlEntityEmote } from 'features/chat/utils/htmlEntity';\nimport replaceEmojis from 'features/chat/utils/replaceEmojis';\nimport ChatInput from 'features/chat/components/ChatInput';\nimport ChatControls from 'features/chat/components/ChatControls';\nimport Messages from 'features/chat/components/Messages';\n\nconst ChatRoot = styled.div`\n  height: 100vh;\n  font-size: 12px;\n  background-color: #0e0e10;\n`;\nconst ChatWrapper = styled.div<{ isFixedWidth: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: ${(p) => (p.isFixedWidth ? '340px' : 'auto')};\n  height: 100%;\n  background-color: #18181b;\n`;\n\ninterface ASuggestions {\n  isActive: boolean;\n  activeIndex: number;\n  start: number;\n  end: number;\n}\n\ninterface UserSuggestions extends ASuggestions {\n  type: 'users';\n  items: string[];\n}\ninterface EmoteSuggestions extends ASuggestions {\n  type: 'emotes';\n  items: HtmlEntityEmote[];\n}\nexport type SuggestionsState = UserSuggestions | EmoteSuggestions;\n\nconst suggestionsInitialState: SuggestionsState = {\n  type: 'users',\n  isActive: false,\n  items: [],\n  activeIndex: 0,\n  start: 0,\n  end: 0,\n};\n\nconst setSuggestionsIndexUp = ({\n  activeIndex,\n  items,\n  ...rest\n}: SuggestionsState) =>\n  ({\n    activeIndex: activeIndex === 0 ? items.length - 1 : activeIndex - 1,\n    items,\n    ...rest,\n  } as SuggestionsState);\n\nconst setSuggestionsIndexDown = ({\n  activeIndex,\n  items,\n  ...rest\n}: SuggestionsState) =>\n  ({\n    activeIndex: activeIndex === items.length - 1 ? 0 : activeIndex + 1,\n    items,\n    ...rest,\n  } as SuggestionsState);\n\nconst replaceSuggestionText = (\n  text: string,\n  { type, items, activeIndex, start, end }: SuggestionsState,\n) => {\n  if (items.length === 0) return text;\n\n  const currentItem = items[activeIndex];\n  const insertedText =\n    type === 'users' ? `@${currentItem}` : (currentItem as HtmlEntityEmote).alt;\n\n  const textBefore = text.substring(0, start);\n  const testAfter = text.substring(end) || ' ';\n\n  return `${textBefore}${insertedText}${testAfter}`;\n};\n\nconst Chat = () => {\n  const [text, setText] = useState('');\n\n  const client = useTwitchClient();\n\n  useInitializeAuth();\n  useCurrentChannel();\n  useFetchChatData();\n\n  const currentChannel = useSelector(currentChannelSelector);\n  const emotes = useSelector(emotesSelector);\n  const users = useSelector(usersSelector);\n  const isAuth = useSelector(isAuthSelector);\n  const isConnected = useSelector(isConnectedSelector);\n\n  const isFixedWidth = useSelector(isFixedWidthSelector);\n  const chatInputRef = useRef<HTMLTextAreaElement>(null);\n  const [suggestions, setSuggestions] = useSetState<SuggestionsState>(\n    suggestionsInitialState,\n  );\n\n  // Refs to avoid multiple renders\n  const textRef = useRef(text);\n  textRef.current = text;\n  const usersRef = useRef(users);\n  usersRef.current = users;\n  const emotesRef = useRef(emotes);\n  emotesRef.current = emotes;\n  const suggestionsRef = useRef(suggestions);\n  suggestionsRef.current = suggestions;\n\n  const isDisabled = !isAuth || !isConnected;\n\n  const onSendMessage = useCallback(\n    (message) => {\n      if (!client) return;\n      const normalizedMessage = replaceEmojis(message.trim());\n      client.say(currentChannel, normalizedMessage);\n    },\n    [client, currentChannel],\n  );\n\n  const handleNameRightClick = useCallback(\n    (name: string) => {\n      setText((t) => `${t.trim()} @${name} `.trimLeft());\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n    },\n    [setText, chatInputRef],\n  );\n\n  const handleEmoteClick = useCallback(\n    (name: string) => {\n      setText((t) => `${t.trim()} ${name} `.trimLeft());\n    },\n    [setText],\n  );\n\n  const handleSendMessage = useCallback(() => {\n    if (!textRef.current) return;\n    onSendMessage(textRef.current);\n    setText('');\n  }, [onSendMessage, textRef, setText]);\n\n  const handleBlur = useCallback(() => {\n    setSuggestions({ isActive: false });\n  }, [setSuggestions]);\n\n  const handleChange = useCallback(\n    (e) => {\n      const { value, selectionStart } = e.target;\n\n      setText(value);\n\n      const spaceIndexBefore = value.lastIndexOf(' ', selectionStart - 1);\n      const spaceIndexAfter = value.indexOf(' ', selectionStart);\n\n      const start = spaceIndexBefore === -1 ? 0 : spaceIndexBefore + 1;\n      const end = spaceIndexAfter === -1 ? value.length : spaceIndexAfter;\n\n      const word = value.substring(start, end);\n\n      const usersMatch = SUGGESTION_TYPES.users.regex.exec(word);\n\n      if (usersMatch) {\n        const [, beginText] = usersMatch;\n        const items = getUserSuggestions(\n          beginText,\n          usersRef.current,\n          SUGGESTION_TYPES.users.limit,\n        );\n\n        setSuggestions({\n          type: 'users',\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      const emotesMatch = SUGGESTION_TYPES.emotes.regex.exec(word);\n\n      if (emotesMatch && emotesRef.current) {\n        const [, beginText] = emotesMatch;\n        const items = getEmoteSuggestions(\n          beginText,\n          emotesRef.current,\n          SUGGESTION_TYPES.emotes.limit,\n        );\n\n        setSuggestions({\n          type: 'emotes',\n          isActive: true,\n          items,\n          activeIndex: 0,\n          start,\n          end,\n        });\n\n        return;\n      }\n\n      if (suggestionsRef.current.isActive) {\n        setSuggestions(suggestionsInitialState);\n      }\n    },\n    [setText, setSuggestions, suggestionsRef],\n  );\n\n  const handleKeyUp = useCallback(() => {}, []);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (suggestionsRef.current.isActive) {\n        if (e.key === 'Enter' || e.key === 'Tab') {\n          e.preventDefault();\n          setText((t) => replaceSuggestionText(t, suggestionsRef.current));\n          setSuggestions(suggestionsInitialState);\n\n          return;\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexUp);\n          return;\n        }\n\n        if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          setSuggestions(setSuggestionsIndexDown);\n          return;\n        }\n\n        if (e.key === 'Escape') {\n          setSuggestions({ isActive: false });\n          return;\n        }\n      }\n\n      if (!suggestionsRef.current.isActive) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          handleSendMessage();\n        }\n      }\n    },\n    [handleSendMessage, setSuggestions, suggestionsRef],\n  );\n\n  const onSuggestionMouseEnter = useCallback(\n    (activeIndex: number) => setSuggestions({ activeIndex }),\n    [setSuggestions],\n  );\n\n  const onSuggestionClick = useCallback(\n    (activeIndex: number) => {\n      setText((t) =>\n        replaceSuggestionText(t, { ...suggestionsRef.current, activeIndex }),\n      );\n\n      if (chatInputRef.current) {\n        chatInputRef.current.focus();\n      }\n\n      setSuggestions(suggestionsInitialState);\n    },\n    [setText, setSuggestions, chatInputRef],\n  );\n\n  return (\n    <ChatRoot>\n      <ChatWrapper isFixedWidth={isFixedWidth}>\n        <Messages onNameRightClick={handleNameRightClick} />\n        <ChatInput\n          ref={chatInputRef}\n          text={text}\n          suggestions={suggestions}\n          isDisabled={isDisabled}\n          onEmoteClick={handleEmoteClick}\n          onChange={handleChange}\n          onKeyUp={handleKeyUp}\n          onKeyDown={handleKeyDown}\n          onBlur={handleBlur}\n          onSuggestionMouseEnter={onSuggestionMouseEnter}\n          onSuggestionClick={onSuggestionClick}\n        />\n        <ChatControls\n          isDisabled={isDisabled}\n          onSendMessage={handleSendMessage}\n        />\n      </ChatWrapper>\n    </ChatRoot>\n  );\n};\n\nexport default Chat;\n","import { getAuthUrl } from 'features/auth/authUtils';\n\n// const href = `http://localhost:3000/chat/#access_token=1r74fjj6m8ocwfuowvb6jdlh9uvwsg&id_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjEifQ.eyJhdWQiOiI0ZTY2dzFwbzF0emY2NDVyOXZ1dG45cXVzMDV2Zzl4IiwiZXhwIjoxNTc0MzU2ODc0LCJpYXQiOjE1NzQzNTU5NzQsImlzcyI6Imh0dHBzOi8vaWQudHdpdGNoLnR2L29hdXRoMiIsInN1YiI6IjM4MjU5NDI1IiwiYXRfaGFzaCI6ImNNYVhLR3g5VnJIaW9PcC1oUkRrd0EiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGljdHVyZSI6Imh0dHBzOi8vc3RhdGljLWNkbi5qdHZudy5uZXQvanR2X3VzZXJfcGljdHVyZXMvZG1pdHJ5c2NhbGV0dGEtcHJvZmlsZV9pbWFnZS00MWIwMzZkMGVmNjQwMDUzLTE1MHgxNTAuanBlZyIsInByZWZlcnJlZF91c2VybmFtZSI6IkRtaXRyeVNjYWxldHRhIn0.4PS13e-l2BnPyjpejh-mcOE571Z3al7t6pcAHHuKclBGDF8cswhTfmbFOPZCWR9-Qu7mEF74ijykVsLWB1KG5dcijdH4r3A0D0wtv7g9_FE5HNs5nS6V2IqSK0HDSxSVyZTze2tWH5xy1s9PUzLl4-K-9_Ij1Ow7D-M1fkF2fcm7v4V541kApfZi4pUg7iabJ-QJXRCEoWgY523R_oC5Lu1d3mkhcaGQM7YQbmAZy8nZiX4dIe9QwhaVbd6_1lwDNyoySK6aHk6zhroP9e80EgMHU39gutmpJlEtxqcB_llBa2xa2twaqq7Pt5sIibuWejCRscAyFzcEAsHckJlE9Q&scope=openid+channel%253Amoderate+chat%253Aedit+chat%253Aread+whispers%253Aread+whispers%253Aedit+user_blocks_read+user_blocks_edit+user_subscriptions&token_type=bearer`;\n\nconst Auth = () => {\n  window.location.href = getAuthUrl();\n  // window.location.href = href;\n\n  return null;\n};\n\nexport default Auth;\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { invalidateAuth } from 'features/auth/authSlice';\n\nconst Logout = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('idToken');\n  localStorage.removeItem('user');\n\n  dispatch(invalidateAuth());\n\n  history.push({\n    pathname: '/chat/',\n    hash: localStorage.lastChannel || '',\n  });\n\n  return null;\n};\n\nexport default Logout;\n","import { useHistory } from 'react-router-dom';\n\nconst AuthCallback = () => {\n  const history = useHistory();\n\n  if (!window.location.hash) return null;\n\n  const params = new URLSearchParams(window.location.hash.slice(1));\n\n  const accessToken = params.get('access_token');\n  const idToken = params.get('id_token');\n\n  if (!accessToken || !idToken) return null;\n\n  localStorage.setItem('accessToken', accessToken);\n  localStorage.setItem('idToken', idToken);\n\n  history.push({\n    pathname: '/chat/',\n    hash: localStorage.lastChannel || '',\n  });\n\n  return null;\n};\n\nexport default AuthCallback;\n","import { css } from 'styled-components';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    font-family: Roobert, Helvetica Neue, Helvetica, Arial, sans-serif;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\nimport colors from 'styles/colors';\nimport vars from 'styles/vars';\n\nexport default createGlobalStyle`\n  :root {\n    ${colors};\n    ${vars};\n  }\n  ${common};\n`;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from 'react-router-dom';\n\nimport { isAuthRedirect } from 'features/auth/authUtils';\nimport Chat from 'features/chat/components/Chat';\nimport Auth from 'features/auth/Auth';\nimport Logout from 'features/auth/Logout';\nimport AuthCallback from 'features/auth/AuthCallback';\nimport GlobalStyles from 'styles';\n\nconst getHomeComponent = ({ location }: RouteComponentProps) =>\n  isAuthRedirect(location.hash) ? <AuthCallback /> : <Chat />;\n\nconst App: React.FC = () => (\n  <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/chat/\" render={getHomeComponent} />\n        <Route exact path=\"/chat/auth\" component={Auth} />\n        <Route exact path=\"/chat/logout\" component={Logout} />\n      </Switch>\n    </Router>\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport auth from 'features/auth/authSlice';\nimport chat from 'features/chat/slice/chatSlice';\nimport options from 'features/options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  auth,\n  chat,\n  options,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && (module as any).hot) {\n  (module as any).hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReactGA from 'react-ga';\n\nimport { isAuthRedirect } from 'features/auth/authUtils';\nimport store from 'app/store';\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-139550930-3');\n\n  if (!isAuthRedirect(window.location.hash)) {\n    const page =\n      window.location.pathname + window.location.search + window.location.hash;\n    ReactGA.pageview(page);\n  }\n}\n\nconst render = () => {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && (module as any).hot) {\n  (module as any).hot.accept('./app/App', render);\n}\n","import {\n  TWITCH_API_AUTH_BASE,\n  TWITCH_API_CLIENT_ID,\n  TWITCH_API_REDIRECT_URI,\n} from 'utils/constants';\n\ntype StoredUser = {\n  id: string;\n  login: string;\n};\n\n/* eslint-disable @typescript-eslint/camelcase */\nconst authParams = {\n  client_id: TWITCH_API_CLIENT_ID,\n  redirect_uri: TWITCH_API_REDIRECT_URI,\n  response_type: 'token+id_token',\n  scope: [\n    'openid',\n    'channel:moderate',\n    'chat:edit',\n    'chat:read',\n    'whispers:read',\n    'whispers:edit',\n    'user_blocks_read',\n    'user_blocks_edit',\n    'user_subscriptions',\n  ].join('+'),\n  claims: JSON.stringify({\n    id_token: { email_verified: null, picture: null, preferred_username: null },\n  }),\n  // TODO:\n  // state: uid(),\n};\n/* eslint-enable @typescript-eslint/camelcase */\n\nexport const getAuthUrl = (): string => {\n  const search = Object.entries(authParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${TWITCH_API_AUTH_BASE}?${search}`;\n};\n\nexport const isAuthRedirect = (hash: string): boolean =>\n  hash.startsWith('#access_token=');\n\nexport const writeUserToLocatStorage = (user: StoredUser): void => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nexport const readUserFromLocatStorage = (): StoredUser | null => {\n  let user;\n\n  try {\n    user = JSON.parse(localStorage.user);\n  } catch (e) {\n    user = null;\n  }\n\n  if (!user || !user.id || !user.login) return null;\n\n  return user as StoredUser;\n};\n","import fetchRequest, { FetchRequestOptions } from 'utils/fetchRequest';\n\nconst TWITCH_API_HELIX = 'https://api.twitch.tv/helix';\nconst TWITCH_API_KRAKEN = 'https://api.twitch.tv/kraken';\n\nconst getHelixHeaders = () => ({\n  Authorization: `Bearer ${localStorage.accessToken}`,\n});\n\nconst getKrakenHeaders = () => ({\n  Accept: 'application/vnd.twitchtv.v5+json',\n  'Client-ID': process.env.REACT_APP_TWITCH_API_CLIENT_ID,\n  Authorization: `OAuth ${localStorage.accessToken}`,\n});\n\nconst apiRequestHelix = (url: string, options?: FetchRequestOptions) =>\n  fetchRequest(`${TWITCH_API_HELIX}${url}`, {\n    ...options,\n    headers: getHelixHeaders(),\n  } as FetchRequestOptions);\n\nconst apiRequestKraken = (url: string, options?: FetchRequestOptions) =>\n  fetchRequest(`${TWITCH_API_KRAKEN}${url}`, {\n    ...options,\n    headers: getKrakenHeaders(),\n  } as FetchRequestOptions);\n\nexport interface TwitchUser {\n  id: string;\n  login: string;\n  display_name: string;\n  type: string;\n  broadcaster_type: string;\n  description: string;\n  profile_image_url: string;\n  offline_image_url: string;\n  view_count: number;\n}\n\nexport interface TwitchUsersResponse {\n  data: TwitchUser[];\n}\n\nexport interface TwitchEmote {\n  id: number;\n  code: string;\n}\n\nexport interface TwitchEmotesResponse {\n  emoticon_sets: {\n    [id: string]: TwitchEmote[];\n  };\n}\n\nexport interface TwitchBadgeVersion {\n  image_url_1x: string;\n  image_url_2x: string;\n  image_url_4x: string;\n  description: string;\n  title: string;\n  click_action: string;\n  click_url: string;\n  last_updated: null;\n}\n\nexport interface TwitchBadge {\n  versions: {\n    [version: string]: TwitchBadgeVersion;\n  };\n}\n\nexport interface TwitchBadges {\n  [name: string]: TwitchBadge;\n}\n\nexport interface TwitchBadgesResponse {\n  badge_sets: TwitchBadges;\n}\n\nexport interface TwitchBlockedUser {\n  display_name: string;\n  _id: string;\n  name: string;\n  type: string;\n  bio: string | null;\n  created_at: string;\n  updated_at: string;\n  logo: string;\n}\n\nexport interface TwitchBlockedUsersResponse {\n  _total: number;\n  blocks: Array<{\n    user: TwitchBlockedUser;\n  }>;\n}\n\nexport const fetchUser = (userId: string): Promise<TwitchUsersResponse> =>\n  apiRequestHelix(`/users?id=${userId}`);\n\nexport const fetchTwitchEmotes = (\n  userId: string,\n): Promise<TwitchEmotesResponse> => apiRequestKraken(`/users/${userId}/emotes`);\n\nexport const fetchGlobalBadges = (\n  language = 'en',\n): Promise<TwitchBadgesResponse> =>\n  fetchRequest(\n    `https://badges.twitch.tv/v1/badges/global/display?language=${language}`,\n  );\n\nexport const fetchChannelBadges = (\n  channelId: string,\n  language = 'en',\n): Promise<TwitchBadgesResponse> =>\n  fetchRequest(\n    `https://badges.twitch.tv/v1/badges/channels/${channelId}/display?language=${language}`,\n  );\n\nexport const fetchBlockedUsers = (\n  userId: string,\n): Promise<TwitchBlockedUsersResponse> =>\n  apiRequestKraken(`/users/${userId}/blocks`);\n","import { createSelector } from '@reduxjs/toolkit';\nimport * as R from 'ramda';\n\nimport { TwitchEmote, TwitchBadge, TwitchBadges } from 'api/twitch';\nimport { BttvGlobalEmote, BttvChannelEmote } from 'api/bttv';\nimport { FfzEmote } from 'api/ffz';\nimport { RootState } from 'app/rootReducer';\nimport {\n  createTwitchEmote,\n  createBttvEmote,\n  createFfzEmote,\n  createBadges,\n  HtmlEntityEmote,\n} from 'features/chat/utils/htmlEntity';\nimport { ChatMessage } from 'features/chat/slice/messages';\n\nexport type StateEmotes = {\n  twitchGlobal: {\n    [setId: string]: TwitchEmote[];\n  };\n  twitchUser: {\n    [setId: string]: TwitchEmote[];\n  };\n  bttvGlobal: BttvGlobalEmote[];\n  bttvChannel: BttvChannelEmote[];\n  ffzGlobal: FfzEmote[];\n  ffzChannel: FfzEmote[];\n} | null;\n\nexport const currentChannelSelector = (state: RootState) =>\n  state.chat.currentChannel;\n\nexport const isConnectedSelector = (state: RootState) => state.chat.isConnected;\n\n// messages\n\nexport const messagesSelector = (state: RootState): ChatMessage[] => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'messages', channel, 'items'];\n\n  return R.pathOr([], path, state);\n};\n\nexport const usersSelector = (state: RootState): string[] => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'messages', channel, 'users'];\n\n  return R.pathOr([], path, state);\n};\n\nexport const isHistoryLoadedSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'messages', channel, 'history', 'isLoaded'];\n\n  return R.pathOr(false, path, state);\n};\n\nexport const isHistoryAddedSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'messages', channel, 'history', 'isAdded'];\n\n  return R.pathOr(false, path, state);\n};\n\nexport const isEvenSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'messages', channel, 'isEven'];\n\n  return R.pathOr(false, path, state);\n};\n\n// emotes isLoaded\n\nexport const isTwitchEmotesLoadedSelector = (state: RootState) =>\n  state.chat.twitchEmotes.isLoaded;\n\nexport const isBttvGlobalEmotesLoadedSelector = (state: RootState) =>\n  state.chat.bttvEmotes.global.isLoaded;\n\nexport const isBttvChannelEmotesLoadedSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'bttvEmotes', 'byChannels', channel, 'isLoaded'];\n\n  return R.pathOr(false, path, state);\n};\n\nexport const isBttvEmotesLoadedSelector = (state: RootState) =>\n  isBttvGlobalEmotesLoadedSelector(state) &&\n  isBttvChannelEmotesLoadedSelector(state);\n\nexport const isFfzGlobalEmotesLoadedSelector = (state: RootState) =>\n  state.chat.ffzEmotes.global.isLoaded;\n\nexport const isFfzChannelEmotesLoadedSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'ffzEmotes', 'byChannels', channel, 'isLoaded'];\n\n  return R.pathOr(false, path, state);\n};\n\nexport const isFfzEmotesLoadedSelector = (state: RootState) =>\n  isFfzGlobalEmotesLoadedSelector(state) &&\n  isFfzChannelEmotesLoadedSelector(state);\n\nexport const isEmotesLoadedSelector = (state: RootState) =>\n  isTwitchEmotesLoadedSelector(state) &&\n  isBttvGlobalEmotesLoadedSelector(state) &&\n  isBttvChannelEmotesLoadedSelector(state) &&\n  isFfzGlobalEmotesLoadedSelector(state) &&\n  isFfzChannelEmotesLoadedSelector(state);\n\n// emotes\n\nconst twitchGlobalEmotesSelector = (state: RootState) =>\n  state.chat.twitchEmotes.global;\nconst twitchUserEmotesSelector = (state: RootState) =>\n  state.chat.twitchEmotes.user;\n\nconst createChannelEmotesSelector = <T>(type: 'bttvEmotes' | 'ffzEmotes') => (\n  state: RootState,\n): T[] => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', type, 'byChannels', channel, 'items'];\n\n  return R.pathOr([], path, state);\n};\n\nconst bttvGlobalEmotesSelector = (state: RootState) =>\n  state.chat.bttvEmotes.global.items;\nconst bttvChannelEmotesSelector = createChannelEmotesSelector<BttvChannelEmote>(\n  'bttvEmotes',\n);\n\nconst ffzGlobalEmotesSelector = (state: RootState) =>\n  state.chat.ffzEmotes.global.items;\nconst ffzChannelEmotesSelector = createChannelEmotesSelector<FfzEmote>(\n  'ffzEmotes',\n);\n\nexport const emotesSelector = createSelector(\n  isEmotesLoadedSelector,\n  twitchGlobalEmotesSelector,\n  twitchUserEmotesSelector,\n  bttvGlobalEmotesSelector,\n  bttvChannelEmotesSelector,\n  ffzGlobalEmotesSelector,\n  ffzChannelEmotesSelector,\n  (\n    isEmotesLoaded,\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  ) => {\n    if (!isEmotesLoaded) return null;\n\n    return {\n      twitchGlobal,\n      twitchUser,\n      bttvGlobal,\n      bttvChannel,\n      ffzGlobal,\n      ffzChannel,\n    } as StateEmotes;\n  },\n);\n\n// prettier-ignore\nconst regexEmotesMap: { [value: string]: string } = {\n    '[oO](_|\\\\.)[oO]': 'O_o',\n    '\\\\&gt\\\\;\\\\(':     '>(',\n    '\\\\&lt\\\\;3':       '<3',\n    '\\\\:-?(o|O)':      ':O',\n    '\\\\:-?(p|P)':      ':P',\n    '\\\\:-?[\\\\\\\\/]':    ':/',\n    '\\\\:-?[z|Z|\\\\|]':  ':Z',\n    '\\\\:-?\\\\(':        ':(',\n    '\\\\:-?\\\\)':        ':)',\n    '\\\\:-?D':          ':D',\n    '\\\\;-?(p|P)':      ';P',\n    '\\\\;-?\\\\)':        ';)',\n    'R-?\\\\)':          'R)',\n    'B-?\\\\)':          'B)',\n  };\n\nconst createGlobalTwitchEmote = ({ id, code }: TwitchEmote) =>\n  createTwitchEmote({ id, code: regexEmotesMap[code] || code });\n\nexport type EmoteCategory = {\n  title?: string;\n  items: HtmlEntityEmote[];\n};\n\nexport const emoteCategoriesSelector = createSelector(\n  emotesSelector,\n  (emotes) => {\n    if (!emotes) return [];\n\n    const {\n      twitchGlobal,\n      twitchUser,\n      bttvGlobal,\n      bttvChannel,\n      ffzGlobal,\n      ffzChannel,\n    } = emotes;\n\n    return [\n      {\n        title: 'BetterTTV Channel Emotes',\n        items: bttvChannel.map(createBttvEmote),\n      },\n      {\n        title: 'FrankerFaceZ Channel Emotes',\n        items: ffzChannel.map(createFfzEmote),\n      },\n      ...R.pipe(\n        // @ts-ignore\n        R.values,\n        R.map((items) => ({ items: R.map(createTwitchEmote, items) })),\n      )(twitchUser),\n      {\n        title: 'Twitch',\n        items: R.map(createGlobalTwitchEmote, R.propOr([], '0', twitchGlobal)),\n      },\n      {\n        title: 'BetterTTV',\n        items: bttvGlobal.map(createBttvEmote),\n      },\n      {\n        title: 'FrankerFaceZ',\n        items: ffzGlobal.map(createFfzEmote),\n      },\n    ].filter(({ items }) => items.length > 0) as EmoteCategory[];\n  },\n);\n\n// Badges\n\nexport const userBadgesSelector = (\n  state: RootState,\n): {\n  [name: string]: TwitchBadge;\n} => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'params', 'byChannels', channel, 'user', 'badges'];\n\n  return R.pathOr({}, path, state);\n};\n\nexport const isGlobalBadgesLoadedSelector = (state: RootState) =>\n  state.chat.badges.global.isLoaded;\n\nexport const isChannelBadgesLoadedSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'badges', 'byChannels', channel, 'isLoaded'];\n\n  return R.pathOr(false, path, state);\n};\n\nexport const isBadgesLoadedSelector = (state: RootState) =>\n  isGlobalBadgesLoadedSelector(state) && isChannelBadgesLoadedSelector(state);\n\nexport const globalBadgesSelector = (state: RootState) =>\n  state.chat.badges.global.items;\n\nexport const channelBadgesSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'badges', 'byChannels', channel, 'items'];\n\n  return R.pathOr({}, path, state) as TwitchBadges;\n};\n\nexport const userBadgesImagesSelector = createSelector(\n  userBadgesSelector,\n  globalBadgesSelector,\n  channelBadgesSelector,\n  (userBadges, globalBadges, channelBadges) =>\n    createBadges(userBadges, globalBadges, channelBadges),\n);\n\n// params\n\nexport const currentChannelIdSelector = (state: RootState): string | null => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'params', 'byChannels', channel, 'room', 'roomId'];\n\n  return R.pathOr(null, path, state);\n};\n\nexport const userColorSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'params', 'byChannels', channel, 'user', 'color'];\n\n  return R.pathOr('', path, state);\n};\n\nexport const userDisplayNameSelector = (state: RootState) => {\n  const channel = currentChannelSelector(state);\n  const path = ['chat', 'params', 'byChannels', channel, 'user', 'displayName'];\n\n  return R.pathOr('', path, state);\n};\n\n// blocked users\n\nexport const isBlockedUsersLoadedSelector = (state: RootState) =>\n  state.chat.blockedUsers.isLoaded;\n\nexport const blockedUsersSelector = (state: RootState) =>\n  state.chat.blockedUsers.items;\n","export * from './chatSelectors';\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface BttvEmote {\n  id: string;\n  code: string;\n  imageType: 'png' | 'gif';\n}\n\nexport interface BttvGlobalEmote extends BttvEmote {\n  userId: string;\n}\n\nexport interface BttvChannelEmote extends BttvEmote {\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n    providerId: string;\n  };\n}\n\nexport interface BttvChannelEmotesResponse {\n  id: string;\n  bots: string[];\n  channelEmotes: BttvChannelEmote[];\n  sharedEmotes: BttvChannelEmote[];\n}\n\nexport const fetchBttvGlobalEmotes = (): Promise<BttvGlobalEmote[]> =>\n  fetchRequest('https://api.betterttv.net/3/cached/emotes/global');\n\nexport const fetchBttvChannelEmotes = (\n  channelId: string,\n): Promise<BttvChannelEmotesResponse> =>\n  fetchRequest(`https://api.betterttv.net/3/cached/users/twitch/${channelId}`);\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface FfzEmote {\n  css: null;\n  height: number;\n  hidden: boolean;\n  id: number;\n  margins: null;\n  modifier: boolean;\n  name: string;\n  offset: null;\n  owner: {\n    _id: number;\n    display_name: string;\n    name: string;\n  };\n  public: boolean;\n  urls: {\n    '1': string;\n    '2'?: string;\n    '4'?: string;\n  };\n  width: number;\n}\n\nexport interface FfzGlobalEmotesResponse {\n  default_sets: number[];\n  sets: {\n    [id: string]: {\n      _type: number;\n      css: null;\n      description: null;\n      emoticons: FfzEmote[];\n      icon: null;\n      id: number;\n      title: string;\n    };\n  };\n  users: {\n    [id: string]: string[];\n  };\n}\n\nexport interface FfzChannelEmotesResponse {\n  room: {\n    _id: number;\n    css: null;\n    display_name: string;\n    id: string;\n    is_group: boolean;\n    mod_urls: null;\n    moderator_badge: null;\n    set: number;\n    twitch_id: number;\n    user_badges: {};\n  };\n  sets: {\n    [id: string]: {\n      _type: number;\n      css: null;\n      description: null;\n      emoticons: FfzEmote[];\n      icon: null;\n      id: number;\n      title: number;\n    };\n  };\n}\n\nexport const fetchFfzGlobalEmotes = (): Promise<FfzGlobalEmotesResponse> =>\n  fetchRequest('https://api.frankerfacez.com/v1/set/global');\n\nexport const fetchFfzChannelEmotes = (\n  channelId: string,\n): Promise<FfzChannelEmotesResponse> =>\n  fetchRequest(`https://api.frankerfacez.com/v1/room/id/${channelId}`);\n","import fetchRequest from 'utils/fetchRequest';\n\nexport interface ChatHistoryResponse {\n  messages: string[];\n  error: null;\n}\n\nexport const fetchChatHistory = (\n  channel: string,\n): Promise<ChatHistoryResponse> =>\n  fetchRequest(\n    `https://recent-messages.robotty.de/api/v2/recent-messages/${channel}?clearchatToNotice=true`,\n  );\n","import { FetchFlags } from 'utils/constants';\n\nfunction setFetchFlags(obj: FetchFlags, type: 'request'): void;\nfunction setFetchFlags(obj: FetchFlags, type: 'success'): void;\nfunction setFetchFlags(obj: FetchFlags, type: 'failure', error: string): void;\nfunction setFetchFlags(\n  obj: FetchFlags,\n  type: 'request' | 'success' | 'failure',\n  error: string | null = null,\n) {\n  obj.isLoading = type === 'request';\n  obj.isLoaded = type === 'success' || type === 'failure';\n  obj.isError = type === 'failure';\n  obj.error = type === 'failure' ? error : null;\n}\n\nexport default setFetchFlags;\n","import * as R from 'ramda';\nimport { parse as twemojiParser } from 'twemoji-parser';\nimport { lib as emojilib } from 'emojilib';\nimport urlRegex from 'url-regex';\nimport TwitchIrc from 'twitch-simple-irc';\n\nimport { BttvGlobalEmote, BttvChannelEmote } from 'api/bttv';\nimport { TwitchEmote } from 'api/twitch';\nimport { FfzEmote } from 'api/ffz';\nimport { StateEmotes } from 'features/chat/selectors/chatSelectors';\nimport { MessageEntity } from 'features/chat/slice/messages';\nimport {\n  createTwitchEmote,\n  createBttvEmote,\n  createFfzEmote,\n  createEmoji,\n  createMention,\n  createLink,\n  HtmlEntityTwitchEmote,\n  HtmlEntityBttvEmote,\n  HtmlEntityFfzEmote,\n  HtmlEntityMention,\n  HtmlEntityLink,\n  HtmlEntityEmoji,\n} from 'features/chat/utils/htmlEntity';\n\nconst mentionRegex = /^@([\\p{Letter}\\p{Number}_]+)/u;\nconst linkRegex = urlRegex({ strict: false });\n\nconst normalizeEmotesFromTags = R.pipe(\n  // @ts-ignore\n  R.toPairs,\n  // @ts-ignore\n  R.map(([id, value]) => R.map((v) => ({ id, ...v }), value)),\n  R.flatten,\n);\n\nconst regexMap: { [id: number]: string } = {\n  4: '>\\\\(', // '\\\\&gt\\\\;\\\\('\n  9: '<3', // '\\\\&lt\\\\;3'\n};\n\nconst findTwitchEmote = (\n  name: string,\n  items: TwitchEmote[],\n): TwitchEmote | undefined =>\n  R.find(({ id, code }) => {\n    // 1-14 - match by regex\n    if (id >= 1 && id <= 14) {\n      const regexString = regexMap[id] || code;\n      return RegExp(`^${regexString}$`).test(name);\n    }\n\n    return name === code;\n  }, items);\n\nconst findTwitchEmoteInSets = (\n  name: string,\n  sets: { [setId: string]: TwitchEmote[] },\n): TwitchEmote | null => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const set of Object.values(sets)) {\n    const result = findTwitchEmote(name, set);\n\n    if (result) return result;\n  }\n\n  return null;\n};\n\nconst findBttvEmote = (\n  name: string,\n  items: Array<BttvGlobalEmote | BttvChannelEmote>,\n): BttvGlobalEmote | BttvChannelEmote | undefined =>\n  R.find(R.propEq('code', name), items);\n\nconst findFfzEmote = (name: string, items: FfzEmote[]): FfzEmote | undefined =>\n  R.find(R.propEq('name', name), items);\n\nconst findEmoji = (char: string): string | undefined =>\n  // @ts-ignore\n  R.pipe(R.filter(R.propEq('char', char)), R.keys, R.head)(emojilib);\n\nconst findEntity = (\n  word: string,\n  emotes: StateEmotes,\n  parseTwitch: boolean,\n):\n  | HtmlEntityTwitchEmote\n  | HtmlEntityBttvEmote\n  | HtmlEntityFfzEmote\n  | HtmlEntityEmoji\n  | [HtmlEntityMention, number]\n  | HtmlEntityLink\n  | null => {\n  if (!emotes) return null;\n\n  const {\n    twitchGlobal,\n    twitchUser,\n    bttvGlobal,\n    bttvChannel,\n    ffzGlobal,\n    ffzChannel,\n  } = emotes;\n\n  if (parseTwitch) {\n    const twitchEmote =\n      findTwitchEmoteInSets(word, twitchGlobal) ||\n      findTwitchEmoteInSets(word, twitchUser);\n\n    if (twitchEmote) {\n      return createTwitchEmote({ id: twitchEmote.id, code: word });\n    }\n  }\n\n  const bttvEmote =\n    findBttvEmote(word, bttvGlobal) || findBttvEmote(word, bttvChannel);\n\n  if (bttvEmote) {\n    return createBttvEmote(bttvEmote);\n  }\n\n  const ffzEmote =\n    findFfzEmote(word, ffzGlobal) || findFfzEmote(word, ffzChannel);\n\n  if (ffzEmote) {\n    return createFfzEmote(ffzEmote);\n  }\n\n  // Don't parse two or more emotes without spaces between\n  // Don't parse emote if it's not in the emojilib package\n  const emojiMatch = twemojiParser(word, { assetType: 'png' });\n\n  if (\n    emojiMatch &&\n    emojiMatch.length === 1 &&\n    emojiMatch[0].text.length === word.length\n  ) {\n    const emoji = findEmoji(word);\n\n    if (emoji) {\n      const [{ url }] = emojiMatch;\n\n      return createEmoji(emoji, url);\n    }\n  }\n\n  const mentionMatch = word.match(mentionRegex);\n\n  if (mentionMatch) {\n    const [text, target] = mentionMatch;\n\n    return [\n      createMention(text, target.toLowerCase()),\n      word.length - text.length,\n    ] as [HtmlEntityMention, number];\n  }\n\n  const linkMatch = word.match(linkRegex);\n\n  if (linkMatch && linkMatch[0].length === word.length) {\n    return createLink(word);\n  }\n\n  return null;\n};\n\nconst formatMessage = (\n  message: string,\n  emotes: StateEmotes | null,\n  embeddedEmotes: TwitchIrc.Emotes | null,\n  { parseTwitch = false }: { parseTwitch?: boolean } = {},\n): MessageEntity[] => {\n  // If the message was sent by the current user, there is no embedded emotes\n  // So we need to parse twitch emotes manually\n\n  const result = [];\n  let offset = 0;\n  // Before that offset all content was added to the result array\n  let arrayOffset = 0;\n\n  // Check every word. From offset to the next space index\n  do {\n    const spaceIndex = message.indexOf(' ', offset + 1);\n\n    const isStart = offset === 0;\n    const isEnd = spaceIndex === -1;\n\n    const startIndex = isStart ? offset : offset + 1;\n    const endIndex = isEnd ? message.length : spaceIndex;\n\n    const word = message.substring(startIndex, endIndex);\n\n    if (word) {\n      let entity = null;\n\n      // Check embedded twitch emotes\n      if (\n        !parseTwitch &&\n        embeddedEmotes &&\n        Object.keys(embeddedEmotes).length > 0\n      ) {\n        const normalizedEmbeddedEmotes = normalizeEmotesFromTags(\n          embeddedEmotes,\n        );\n\n        const embeddedEmote = R.find(\n          R.propEq('start', startIndex),\n          normalizedEmbeddedEmotes,\n        );\n\n        if (embeddedEmote) {\n          entity = createTwitchEmote({ id: embeddedEmote.id, code: word });\n        }\n      }\n\n      // Check other entities\n      if (!entity) {\n        entity = findEntity(word, emotes, parseTwitch);\n      }\n\n      if (entity) {\n        // Push all text before this entity\n        if (arrayOffset !== startIndex) {\n          const textBefore = message.substring(arrayOffset, startIndex);\n          result.push(textBefore);\n        }\n\n        // If entity it's an array it means entity may be not full word\n        // The second element is the difference between word length and entity length\n        if (Array.isArray(entity)) {\n          const [entityObject, difference] = entity;\n          result.push(entityObject);\n          arrayOffset = endIndex - difference;\n        } else {\n          result.push(entity);\n          arrayOffset = endIndex;\n        }\n      }\n    }\n\n    // If it's the last word and it wasn't added to the result add it now\n    if (spaceIndex === -1 && arrayOffset !== endIndex) {\n      const textAfter = message.substring(arrayOffset, endIndex);\n      result.push(textAfter);\n    }\n\n    offset = spaceIndex;\n  } while (offset !== -1);\n\n  return result;\n};\n\nexport default formatMessage;\n","import TwitchIrc from 'twitch-simple-irc';\nimport * as tekko from 'tekko';\n\nimport { TwitchBadges } from 'api/twitch';\nimport { RootState } from 'app/rootReducer';\nimport {\n  Message,\n  Notice,\n  UserNotice,\n  OwnMessage,\n} from 'features/chat/slice/messages';\nimport { ChatState } from 'features/chat/slice';\nimport {\n  blockedUsersSelector,\n  globalBadgesSelector,\n  channelBadgesSelector,\n  emotesSelector,\n  StateEmotes,\n} from 'features/chat/selectors';\nimport formatMessage from 'features/chat/utils/formatMessage';\nimport { createBadges } from 'features/chat/utils/htmlEntity';\n\nexport const normalizeMessage = (\n  { message, tags, user, channel, isAction }: TwitchIrc.MessageEvent,\n  chatState: ChatState,\n): Message | null => {\n  const fakeState = { chat: chatState } as RootState;\n  const blockedUsers = blockedUsersSelector(fakeState);\n\n  if (blockedUsers.includes(user)) return null;\n\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n\n  return {\n    type: 'message',\n    id: tags.id,\n    message,\n    channel,\n    entities: formatMessage(message, emotes, tags.emotes),\n    user: {\n      id: tags.userId,\n      login: user,\n      displayName: tags.displayName,\n      color: tags.color,\n      badges: createBadges(tags.badges, globalBadges, channelBadges),\n    },\n    timestamp: tags.tmiSentTs,\n    isAction,\n    isHistory: false,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeNotice = (\n  { message, channel, tags: { msgId } }: TwitchIrc.NoticeEvent,\n  id: string,\n): Notice => ({\n  type: 'notice',\n  id,\n  message,\n  channel,\n  noticeType: msgId,\n});\n\nexport const normalizeUserNotice = ({\n  message,\n  channel,\n  tags: { id, msgId, login, systemMsg },\n}: TwitchIrc.UserNoticeEvent): UserNotice => ({\n  type: 'user-notice',\n  id,\n  message,\n  channel,\n  noticeType: msgId,\n  systemMessage: systemMsg,\n  user: {\n    login,\n  },\n});\n\nexport const normalizeOwnMessage = (\n  { message, id, channel, tags, timestamp, userId, userLogin }: OwnMessage,\n  chatState: ChatState,\n): Message => {\n  const fakeState = { chat: chatState } as RootState;\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n\n  const isAction = message.startsWith('/me ');\n\n  return {\n    type: 'message',\n    id,\n    message: isAction ? message.slice(4) : message,\n    channel,\n    entities: formatMessage(message, emotes, null, { parseTwitch: true }),\n    user: {\n      id: userId,\n      login: userLogin,\n      displayName: tags.displayName,\n      color: tags.color,\n      badges: createBadges(tags.badges, globalBadges, channelBadges),\n    },\n    timestamp,\n    isAction,\n    isHistory: false,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeHistoryMessage = (\n  { tags, params: [channel, message], prefix }: tekko.Message,\n  emotes: StateEmotes,\n  globalBadges: TwitchBadges,\n  channelBadges: TwitchBadges,\n): Message => {\n  const isAction = TwitchIrc.getIsAction(message);\n  const normalizedMessage = isAction\n    ? TwitchIrc.normalizeActionMessage(message)\n    : message;\n  const parsedTags = (TwitchIrc.parseMessageTags(\n    tags,\n  ) as unknown) as TwitchIrc.MessageTags;\n\n  return {\n    type: 'message',\n    id: parsedTags.id,\n    message,\n    channel: channel.slice(1),\n    entities: formatMessage(normalizedMessage, emotes, parsedTags.emotes),\n    user: {\n      id: parsedTags.userId,\n      login: prefix ? prefix.name : '',\n      displayName: parsedTags.displayName,\n      color: parsedTags.color,\n      badges: createBadges(parsedTags.badges, globalBadges, channelBadges),\n    },\n    timestamp: parsedTags.tmiSentTs,\n    isAction,\n    isHistory: true,\n    isDeleted: false,\n  };\n};\n\nexport const normalizeHistoryMessages = (\n  rawMessages: string[],\n  chatState: ChatState,\n): Message[] => {\n  const fakeState = { chat: chatState } as RootState;\n  const globalBadges = globalBadgesSelector(fakeState);\n  const channelBadges = channelBadgesSelector(fakeState);\n  const emotes = emotesSelector(fakeState);\n  const blockedUsers = blockedUsersSelector(fakeState);\n\n  return rawMessages.reduce<Message[]>((acc, rawMessage) => {\n    const message = tekko.parse(rawMessage) as tekko.Message;\n\n    const { command, prefix } = message;\n\n    if (\n      command === 'PRIVMSG' &&\n      prefix &&\n      !blockedUsers.includes(prefix.name)\n    ) {\n      acc.push(\n        normalizeHistoryMessage(message, emotes, globalBadges, channelBadges),\n      );\n    }\n\n    return acc;\n  }, []);\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport TwitchIrc from 'twitch-simple-irc';\n\nimport { ChatHistoryResponse } from 'api/chatHistory';\nimport {\n  FetchFlags,\n  initialFetchFlags,\n  CHANNEL_MESSAGES_LIMIT,\n  STORE_USERS_LIMIT,\n} from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport {\n  HtmlEntityTwitchEmote,\n  HtmlEntityBttvEmote,\n  HtmlEntityFfzEmote,\n  HtmlEntityEmoji,\n  HtmlEntityMention,\n  HtmlEntityLink,\n  HtmlEntityBadge,\n} from 'features/chat/utils/htmlEntity';\nimport {\n  normalizeMessage,\n  normalizeNotice,\n  normalizeUserNotice,\n  normalizeOwnMessage,\n  normalizeHistoryMessages,\n} from 'features/chat/utils/normalizeMessages';\nimport { ChatState } from 'features/chat/slice';\n\nexport type MessageEntity =\n  | HtmlEntityTwitchEmote\n  | HtmlEntityBttvEmote\n  | HtmlEntityFfzEmote\n  | HtmlEntityEmoji\n  | HtmlEntityMention\n  | HtmlEntityLink\n  | string;\n\nexport type Message = {\n  type: 'message';\n  id: string;\n  message: string;\n  channel: string;\n  entities: MessageEntity[];\n  user: {\n    id: string;\n    login: string;\n    displayName: string;\n    color: string;\n    badges: HtmlEntityBadge[];\n  };\n  timestamp: number;\n  isAction: boolean;\n  isHistory: boolean;\n  isDeleted: boolean;\n};\n\nexport type Notice = {\n  type: 'notice';\n  id: string;\n  message: string;\n  channel: string;\n  noticeType: string;\n};\n\nexport type UserNotice = {\n  type: 'user-notice';\n  id: string;\n  message: string;\n  channel: string;\n  noticeType: keyof typeof TwitchIrc.UserNoticeType;\n  systemMessage: string;\n  user: {\n    login: string;\n  };\n};\n\nexport type ChatMessage = Message | Notice | UserNotice;\n\nexport type OwnMessage = {\n  message: string;\n  id: string;\n  channel: string;\n  tags: TwitchIrc.UserStateTags;\n  timestamp: number;\n  userId: string;\n  userLogin: string;\n};\n\ntype AddMessage = {\n  type: 'message';\n  message: TwitchIrc.MessageEvent;\n};\ntype AddNotice = {\n  type: 'notice';\n  id: string;\n  message: TwitchIrc.NoticeEvent;\n};\ntype AddUserNotice = {\n  type: 'user-notice';\n  message: TwitchIrc.UserNoticeEvent;\n};\ntype AddOwnMessage = {\n  type: 'own-message';\n  message: OwnMessage;\n};\n\ntype AddMessagePayload = AddMessage | AddNotice | AddUserNotice | AddOwnMessage;\n\nexport interface MessagesState {\n  [channel: string]: {\n    history: {\n      isAdded: boolean;\n      items: string[];\n    } & FetchFlags;\n    isEven: boolean;\n    items: ChatMessage[];\n    users: string[];\n  };\n}\n\nexport const messagesInitialState: MessagesState = {};\n\nconst messagesChannelInitialState = {\n  history: {\n    ...initialFetchFlags,\n    isAdded: false,\n    items: [],\n  },\n  isEven: false,\n  items: [],\n  users: [],\n};\n\nfunction sliceMessages<T>(items: T[]): T[] {\n  const diff = items.length - CHANNEL_MESSAGES_LIMIT;\n\n  return diff > 0 ? items.slice(diff) : items;\n}\n\nfunction sliceUsers<T>(users: T[]): T[] {\n  const diff = users.length - STORE_USERS_LIMIT;\n\n  return diff > 0 ? users.slice(diff) : users;\n}\n\nconst getIsEven = (\n  prev: boolean,\n  addedItemsCount: number,\n  isSliced: boolean,\n): boolean => {\n  if (isSliced) {\n    return addedItemsCount % 2 ? !prev : prev;\n  }\n\n  return prev;\n};\n\nconst normalizePayload = (\n  data: AddMessagePayload,\n  chatState: ChatState,\n): ChatMessage | null => {\n  if (data.type === 'message') {\n    return normalizeMessage(data.message, chatState);\n  }\n\n  if (data.type === 'notice') {\n    return normalizeNotice(data.message, data.id);\n  }\n\n  if (data.type === 'user-notice') {\n    return normalizeUserNotice(data.message);\n  }\n\n  if (data.type === 'own-message') {\n    return normalizeOwnMessage(data.message, chatState);\n  }\n\n  return null as never;\n};\n\nexport const messagesReducers = {\n  clearChat: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchIrc.ClearChatEvent>,\n  ): void => {\n    const {\n      channel,\n      tags: { targetUserId },\n    } = payload;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const message of state.messages[channel].items) {\n      if (\n        message.type === 'message' &&\n        message.user.id === targetUserId &&\n        !message.isHistory\n      ) {\n        message.isDeleted = true;\n      }\n    }\n  },\n\n  addMessage: (\n    state: ChatState,\n    { payload }: PayloadAction<AddMessagePayload>,\n  ): void => {\n    const message = normalizePayload(payload, state);\n\n    if (!message) return;\n\n    const { channel } = message;\n\n    const prevItems = state.messages[channel].items;\n    const newItems = [...prevItems, message];\n    const slicedMessages = sliceMessages(newItems);\n\n    const isSliced = newItems.length > slicedMessages.length;\n    const prevIsEven = state.messages[channel].isEven;\n\n    state.messages[channel].isEven = getIsEven(prevIsEven, 1, isSliced);\n    state.messages[channel].items = slicedMessages;\n\n    // add user\n    const { users } = state.messages[channel];\n\n    if (\n      message.type === 'message' &&\n      !users.includes(message.user.displayName)\n    ) {\n      users.push(message.user.displayName);\n    }\n\n    state.messages[channel].users = sliceUsers(users);\n  },\n\n  addChatHistory: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    const channel = payload;\n\n    const rawHistory = state.messages[channel].history.items;\n    const history = normalizeHistoryMessages(sliceMessages(rawHistory), state);\n    const prevItems = state.messages[channel].items;\n    const newItems = [...history, ...prevItems];\n    const slicedMessages = sliceMessages(newItems);\n\n    const isSliced = newItems.length > slicedMessages.length;\n    const prevIsEven = state.messages[channel].isEven;\n\n    state.messages[channel].isEven = getIsEven(\n      prevIsEven,\n      history.length,\n      isSliced,\n    );\n    state.messages[channel].items = slicedMessages;\n\n    // add users\n    const { users } = state.messages[channel];\n\n    history.forEach((message) => {\n      if (\n        message.type === 'message' &&\n        !users.includes(message.user.displayName)\n      ) {\n        users.push(message.user.displayName);\n      }\n    });\n\n    state.messages[channel].history.items = [];\n    state.messages[channel].history.isAdded = true;\n  },\n\n  fetchChatHistoryRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.messages[channel]) {\n      state.messages[channel] = messagesChannelInitialState;\n    }\n\n    setFetchFlags(state.messages[channel].history, 'request');\n  },\n\n  fetchChatHistorySuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; data: ChatHistoryResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.messages[channel].history.items = data.messages;\n\n    setFetchFlags(state.messages[channel].history, 'success');\n  },\n\n  fetchChatHistoryFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.messages[channel].history, 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport * as R from 'ramda';\n\nimport { TwitchEmote, TwitchEmotesResponse } from 'api/twitch';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\n\nexport interface TwitchEmotesState extends FetchFlags {\n  global: {\n    [setId: string]: TwitchEmote[];\n  };\n  user: {\n    [setId: string]: TwitchEmote[];\n  };\n}\n\nexport const twitchEmotesInitialState: TwitchEmotesState = {\n  ...initialFetchFlags,\n  global: {},\n  user: {},\n};\n\nexport const twitchEmotesReducers = {\n  fetchTwitchEmotesRequest: (state: ChatState): void => {\n    setFetchFlags(state.twitchEmotes, 'request');\n  },\n\n  fetchTwitchEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchEmotesResponse>,\n  ): void => {\n    state.twitchEmotes.global = R.pick(['0'], payload.emoticon_sets);\n    state.twitchEmotes.user = R.omit(['0'], payload.emoticon_sets);\n\n    setFetchFlags(state.twitchEmotes, 'success');\n  },\n\n  fetchTwitchEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.twitchEmotes, 'failure', payload);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  BttvGlobalEmote,\n  BttvChannelEmote,\n  BttvChannelEmotesResponse,\n} from 'api/bttv';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\n\nexport interface BttvEmotesState {\n  global: {\n    items: BttvGlobalEmote[];\n  } & FetchFlags;\n  byChannels: {\n    [channel: string]: {\n      items: BttvChannelEmote[];\n    } & FetchFlags;\n  };\n}\n\nexport const bttvEmotesInitialState: BttvEmotesState = {\n  global: {\n    ...initialFetchFlags,\n    items: [],\n  },\n  byChannels: {},\n};\n\nconst bttvChannelEmotesInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nexport const bttvEmotesReducers = {\n  fetchBttvGlobalEmotesRequest: (state: ChatState) => {\n    setFetchFlags(state.bttvEmotes.global, 'request');\n  },\n\n  fetchBttvGlobalEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<BttvGlobalEmote[]>,\n  ): void => {\n    state.bttvEmotes.global.items = payload;\n\n    setFetchFlags(state.bttvEmotes.global, 'success');\n  },\n\n  fetchBttvGlobalEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.bttvEmotes.global, 'failure', payload);\n  },\n\n  fetchBttvChannelEmotesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.bttvEmotes.byChannels[channel]) {\n      state.bttvEmotes.byChannels[channel] = bttvChannelEmotesInitialState;\n    }\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'request');\n  },\n\n  fetchBttvChannelEmotesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: BttvChannelEmotesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.bttvEmotes.byChannels[channel].items = [\n      ...data.channelEmotes,\n      ...data.sharedEmotes,\n    ];\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'success');\n  },\n\n  fetchBttvChannelEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.bttvEmotes.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport * as R from 'ramda';\n\nimport {\n  FfzEmote,\n  FfzGlobalEmotesResponse,\n  FfzChannelEmotesResponse,\n} from 'api/ffz';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\n\nexport interface FfzEmotesState {\n  global: {\n    items: FfzEmote[];\n  } & FetchFlags;\n  byChannels: {\n    [channel: string]: {\n      items: FfzEmote[];\n    } & FetchFlags;\n  };\n}\n\nexport const ffzEmotesInitialState: FfzEmotesState = {\n  global: {\n    ...initialFetchFlags,\n    items: [],\n  },\n  byChannels: {},\n};\n\nconst ffzChannelEmotesInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nconst parseFfzGlobalEmotes = ({\n  default_sets: defaultSets,\n  sets,\n}: FfzGlobalEmotesResponse): FfzEmote[] =>\n  R.pipe(\n    // @ts-ignore\n    R.pick(defaultSets),\n    // @ts-ignore\n    R.values,\n    R.map(R.propOr([], 'emoticons')),\n    R.flatten,\n  )(sets);\n\nconst parseFfzChannelEmotes: (\n  data: FfzChannelEmotesResponse,\n) => FfzEmote[] = R.pipe(\n  R.pathOr({}, ['sets']),\n  R.values,\n  R.map(R.pathOr([], ['emoticons'])),\n  R.flatten,\n);\n\nexport const ffzEmotesReducers = {\n  fetchFfzGlobalEmotesRequest: (state: ChatState) => {\n    setFetchFlags(state.ffzEmotes.global, 'request');\n  },\n\n  fetchFfzGlobalEmotesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<FfzGlobalEmotesResponse>,\n  ): void => {\n    state.ffzEmotes.global.items = parseFfzGlobalEmotes(payload);\n\n    setFetchFlags(state.ffzEmotes.global, 'success');\n  },\n\n  fetchFfzGlobalEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.ffzEmotes.global, 'failure', payload);\n  },\n\n  fetchFfzChannelEmotesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.ffzEmotes.byChannels[channel]) {\n      state.ffzEmotes.byChannels[channel] = ffzChannelEmotesInitialState;\n    }\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'request');\n  },\n\n  fetchFfzChannelEmotesSuccess: (\n    state: ChatState,\n    {\n      payload,\n    }: PayloadAction<{ channel: string; data: FfzChannelEmotesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.ffzEmotes.byChannels[channel].items = parseFfzChannelEmotes(data);\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'success');\n  },\n\n  fetchFfzChannelEmotesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.ffzEmotes.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nimport { TwitchBadges, TwitchBadgesResponse } from 'api/twitch';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\n\nexport interface BadgesState {\n  global: {\n    items: TwitchBadges;\n  } & FetchFlags;\n  byChannels: {\n    [channel: string]: {\n      items: TwitchBadges;\n    } & FetchFlags;\n  };\n}\n\nexport const badgesInitialState: BadgesState = {\n  global: {\n    ...initialFetchFlags,\n    items: {},\n  },\n  byChannels: {},\n};\n\nconst badgesChannelInitialState = {\n  ...initialFetchFlags,\n  items: {},\n};\n\nexport const badgesReducers = {\n  fetchGlobalBadgesRequest: (state: ChatState) => {\n    setFetchFlags(state.badges.global, 'request');\n  },\n\n  fetchGlobalBadgesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchBadgesResponse>,\n  ): void => {\n    state.badges.global.items = payload.badge_sets;\n\n    setFetchFlags(state.badges.global, 'success');\n  },\n\n  fetchGlobalBadgesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.badges.global, 'failure', payload);\n  },\n\n  fetchChannelBadgesRequest: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string }>,\n  ): void => {\n    const { channel } = payload;\n\n    if (!state.badges.byChannels[channel]) {\n      state.badges.byChannels[channel] = badgesChannelInitialState;\n    }\n\n    setFetchFlags(state.badges.byChannels[channel], 'request');\n  },\n\n  fetchChannelBadgesSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; data: TwitchBadgesResponse }>,\n  ): void => {\n    const { channel, data } = payload;\n\n    state.badges.byChannels[channel].items = data.badge_sets;\n\n    setFetchFlags(state.badges.byChannels[channel], 'success');\n  },\n\n  fetchChannelBadgesFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<{ channel: string; error: string }>,\n  ): void => {\n    const { channel, error } = payload;\n\n    setFetchFlags(state.badges.byChannels[channel], 'failure', error);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport TwitchIrc from 'twitch-simple-irc';\n\nimport { ChatState } from 'features/chat/slice';\n\nexport interface ParamsState {\n  global: TwitchIrc.GlobalUserStateTags | null;\n  byChannels: {\n    [channel: string]: {\n      room: TwitchIrc.RoomStateTags | null;\n      user: TwitchIrc.UserStateTags | null;\n    };\n  };\n}\n\nexport const paramsInitialState: ParamsState = {\n  global: null,\n  byChannels: {},\n};\n\nconst channelParamsInitialState = {\n  room: null,\n  user: null,\n};\n\nexport const paramsReducers = {\n  updateGlobalUserParams: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchIrc.GlobalUserStateEvent>,\n  ): void => {\n    state.params.global = payload.tags;\n  },\n\n  updateUserParams: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchIrc.UserStateEvent>,\n  ): void => {\n    const { channel, tags } = payload;\n\n    if (!state.params.byChannels[channel]) {\n      state.params.byChannels[channel] = channelParamsInitialState;\n    }\n\n    state.params.byChannels[channel].user = tags;\n  },\n\n  updateRoomParams: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchIrc.RoomStateEvent>,\n  ): void => {\n    const { channel, tags } = payload;\n\n    if (!state.params.byChannels[channel]) {\n      state.params.byChannels[channel] = channelParamsInitialState;\n    }\n\n    // TODO: merge tags\n    state.params.byChannels[channel].room = tags;\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport * as R from 'ramda';\n\nimport { TwitchBlockedUsersResponse } from 'api/twitch';\nimport { FetchFlags, initialFetchFlags } from 'utils/constants';\nimport setFetchFlags from 'utils/setFetchFlags';\nimport { ChatState } from 'features/chat/slice';\n\nexport interface BlockedUsersState extends FetchFlags {\n  items: string[];\n}\n\nexport const blockedUsersInitialState = {\n  ...initialFetchFlags,\n  items: [],\n};\n\nconst parseBlockedUsers = R.pipe(\n  // @ts-ignore\n  R.prop('blocks'),\n  R.map(R.path(['user', 'name'])),\n);\n\nexport const blockedUsersReducers = {\n  fetchBlockedUsersRequest: (state: ChatState): void => {\n    setFetchFlags(state.blockedUsers, 'request');\n  },\n\n  fetchBlockedUsersSuccess: (\n    state: ChatState,\n    { payload }: PayloadAction<TwitchBlockedUsersResponse>,\n  ): void => {\n    state.blockedUsers.items = parseBlockedUsers(payload);\n\n    setFetchFlags(state.blockedUsers, 'success');\n  },\n\n  fetchBlockedUsersFailure: (\n    state: ChatState,\n    { payload }: PayloadAction<string>,\n  ): void => {\n    setFetchFlags(state.blockedUsers, 'failure', payload);\n  },\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport * as twitchApi from 'api/twitch';\nimport * as bttvApi from 'api/bttv';\nimport * as ffzApi from 'api/ffz';\nimport * as chatHistoryApi from 'api/chatHistory';\nimport { AppThunk } from 'app/store';\nimport {\n  messagesInitialState,\n  messagesReducers,\n  MessagesState,\n} from 'features/chat/slice/messages';\nimport {\n  twitchEmotesInitialState,\n  twitchEmotesReducers,\n  TwitchEmotesState,\n} from 'features/chat/slice/twitchEmotes';\nimport {\n  bttvEmotesInitialState,\n  bttvEmotesReducers,\n  BttvEmotesState,\n} from 'features/chat/slice/bttvEmotes';\nimport {\n  ffzEmotesInitialState,\n  ffzEmotesReducers,\n  FfzEmotesState,\n} from 'features/chat/slice/ffzEmotes';\nimport {\n  badgesInitialState,\n  badgesReducers,\n  BadgesState,\n} from 'features/chat/slice/badges';\nimport {\n  paramsInitialState,\n  paramsReducers,\n  ParamsState,\n} from 'features/chat/slice/params';\nimport {\n  blockedUsersInitialState,\n  blockedUsersReducers,\n  BlockedUsersState,\n} from 'features/chat/slice/blockedUsers';\n\nexport interface ChatState {\n  isConnected: boolean;\n  currentChannel: string;\n  messages: MessagesState;\n  twitchEmotes: TwitchEmotesState;\n  bttvEmotes: BttvEmotesState;\n  ffzEmotes: FfzEmotesState;\n  badges: BadgesState;\n  params: ParamsState;\n  blockedUsers: BlockedUsersState;\n}\n\nconst initialState: ChatState = {\n  isConnected: false,\n  currentChannel: '',\n  messages: messagesInitialState,\n  twitchEmotes: twitchEmotesInitialState,\n  bttvEmotes: bttvEmotesInitialState,\n  ffzEmotes: ffzEmotesInitialState,\n  badges: badgesInitialState,\n  params: paramsInitialState,\n  blockedUsers: blockedUsersInitialState,\n};\n\nconst chat = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    updateIsConnected: (state, { payload }: PayloadAction<boolean>): void => {\n      state.isConnected = payload;\n    },\n    updateCurrentChannel: (state, { payload }: PayloadAction<string>): void => {\n      state.currentChannel = payload;\n    },\n\n    ...messagesReducers,\n    ...twitchEmotesReducers,\n    ...bttvEmotesReducers,\n    ...ffzEmotesReducers,\n    ...badgesReducers,\n    ...paramsReducers,\n    ...blockedUsersReducers,\n  },\n});\n\nexport const {\n  updateIsConnected,\n  updateCurrentChannel,\n\n  // messages\n  clearChat,\n  addMessage,\n  addChatHistory,\n  fetchChatHistoryRequest,\n  fetchChatHistorySuccess,\n  fetchChatHistoryFailure,\n\n  // twitch emotes\n  fetchTwitchEmotesRequest,\n  fetchTwitchEmotesSuccess,\n  fetchTwitchEmotesFailure,\n\n  // bttv emotes\n  fetchBttvGlobalEmotesRequest,\n  fetchBttvGlobalEmotesSuccess,\n  fetchBttvGlobalEmotesFailure,\n  fetchBttvChannelEmotesRequest,\n  fetchBttvChannelEmotesSuccess,\n  fetchBttvChannelEmotesFailure,\n\n  // ffz emotes\n  fetchFfzGlobalEmotesRequest,\n  fetchFfzGlobalEmotesSuccess,\n  fetchFfzGlobalEmotesFailure,\n  fetchFfzChannelEmotesRequest,\n  fetchFfzChannelEmotesSuccess,\n  fetchFfzChannelEmotesFailure,\n\n  // badges\n  fetchGlobalBadgesRequest,\n  fetchGlobalBadgesSuccess,\n  fetchGlobalBadgesFailure,\n  fetchChannelBadgesRequest,\n  fetchChannelBadgesSuccess,\n  fetchChannelBadgesFailure,\n\n  // params\n  updateGlobalUserParams,\n  updateUserParams,\n  updateRoomParams,\n\n  // blocked users\n  fetchBlockedUsersRequest,\n  fetchBlockedUsersSuccess,\n  fetchBlockedUsersFailure,\n} = chat.actions;\n\nexport default chat.reducer;\n\nexport const fetchChatHistory = (channel: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchChatHistoryRequest({ channel }));\n    const data = await chatHistoryApi.fetchChatHistory(channel);\n    dispatch(fetchChatHistorySuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchChatHistoryFailure({ channel, error }));\n  }\n};\n\nexport const fetchTwitchEmotes = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchTwitchEmotesRequest());\n    const data = await twitchApi.fetchTwitchEmotes(userId);\n    dispatch(fetchTwitchEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchTwitchEmotesFailure(error));\n  }\n};\n\nexport const fetchBttvGlobalEmotes = (): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchBttvGlobalEmotesRequest());\n    const data = await bttvApi.fetchBttvGlobalEmotes();\n    dispatch(fetchBttvGlobalEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchBttvGlobalEmotesFailure(error));\n  }\n};\n\nexport const fetchBttvChannelEmotes = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch): Promise<void> => {\n  try {\n    dispatch(fetchBttvChannelEmotesRequest({ channel }));\n    const data = await bttvApi.fetchBttvChannelEmotes(channelId);\n    dispatch(fetchBttvChannelEmotesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchBttvChannelEmotesFailure({ channel, error }));\n  }\n};\n\nexport const fetchFfzGlobalEmotes = (): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchFfzGlobalEmotesRequest());\n    const data = await ffzApi.fetchFfzGlobalEmotes();\n    dispatch(fetchFfzGlobalEmotesSuccess(data));\n  } catch (error) {\n    dispatch(fetchFfzGlobalEmotesFailure(error));\n  }\n};\n\nexport const fetchFfzChannelEmotes = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch): Promise<void> => {\n  try {\n    dispatch(fetchFfzChannelEmotesRequest({ channel }));\n    const data = await ffzApi.fetchFfzChannelEmotes(channelId);\n    dispatch(fetchFfzChannelEmotesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchFfzChannelEmotesFailure({ channel, error }));\n  }\n};\n\nexport const fetchGlobalBadges = (): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchGlobalBadgesRequest());\n    const data = await twitchApi.fetchGlobalBadges();\n    dispatch(fetchGlobalBadgesSuccess(data));\n  } catch (error) {\n    dispatch(fetchGlobalBadgesFailure(error));\n  }\n};\n\nexport const fetchChannelBadges = (\n  channel: string,\n  channelId: string,\n): AppThunk => async (dispatch): Promise<void> => {\n  try {\n    dispatch(fetchChannelBadgesRequest({ channel }));\n    const data = await twitchApi.fetchChannelBadges(channelId);\n    dispatch(fetchChannelBadgesSuccess({ channel, data }));\n  } catch (error) {\n    dispatch(fetchChannelBadgesFailure({ channel, error }));\n  }\n};\n\nexport const fetchBlockedUsers = (userId: string): AppThunk => async (\n  dispatch,\n): Promise<void> => {\n  try {\n    dispatch(fetchBlockedUsersRequest());\n    const data = await twitchApi.fetchBlockedUsers(userId);\n    dispatch(fetchBlockedUsersSuccess(data));\n  } catch (error) {\n    dispatch(fetchBlockedUsersFailure(error));\n  }\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./twitch-simple-irc.cjs.production.min.js');\n} else {\n  module.exports = require('./twitch-simple-irc.cjs.development.js');\n}","export const readOptionsFromLocalStorage = (): object => {\n  try {\n    return JSON.parse(localStorage.options);\n  } catch {\n    return {};\n  }\n};\n\nexport const writeOptionsToLocalStore = (options: object): void => {\n  localStorage.setItem(\n    'options',\n    JSON.stringify({\n      ...readOptionsFromLocalStorage(),\n      ...options,\n    }),\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'app/store';\nimport {\n  writeOptionsToLocalStore,\n  readOptionsFromLocalStorage,\n} from 'features/options/optionsUtils';\n\ninterface OptionsState {\n  showTimestamps: boolean;\n  splitChat: boolean;\n  blacklistKeywords: string;\n  highlightKeywords: string;\n  fixedWidth: boolean;\n}\n\ninterface ChangeOption {\n  name: keyof OptionsState;\n  value: any;\n}\n\nconst initialState: OptionsState = {\n  showTimestamps: false,\n  splitChat: true,\n  blacklistKeywords: '',\n  highlightKeywords: '',\n  fixedWidth: false,\n  ...readOptionsFromLocalStorage(),\n};\n\nconst options = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    changeOption: (state, { payload }: PayloadAction<ChangeOption>): void => {\n      const { name, value } = payload;\n      (state[name] as unknown) = value;\n    },\n  },\n});\n\n// export const {} = options.actions;\n\nexport default options.reducer;\n\nconst { changeOption } = options.actions;\n\nexport const changeChatOption = ({\n  name,\n  value,\n}: ChangeOption): AppThunk => async (dispatch): Promise<void> => {\n  writeOptionsToLocalStore({ [name]: value });\n  dispatch(changeOption({ name, value }));\n};\n"],"sourceRoot":""}