{"version":3,"sources":["utils/api.js","utils/constants.js","reducers/auth.js","utils/twitchChat.js","reducers/messages.js","reducers/index.js","components/AuthCallback.jsx","components/ChatInput.jsx","components/ChatMessage.jsx","components/Chat.jsx","components/Home.jsx","utils/getAuthUrl.js","components/Auth.jsx","styles/common.js","styles/colors.js","styles/vars.js","styles/index.js","App.jsx","index.jsx"],"names":["fetchUser","id","url","fetch","headers","Authorization","localStorage","accessToken","then","response","json","fetchRecentMessages","channel","setIsAuth","createAction","fetchUserRequest","fetchUserSuccess","fetchUserFailure","reducer","handleActions","state","payload","isAuth","user","undefined","isLoading","error","login","displayName","noopIRCCommands","booleanMessageTags","numberMessageTags","depricatedMessageTags","parseBadges","data","split","reduce","acc","badge","name","value","normalizeTagValue","raw","emote","indexes","map","index","start","end","Number","parseInt","parseMessageEmotes","followersOnly","slow","includes","parseMessageTags","Object","entries","filter","key","camelCase","getIsAction","message","startsWith","endsWith","normalizeActionMessage","slice","parseGlobalUserState","tags","Client","opts","socket","channels","options","_queue","this","identity","auth","sendRaw","emit","hadError","willReconnect","rawData","trim","forEach","line","_handleMessage","parsedData","tekkoParse","command","prefix","params","middle","trailing","parseMessageData","channelName","pathOr","eventData","parseUserState","userState","omit","parseRoomState","roomState","length","ircMessage","shift","isAction","parseChatMessage","handleError","err","Array","isArray","send","WebSocket","addEventListener","_onConnect","_onClose","_onError","_onData","tekkoFormat","uuid","roomId","tmiSentTs","Date","getTime","userId","commandParams","join","roomName","push","EventEmitter","sliceMessages","items","itemsDiff","createActions","ADD_MESSAGE","ADD_MESSAGES","messages","addMessage","addMessages","fetchRecentMessagesRequest","fetchRecentMessagesSuccess","fetchRecentMessagesFailure","combineActions","isError","combineReducers","AuthCallback","dispatch","useDispatch","history","useHistory","window","location","hash","URLSearchParams","get","idToken","setItem","jwt","decode","sub","a","apiFetchUser","display_name","JSON","stringify","ChatInputRoot","styled","form","Controls","div","SendButton","button","Textarea","textarea","handleKeyDown","e","preventDefault","ChatInput","isDisabled","onSubmit","textareaRef","useRef","useState","text","setText","handleKeyUp","useCallback","useEffect","textareaNode","current","removeEventListener","placeholder","ref","maxLength","disabled","onChange","target","to","type","defaultProps","ChatMessageRoot","p","color","isHistory","Name","span","Text","ChatMessage","dangerouslySetInnerHTML","__html","ChatRoot","ChatWrapper","MessagesWrapper","Messages","Scrollbar","attrs","disableTracksWidthCompensation","MoreMessagesButton","visible","client","Chat","isConnected","setIsConnected","useSelector","username","isMoreMessagesButtonVisible","setIsMoreMessagesButtonVisible","messagesRef","handleScrollToBottom","scrollToBottom","apiFetchRecentMessages","normalizedMessages","m","parse","disconnect","connect","on","handleMessage","normalizedData","pick","onUpdate","clientHeight","contentScrollHeight","scrollTop","onClick","say","Home","rawUser","getItem","authParams","client_id","process","redirect_uri","response_type","scope","claims","id_token","email_verified","picture","preferred_username","getAuthUrl","search","Auth","href","css","createGlobalStyle","colors","vars","common","App","store","exact","path","component","createStore","rootReducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","noop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f52855c.chunk.js","sourcesContent":["import { TWITCH_API_BASE } from './constants';\n\nexport const getAuthorizationHeader = () => ({\n  Authorization: `Bearer ${localStorage.accessToken}`,\n});\n\nexport const apiRequest = (url) =>\n  fetch(url, {\n    headers: getAuthorizationHeader(),\n  }).then((response) => response.json());\n\n/*\n{\n  \"data\": [{\n    \"id\": \"44322889\",\n    \"login\": \"dallas\",\n    \"display_name\": \"dallas\",\n    \"type\": \"staff\",\n    \"broadcaster_type\": \"\",\n    \"description\": \"Just a gamer playing games and chatting. :)\",\n    \"profile_image_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/dallas-profile_image-1a2c906ee2c35f12-300x300.png\",\n    \"offline_image_url\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/dallas-channel_offline_image-1a2c906ee2c35f12-1920x1080.png\",\n    \"view_count\": 191836881,\n    \"email\": \"login@provider.com\"\n  }]\n}\n*/\nexport const fetchUser = (id) =>\n  apiRequest(`${TWITCH_API_BASE}/users?id=${id}`);\n\nexport const fetchRecentMessages = (channel) =>\n  fetch(\n    `https://recent-messages.robotty.de/api/v2/recent-messages/${channel}?clearchatToNotice=true`,\n  ).then((response) => response.json());\n","export const TWITCH_API_AUTH_BASE = 'https://id.twitch.tv/oauth2/authorize';\nexport const TWITCH_API_BASE = 'https://api.twitch.tv/helix';\n\nexport const TWITCH_API_CLIENT_ID = process.env.REACT_APP_TWITCH_API_CLIENT_ID;\nexport const TWITCH_API_REDIRECT_URI =\n  process.env.REACT_APP_TWITCH_API_REDIRECT_URI;\n\nexport const MAIN_CHANNEL_NAME = 'nasvay_s';\n\nexport const CHANNEL_MESSAGES_LIMIT = 500;\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { fetchUser as apiFetchUser } from '../utils/api';\n\nconst defaultState = {\n  isAuth: false,\n  isLoading: false,\n  user: {\n    id: null,\n    login: null,\n    displayName: null,\n  },\n};\n\nexport const setIsAuth = createAction('SET_IS_AUTH');\nconst fetchUserRequest = createAction('FETCH_USER_REQUEST');\nconst fetchUserSuccess = createAction('FETCH_USER_SUCCESS');\nconst fetchUserFailure = createAction('FETCH_USER_FAILURE');\n\nexport const fetchUser = (dispatch) => async (id) => {\n  dispatch(fetchUserRequest());\n\n  const response = await apiFetchUser(id);\n  const { login, display_name: displayName } = response.data[0];\n  const user = { id, login, displayName };\n  localStorage.setItem('user', JSON.stringify(user));\n\n  dispatch(fetchUserSuccess(user));\n};\n\nconst handleSetIsAuth = (state, { payload: { isAuth, user } }) => ({\n  ...state,\n  isAuth: isAuth === undefined ? state.isAuth : isAuth,\n  user: { ...state.user, ...user },\n});\n\nconst handleFetchUserRequest = (state) => ({\n  ...state,\n  isLoading: true,\n});\nconst handleFetchUserSuccess = (state, { payload }) => ({\n  ...state,\n  isAuth: true,\n  isLoading: false,\n  user: payload,\n});\nconst handleFetchUserFailure = (state, { payload }) => ({\n  ...state,\n  isAuth: false,\n  isLoading: false,\n  error: payload,\n});\n\nconst reducer = handleActions(\n  {\n    [setIsAuth]: handleSetIsAuth,\n    [fetchUserRequest]: handleFetchUserRequest,\n    [fetchUserSuccess]: handleFetchUserSuccess,\n    [fetchUserFailure]: handleFetchUserFailure,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","/* eslint-disable no-underscore-dangle */\nimport { pathOr, omit } from 'ramda';\nimport { EventEmitter } from 'events';\nimport { parse as tekkoParse, format as tekkoFormat } from 'tekko';\nimport camelCase from 'camel-case';\nimport uuid from 'uuid/v4';\n\nconst chatUrl = 'wss://irc-ws.chat.twitch.tv:443';\n\nconst noopIRCCommands = [\n  'CAP',\n  '001',\n  '002',\n  '003',\n  '004',\n  '353',\n  '366',\n  '375',\n  '372',\n  '376',\n];\n\nconst booleanMessageTags = [\n  'mod',\n  'emote-only',\n  'r9k',\n  'rituals',\n  'subs-only',\n  'msg-param-should-share-streak',\n];\n\nconst numberMessageTags = [\n  'ban-duration',\n  'bits',\n  'msg-param-cumulative-months',\n  'msg-param-months',\n  'msg-param-promo-gift-total',\n  'msg-param-streak-months',\n  'msg-param-viewerCount',\n  'msg-param-threshold',\n];\n\nconst depricatedMessageTags = ['subscriber', 'turbo', 'user-type'];\n\nconst parseMessageEmotes = (raw = '') => {\n  if (!raw) return {};\n\n  return raw.split('/').reduce((acc, emote) => {\n    const [id, indexes] = emote.split(':');\n\n    return {\n      ...acc,\n      [id]: indexes.split(',').map((index) => {\n        const [start, end] = index.split('-');\n\n        return {\n          start: Number.parseInt(start, 10),\n          end: Number.parseInt(end, 10),\n        };\n      }),\n    };\n  }, {});\n};\n\nconst parseBadges = (data = '') => {\n  if (!data) return {};\n\n  return data.split(',').reduce((acc, badge) => {\n    const [name, value] = badge.split('/');\n\n    return {\n      ...acc,\n      [name]: value,\n    };\n  }, {});\n};\n\nconst normalizeTagValue = (name, value) => {\n  if (name === 'emotes') return parseMessageEmotes(value);\n  if (name === 'badges') return parseBadges(value);\n  if (name === 'badge-info') return parseBadges(value);\n\n  if (name === 'followers-only') {\n    let followersOnly = false;\n    if (value === '-1') {\n      followersOnly = false;\n    } else if (value === '0') {\n      followersOnly = true;\n    } else if (typeof value === 'string') {\n      followersOnly = parseInt(value, 10);\n    }\n    return followersOnly;\n  }\n\n  if (name === 'slow') {\n    let slow = false;\n    if (value === '0') {\n      slow = false;\n    } else if (typeof value === 'string') {\n      slow = parseInt(value, 10);\n    }\n    return slow;\n  }\n\n  if (booleanMessageTags.includes(name)) return value === '1';\n  if (numberMessageTags.includes(name)) return parseInt(value, 10);\n\n  return value;\n};\n\nexport const parseMessageTags = (data = {}) =>\n  Object.entries(data)\n    .filter(([key]) => !depricatedMessageTags.includes(key))\n    .reduce((acc, [key, value]) => {\n      return {\n        ...acc,\n        [camelCase(key)]: normalizeTagValue(key, value),\n      };\n    }, {});\n\nexport const isBroadcaster = (tags = {}) =>\n  Object.prototype.hasOwnProperty.call(tags, 'broadcaster');\n\nexport const isMod = (tags = {}) =>\n  Object.prototype.hasOwnProperty.call(tags, 'moderator');\n\nexport const isSub = (tags = {}) =>\n  Object.prototype.hasOwnProperty.call(tags, 'subscriber');\n\nexport const isVIP = (tags = {}) =>\n  Object.prototype.hasOwnProperty.call(tags, 'vip');\n\nexport const monthsSubbed = (tags = {}) => {\n  const subbed = tags.subscriber;\n\n  return subbed ? parseInt(subbed, 10) : 0;\n};\n\nexport const getIsAction = (message) =>\n  message.startsWith('\\u0001ACTION ') && message.endsWith('\\u0001');\nexport const normalizeActionMessage = (message) => message.slice(8, -1);\n\nexport const parseMessageData = ({\n  raw,\n  command,\n  tags,\n  middle: params,\n  trailing: message,\n  prefix,\n}) => ({\n  raw,\n  command,\n  tags: parseMessageTags(tags),\n  params,\n  message,\n  prefix,\n});\n\nexport const parseChatMessage = (data) => {\n  const { message } = data;\n  const isAction = getIsAction(message);\n\n  return {\n    ...data,\n    message: isAction ? normalizeActionMessage(message) : message,\n    isAction,\n  };\n};\n\nconst parseGlobalUserState = (data) => data.tags;\nconst parseUserState = (data) => data.tags;\nconst parseRoomState = (data) => data.tags;\n\nclass Client extends EventEmitter {\n  socket;\n\n  options;\n\n  user;\n\n  channels;\n\n  _queue;\n\n  constructor(opts = {}) {\n    super();\n    this.socket = null;\n    this.channels = {};\n    this.options = opts || {};\n    this.user = null;\n    this._queue = [];\n  }\n\n  _onConnect() {\n    const { name, auth } = this.options.identity;\n    this.sendRaw([\n      'CAP REQ :twitch.tv/tags twitch.tv/commands',\n      `PASS oauth:${auth}`,\n      `NICK ${name}`,\n    ]);\n    this.emit('connected');\n  }\n\n  _onClose(hadError) {\n    // TODO\n    const willReconnect = false;\n    this.emit('disconnected', { willReconnect, hadError });\n    if (willReconnect) {\n      this.connect();\n    }\n  }\n\n  _onError(error) {\n    // TODO\n    this.emit('error', error);\n  }\n\n  _onData(rawData) {\n    const data = rawData.trim().split('\\r\\n');\n    data.forEach((line) => this._handleMessage(line));\n  }\n\n  _handleMessage(raw) {\n    const parsedData = tekkoParse(raw);\n    parsedData.raw = raw;\n    const { command } = parsedData;\n\n    if (command === 'PING') {\n      this.sendRaw('PONG :tmi.twitch.tv');\n      this.emit('ping');\n      return;\n    }\n\n    if (parsedData.prefix && parsedData.prefix.user === 'jtv') {\n      // console.log('JTV');\n      // console.log(parsedData);\n      return;\n    }\n\n    // noop\n    if (noopIRCCommands.includes(command)) {\n      return;\n    }\n\n    const data = parseMessageData(parsedData);\n    const channelName = pathOr('', ['params', 0], data).slice(1);\n\n    if (command === 'PRIVMSG') {\n      this.emit('message', parseChatMessage(data));\n      return;\n    }\n\n    if (command === 'USERSTATE') {\n      const eventData = parseUserState(data);\n      this.channels[channelName].userState = eventData;\n      this.emit('userstate', eventData);\n      return;\n    }\n\n    if (command === 'JOIN') {\n      this.channels = { ...this.channels, [channelName]: {} };\n      this.emit('join', data);\n      return;\n    }\n\n    if (command === 'PART') {\n      this.channels = omit([channelName], this.channels);\n      this.emit('part', data);\n      return;\n    }\n\n    if (command === 'ROOMSTATE') {\n      const eventData = parseRoomState(data);\n      this.channels[channelName].roomState = eventData;\n      this.emit('roomstate', eventData);\n      return;\n    }\n\n    if (command === 'GLOBALUSERSTATE') {\n      const eventData = parseGlobalUserState(data);\n      this.user = parseGlobalUserState(data);\n\n      while (this._queue.length) {\n        const ircMessage = this._queue.shift();\n        this.sendRaw(ircMessage);\n      }\n\n      this.emit('globaluserstate', eventData);\n      return;\n    }\n\n    this.emit('unhandled-command', data);\n  }\n\n  sendRaw(message) {\n    const handleError = (err) => {\n      if (err) {\n        this.emit('error', err);\n      }\n    };\n\n    if (Array.isArray(message)) {\n      message.forEach((line) => this.socket.send(`${line}\\r\\n`, handleError));\n    } else {\n      this.socket.send(`${message}\\r\\n`, handleError);\n    }\n  }\n\n  connect() {\n    this.socket = new WebSocket(chatUrl);\n    const { socket } = this;\n\n    socket.addEventListener('open', () => this._onConnect());\n    socket.addEventListener('close', (hadError) => this._onClose(hadError));\n    socket.addEventListener('error', (error) => this._onError(error));\n    socket.addEventListener('message', (data) => this._onData(data.data));\n  }\n\n  say(channel, message) {\n    const ircMessage = tekkoFormat({\n      command: 'PRIVMSG',\n      middle: [`#${channel}`],\n      trailing: message,\n    });\n    this.sendRaw(ircMessage);\n\n    const isAction = message.startsWith('/me ');\n    const tags = {\n      ...this.channels[channel].userState,\n      id: uuid(),\n      roomId: this.channels[channel].roomState.roomId,\n      tmiSentTs: new Date().getTime(),\n      userId: this.user.userId,\n    };\n    this.emit('own-message', {\n      command: 'PRIVMSG',\n      params: [`#${channel}`],\n      message: isAction ? message.slice(4) : message,\n      tags,\n      isAction,\n    });\n  }\n\n  sendCommand(channel, command, params) {\n    const commandParams = Array.isArray(params) ? params.join(' ') : params;\n    const ircMessage = tekkoFormat({\n      command: 'PRIVMSG',\n      middle: [`#${channel}`],\n      trailing: `/${command} ${commandParams}`,\n    });\n    this.sendRaw(ircMessage);\n  }\n\n  join(roomName) {\n    const ircMessage = tekkoFormat({\n      command: 'JOIN',\n      middle: [`#${roomName}`],\n    });\n\n    if (!this.user) {\n      this._queue.push(ircMessage);\n    } else {\n      this.sendRaw(ircMessage);\n    }\n  }\n\n  part(roomName) {\n    const ircMessage = tekkoFormat({\n      command: 'PART',\n      middle: [`#${roomName}`],\n    });\n\n    if (!this.user) {\n      this._queue.push(ircMessage);\n    } else {\n      this.sendRaw(ircMessage);\n    }\n  }\n}\n\nexport default Client;\n","import {\n  createAction,\n  createActions,\n  handleActions,\n  combineActions,\n} from 'redux-actions';\nimport { parse } from 'tekko';\n\nimport { fetchRecentMessages as apiFetchRecentMessages } from '../utils/api';\nimport { CHANNEL_MESSAGES_LIMIT } from '../utils/constants';\nimport {\n  getIsAction,\n  normalizeActionMessage,\n  parseMessageTags,\n} from '../utils/twitchChat';\n// import formatMessage from '../utils/formatMessage';\n\nconst defaultState = {\n  isLoading: false,\n  items: [],\n};\n\nconst sliceMessages = (items) => {\n  const itemsDiff = items.length - CHANNEL_MESSAGES_LIMIT;\n\n  return itemsDiff > 0 ? items.slice(itemsDiff) : items;\n};\n\nexport const { addMessage, addMessages } = createActions({\n  ADD_MESSAGE: (message) => [message],\n  ADD_MESSAGES: (messages) => messages,\n});\n\nconst fetchRecentMessagesRequest = createAction(\n  'FETCH_RECENT_MESSAGES_REQUEST',\n);\nconst fetchRecentMessagesSuccess = createAction(\n  'FETCH_RECENT_MESSAGES_SUCCESS',\n);\nconst fetchRecentMessagesFailure = createAction(\n  'FETCH_RECENT_MESSAGES_FAILURE',\n);\n\nexport const fetchRecentMessages = (dispatch) => async (channel) => {\n  dispatch(fetchRecentMessagesRequest());\n\n  const { messages } = await apiFetchRecentMessages(channel);\n\n  const normalizedMessages = messages\n    .map((m) => parse(m))\n    .filter((m) => m.command === 'PRIVMSG')\n    .map(({ tags, params: [, message] }) => {\n      const isAction = getIsAction(message);\n      return {\n        tags: parseMessageTags(tags),\n        message: isAction ? normalizeActionMessage(message) : message,\n        isAction,\n        isHistory: true,\n      };\n    });\n\n  dispatch(fetchRecentMessagesSuccess(normalizedMessages));\n};\n\nconst handleFetchRecentMessagesRequest = (state) => ({\n  ...state,\n  isLoading: true,\n});\nconst handleFetchRecentMessagesSuccess = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  items: sliceMessages(payload),\n});\nconst handleFetchRecentMessagesFailure = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  isError: true,\n  error: payload,\n});\n\nconst handleAddMessages = (state, { payload }) => ({\n  ...state,\n  items: sliceMessages([...state.items, ...payload]),\n});\n\nconst reducer = handleActions(\n  {\n    [combineActions(addMessage, addMessages)]: handleAddMessages,\n    [fetchRecentMessagesRequest]: handleFetchRecentMessagesRequest,\n    [fetchRecentMessagesSuccess]: handleFetchRecentMessagesSuccess,\n    [fetchRecentMessagesFailure]: handleFetchRecentMessagesFailure,\n  },\n  defaultState,\n);\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport auth from './auth';\nimport messages from './messages';\n\nexport default combineReducers({\n  auth,\n  messages,\n});\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\n\nimport { fetchUser } from '../reducers/auth';\n\nconst AuthCallback = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  if (!window.location.hash) return null;\n\n  const params = new URLSearchParams(window.location.hash.slice(1));\n\n  const accessToken = params.get('access_token');\n  const idToken = params.get('id_token');\n\n  if (!accessToken || !idToken) return null;\n\n  localStorage.setItem('accessToken', accessToken);\n  localStorage.setItem('idToken', idToken);\n\n  const { sub: id } = jwt.decode(idToken);\n\n  fetchUser(dispatch)(id);\n\n  history.push('/chat/');\n\n  return null;\n};\n\nexport default AuthCallback;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst ChatInputRoot = styled.form`\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n  background-color: #000;\n\n  & > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n\n  & > :not(:last-child) {\n    margin-right: 20px;\n  }\n\n  a {\n    color: #bf94ff;\n    text-decoration: none;\n\n    &:focus,\n    &:hover {\n      color: #a970ff;\n      text-decoration: underline;\n    }\n\n    &:visited {\n      color: #a970ff;\n    }\n  }\n`;\nconst SendButton = styled.button`\n  padding: 0 10px;\n  height: 30px;\n  border: none;\n  color: #fff;\n  background-color: #9147ff;\n  outline: none;\n  font-size: 12px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #772ce8;\n  }\n\n  &:active {\n    background-color: #5c16c5;\n  }\n\n  &:focus {\n    box-shadow: 0 0 6px 0 #772ce8;\n  }\n\n  &[disabled] {\n    background-color: rgba(255, 255, 255, 0.26);\n    color: rgba(255, 255, 255, 0.8);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nconst Textarea = styled.textarea`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  height: 38px;\n  max-height: 91px;\n  min-height: 40px;\n  overflow: hidden;\n  border: 2px solid transparent;\n  background-color: #262626;\n  font-family: inherit;\n  line-height: 1.5;\n  border-radius: 4px;\n  outline: none;\n  color: #fff;\n  resize: none;\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n  transition-property: box-shadow, border, background-color;\n\n  &:focus {\n    background-color: #000;\n    border-color: #9147ff;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\n\nconst handleKeyDown = (e) => {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n  }\n};\n\nconst ChatInput = ({ isAuth, isDisabled, onSubmit }) => {\n  const textareaRef = useRef(null);\n  const [text, setText] = useState('');\n\n  const handleChange = (e) => setText(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(text);\n    setText('');\n  };\n\n  const handleKeyUp = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        onSubmit(text);\n        setText('');\n      }\n    },\n    [onSubmit, setText, text],\n  );\n\n  useEffect(() => {\n    const textareaNode = textareaRef.current;\n\n    textareaNode.addEventListener('keydown', handleKeyDown, false);\n    textareaNode.addEventListener('keyup', handleKeyUp, false);\n\n    return () => {\n      textareaNode.removeEventListener('keydown', handleKeyDown, false);\n      textareaNode.removeEventListener('keyup', handleKeyUp, false);\n    };\n  }, [handleKeyUp]);\n\n  return (\n    <ChatInputRoot onSubmit={handleSubmit}>\n      <Textarea\n        name=\"message\"\n        placeholder=\"Send a message\"\n        ref={textareaRef}\n        maxLength={500}\n        disabled={isDisabled}\n        onChange={handleChange}\n        value={text}\n      />\n      <Controls>\n        {!isAuth && <Link to=\"/chat/auth\">Sign in with Twitch</Link>}\n        <SendButton disabled={isDisabled} type=\"submit\">\n          Chat\n        </SendButton>\n      </Controls>\n    </ChatInputRoot>\n  );\n};\n\nChatInput.defaultProps = {\n  isDisabled: false,\n};\n\nChatInput.propTypes = {\n  isAuth: pt.bool.isRequired,\n  isDisabled: pt.bool,\n  onSubmit: pt.func.isRequired,\n};\n\nexport default ChatInput;\n","import React from 'react';\nimport pt from 'prop-types';\nimport styled from 'styled-components';\n\nconst ChatMessageRoot = styled.div`\n  padding: 5px 20px;\n  color: ${(p) => (p.isAction ? p.color : '#fff')};\n  opacity: ${(p) => (p.isHistory ? '0.5' : '1')};\n  line-height: 20px;\n  word-wrap: break-word;\n\n  &:nth-child(even) {\n    background-color: #1f1925;\n  }\n\n  .chat-image {\n    display: inline-block;\n    margin: -5px 0;\n    vertical-align: middle;\n  }\n\n  a {\n    color: #bf94ff;\n    text-decoration: none;\n\n    &:focus,\n    &:hover {\n      color: #a970ff;\n      text-decoration: underline;\n    }\n\n    &:visited {\n      color: #a970ff;\n    }\n  }\n`;\nconst Name = styled.span`\n  font-weight: bold;\n  color: ${(p) => p.color};\n`;\nconst Text = styled.span``;\n\nconst tagsType = pt.shape({\n  badgeInfo: pt.shape({\n    subscriber: pt.number,\n  }),\n  badges: pt.shape({}),\n  color: pt.string.isRequired,\n  displayName: pt.string.isRequired,\n  emotes: pt.shape({}),\n  flags: pt.string,\n  id: pt.string,\n  mod: pt.bool,\n  roomId: pt.string,\n  tmiSentId: pt.oneOfType([pt.string, pt.number]),\n  userId: pt.string,\n});\n\nconst ChatMessage = ({\n  message,\n  tags: { color, displayName },\n  isHistory,\n  isAction,\n}) => (\n  <ChatMessageRoot isHistory={isHistory} isAction={isAction} color={color}>\n    <Name color={color}>{displayName}</Name>\n    {!isAction && ':'} <Text dangerouslySetInnerHTML={{ __html: message }} />\n  </ChatMessageRoot>\n);\n\nChatMessage.defaultProps = {\n  isHistory: false,\n  isAction: false,\n};\n\nChatMessage.propTypes = {\n  tags: tagsType.isRequired,\n  message: pt.string.isRequired,\n  isHistory: pt.bool,\n  isAction: pt.bool,\n};\n\nexport default ChatMessage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { pick } from 'ramda';\nimport styled from 'styled-components';\nimport Scrollbar from 'react-scrollbars-custom';\n\nimport { MAIN_CHANNEL_NAME } from '../utils/constants';\nimport Client from '../utils/twitchChat';\nimport { fetchRecentMessages, addMessage } from '../reducers/messages';\nimport ChatInput from './ChatInput';\nimport ChatMessage from './ChatMessage';\n\nconst MORE_MESSAGES_OFFSET = 100;\n\nconst ChatRoot = styled.div`\n  height: 100vh;\n  background-color: #222;\n  font-size: 12px;\n`;\nconst ChatWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background-color: #000;\n`;\nconst MessagesWrapper = styled.div`\n  position: relative;\n  flex-grow: 1;\n`;\nconst Messages = styled(Scrollbar).attrs({\n  disableTracksWidthCompensation: true,\n})`\n  overflow-y: auto;\n\n  .ScrollbarsCustom-TrackY {\n    background: none !important;\n  }\n\n  .ScrollbarsCustom-ThumbY {\n    margin-left: auto;\n    margin-right: auto;\n    width: 6px !important;\n  }\n\n  .ScrollbarsCustom-Content {\n    padding-bottom: 10px !important;\n  }\n`;\nconst MoreMessagesButton = styled.button`\n  position: absolute;\n  left: 50%;\n  bottom: 10px;\n  display: ${(p) => (p.visible ? 'block' : 'none')};\n  padding: 5px 20px;\n  background: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transform: translateX(-50%);\n`;\n\nlet client = null;\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const [isConnected, setIsConnected] = useState(false);\n  const isAuth = useSelector((state) => state.auth.isAuth);\n  const username = useSelector((state) => state.auth.user.login);\n  const messages = useSelector((state) => state.messages.items);\n  const [\n    isMoreMessagesButtonVisible,\n    setIsMoreMessagesButtonVisible,\n  ] = useState(false);\n  const messagesRef = useRef(null);\n\n  const handleScrollToBottom = () => {\n    if (messagesRef.current && messagesRef.current.scrollToBottom) {\n      messagesRef.current.scrollToBottom();\n    }\n  };\n\n  useEffect(() => {\n    if (!isMoreMessagesButtonVisible) {\n      handleScrollToBottom();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messages]);\n\n  const handleScrollUpdate = ({\n    clientHeight,\n    contentScrollHeight,\n    scrollTop,\n  }) => {\n    const maxScrollTop = contentScrollHeight - clientHeight;\n    const isVisible = scrollTop + MORE_MESSAGES_OFFSET < maxScrollTop;\n\n    setIsMoreMessagesButtonVisible(isVisible);\n  };\n\n  useEffect(() => {\n    fetchRecentMessages(dispatch)(MAIN_CHANNEL_NAME);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (client) {\n      client.disconnect();\n    }\n\n    if (isAuth) {\n      const options = {\n        identity: {\n          name: username,\n          auth: localStorage.accessToken,\n        },\n      };\n      client = new Client(options);\n\n      client.connect();\n\n      client.join(MAIN_CHANNEL_NAME);\n\n      client.on('connected', () => setIsConnected(true));\n      client.on('disconnected', () => setIsConnected(false));\n\n      const handleMessage = (data) => {\n        const normalizedData = pick(['tags', 'message', 'isAction'], data);\n        dispatch(addMessage(normalizedData));\n      };\n\n      client.on('message', handleMessage);\n      client.on('own-message', handleMessage);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username]);\n\n  const handleSubmit = (message) => {\n    client.say(MAIN_CHANNEL_NAME, message);\n  };\n\n  return (\n    <ChatRoot>\n      <ChatWrapper>\n        <MessagesWrapper>\n          <Messages onUpdate={handleScrollUpdate} ref={messagesRef}>\n            {messages.map(({ message, tags, isAction, isHistory }) => (\n              <ChatMessage\n                key={tags.id}\n                message={message}\n                tags={tags}\n                isAction={isAction}\n                isHistory={isHistory}\n              />\n            ))}\n          </Messages>\n          <MoreMessagesButton\n            onClick={handleScrollToBottom}\n            visible={isMoreMessagesButtonVisible}\n          >\n            More messages below\n          </MoreMessagesButton>\n        </MessagesWrapper>\n        <ChatInput\n          onSubmit={handleSubmit}\n          isDisabled={!isAuth || !isConnected}\n          isAuth={isAuth}\n        />\n      </ChatWrapper>\n    </ChatRoot>\n  );\n};\n\nexport default Chat;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { setIsAuth } from '../reducers/auth';\nimport AuthCallback from './AuthCallback';\nimport Chat from './Chat';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!window.location.hash) {\n      const rawUser = localStorage.getItem('user');\n\n      if (rawUser) {\n        const user = JSON.parse(rawUser);\n\n        dispatch(setIsAuth({ isAuth: true, user }));\n      }\n\n      // try to connect to the chat. if there is an error, set isAuth to false and connect without login\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (window.location.hash) {\n    return <AuthCallback />;\n  }\n\n  return <Chat />;\n};\n\nexport default Home;\n","import {\n  TWITCH_API_AUTH_BASE,\n  TWITCH_API_CLIENT_ID,\n  TWITCH_API_REDIRECT_URI,\n} from './constants';\n\nconst authParams = {\n  client_id: TWITCH_API_CLIENT_ID,\n  redirect_uri: TWITCH_API_REDIRECT_URI,\n  response_type: 'token+id_token',\n  scope: [\n    'openid',\n    'chat:edit',\n    'chat:read',\n    'user_blocks_read',\n    'user_blocks_edit',\n  ].join('+'),\n  claims: JSON.stringify({\n    id_token: { email_verified: null, picture: null, preferred_username: null },\n  }),\n  // state: uid(),\n};\n\n// const getAuthUrl = () => {\n//   const search = new URLSearchParams();\n//   Object.entries(authParams).forEach(([key, value]) => search.set(key, value));\n\n//   return `${TWITCH_API_AUTH_BASE}?${search.toString()}`;\n// };\n\nconst getAuthUrl = () => {\n  const search = Object.entries(authParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${TWITCH_API_AUTH_BASE}?${search}`;\n};\n\nexport default getAuthUrl;\n","import getAuthUrl from '../utils/getAuthUrl';\n\nconst Auth = () => {\n  window.location.href = getAuthUrl();\n\n  return null;\n};\n\nexport default Auth;\n","import { css } from 'styled-components';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    font-family: Roobert, Helvetica Neue, Helvetica, Arial, sans-serif;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { css } from 'styled-components';\n\nexport default css``;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from './common';\nimport colors from './colors';\nimport vars from './vars';\n\nexport default createGlobalStyle`\n  :root {\n    ${colors};\n    ${vars};\n  }\n  ${common};\n`;\n","import React from 'react';\nimport pt from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Auth from './components/Auth';\nimport GlobalStyles from './styles';\n\nconst App = ({ store }) => (\n  <>\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/chat/\" component={Home} />\n          <Route exact path=\"/chat/auth\" component={Auth} />\n        </Switch>\n      </Router>\n    </Provider>\n    <GlobalStyles />\n  </>\n);\n\nApp.propTypes = {\n  store: pt.shape({}).isRequired,\n};\n\nexport default App;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : (noop) => noop,\n  ),\n);\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}