/* eslint-disable */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/user/{userName}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Name */
          userName: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
              badges?: { [key: string]: any };
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_user/{userName}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Name */
          userName: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
            };
          };
        };
      };
    };
  };
  "/v1/user/id/{twitchID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Twitch ID */
          twitchID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
              badges?: { [key: string]: any };
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_user/id/{twitchID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Twitch ID */
          twitchID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
            };
          };
        };
      };
    };
  };
  "/v1/user/_id/{userID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's FFZ ID */
          userID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
              badges?: { [key: string]: any };
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_user/_id/{userID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's FFZ ID */
          userID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
            };
          };
        };
      };
    };
  };
  "/v1/user/yt/{youtubeID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's YouTube ID */
          youtubeID: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
              badges?: { [key: string]: any };
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_user/yt/{youtubeID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's YouTube ID */
          youtubeID: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              user?: components["schemas"]["User"];
            };
          };
        };
      };
    };
  };
  "/v1/emote/{emoteID}/recommend": {
    /**
     * This uses a random sample of channels using an emote to recommend emotes that other channels with this emote are also using.
     *
     * **Rate Limit Cost:** 5 points
     */
    get: {
      parameters: {
        path: {
          /** FFZ Emote ID */
          emoteID: number;
        };
        query: {
          page?: number;
          /** Number of emotes per page */
          per_page?: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              pages: number;
              total: number;
              recommendations: {
                score: number;
                emote: components["schemas"]["Emote"];
              }[];
            };
          };
        };
      };
    };
  };
  "/v1/emote/{emoteID}/similar": {
    /** **Rate Limit Cost:** 30 points */
    get: {
      parameters: {
        path: {
          /** FFZ Emote ID */
          emoteID: number;
        };
        query: {
          similarity?: number;
          unapproved?: boolean;
          page?: number;
          /** Number of emotes per page */
          per_page?: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              pages: number;
              total: number;
              emotes: {
                distance: number;
                emote: components["schemas"]["Emote"];
              }[];
            };
          };
        };
      };
    };
  };
  "/v1/emote/{emoteID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          emoteID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              emote: components["schemas"]["Emote"];
            };
          };
        };
      };
    };
  };
  "/v1/emotes": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        query: {
          /** A string to search by. */
          q?: string | null;
          /** A string to search users by. */
          owner?: string | null;
          /** Whether or not the search query should be treated as case sensitive. */
          sensitive?: boolean;
          sort?: string;
          private?: Partial<boolean> & Partial<"on" | "off">;
          animated?: Partial<boolean> & Partial<"on" | "off">;
          high_dpi?: string;
          page?: number;
          /** Number of emotes per page. Range: 1-200. */
          per_page?: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              _links?: {
                next?: string;
                self?: string;
                prev?: string;
              };
              _pages: number;
              _total: number;
              emoticons: components["schemas"]["Emote"][];
            };
          };
        };
      };
    };
  };
  "/v1/emoticons": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        query: {
          /** A string to search by. */
          q?: string | null;
          /** A string to search users by. */
          owner?: string | null;
          /** Whether or not the search query should be treated as case sensitive. */
          sensitive?: boolean;
          sort?: string;
          private?: Partial<boolean> & Partial<"on" | "off">;
          animated?: Partial<boolean> & Partial<"on" | "off">;
          high_dpi?: string;
          page?: number;
          /** Number of emotes per page. Range: 1-200. */
          per_page?: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              _links?: {
                next?: string;
                self?: string;
                prev?: string;
              };
              _pages: number;
              _total: number;
              emoticons: components["schemas"]["Emote"][];
            };
          };
        };
      };
    };
  };
  "/v1/badge/{badgeID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          badgeID: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              badge?: components["schemas"]["Badge"];
              users?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_badge/{badgeID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          badgeID: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              badge?: components["schemas"]["Badge"];
              users?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/badges": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {};
      responses: {
        200: {
          content: {
            "application/json": {
              badges?: components["schemas"]["Badge"][];
              users?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_badges": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {};
      responses: {
        200: {
          content: {
            "application/json": {
              badges?: components["schemas"]["Badge"][];
            };
          };
        };
      };
    };
  };
  "/v1/badges/ids": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {};
      responses: {
        200: {
          content: {
            "application/json": {
              badges?: components["schemas"]["Badge"][];
              users?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/room/id/{twitchID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Twitch ID */
          twitchID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/room/_id/{userID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's FFZ ID */
          userID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/room/{roomName}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Name */
          roomName: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/room/yt/{youtubeID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's YouTube ID */
          youtubeID: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_room/id/{twitchID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Twitch ID */
          twitchID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
            };
          };
        };
      };
    };
  };
  "/v1/_room/_id/{userID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's FFZ ID */
          userID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
            };
          };
        };
      };
    };
  };
  "/v1/_room/{roomName}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's Name */
          roomName: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
            };
          };
        };
      };
    };
  };
  "/v1/_room/yt/{youtubeID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** User's YouTube ID */
          youtubeID: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              room?: components["schemas"]["Room"];
            };
          };
        };
      };
    };
  };
  "/v1/multi_room/{roomNames}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of Twitch usernames */
          roomNames: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              rooms?: components["schemas"]["Room"][];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/multi_room/id/{roomIDs}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of Twitch IDs */
          roomIDs: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              rooms?: components["schemas"]["Room"][];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/multi_room/_id/{roomIDs}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of FFZ IDs */
          roomIDs: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              rooms?: components["schemas"]["Room"][];
              sets?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_multi_room/{roomNames}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of Twitch usernames */
          roomNames: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              rooms?: components["schemas"]["Room"][];
            };
          };
        };
      };
    };
  };
  "/v1/_multi_room/id/{roomIDs}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of Twitch IDs */
          roomIDs: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              rooms?: components["schemas"]["Room"][];
            };
          };
        };
      };
    };
  };
  "/v1/_multi_room/_id/{roomIDs}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of FFZ IDs */
          roomIDs: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              rooms?: components["schemas"]["Room"][];
            };
          };
        };
      };
    };
  };
  "/v1/rooms/{roomNames}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of Twitch usernames */
          roomNames: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              template?: {
                /** Static Emote Image Template */
                static: string;
                /** Animated Emote Image Template */
                animated: string;
              };
              emotes: {
                id: number;
                name: string;
                animated: boolean;
                sizes: number[];
                width?: number;
                height?: number;
                owner?: {
                  _id: number;
                  name: string;
                  display_name?: string | null;
                } | null;
              }[];
              rooms: {
                _id: number;
                id: number;
                login: string;
                emotes: number[];
              }[];
            };
          };
        };
      };
    };
  };
  "/v1/rooms/id/{roomIDs}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of Twitch IDs */
          roomIDs: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              template?: {
                /** Static Emote Image Template */
                static: string;
                /** Animated Emote Image Template */
                animated: string;
              };
              emotes: {
                id: number;
                name: string;
                animated: boolean;
                sizes: number[];
                width?: number;
                height?: number;
                owner?: {
                  _id: number;
                  name: string;
                  display_name?: string | null;
                } | null;
              }[];
              rooms: {
                _id: number;
                id: number;
                login: string;
                emotes: number[];
              }[];
            };
          };
        };
      };
    };
  };
  "/v1/rooms/_id/{roomIDs}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          /** Comma separated list of FFZ IDs */
          roomIDs: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              template?: {
                /** Static Emote Image Template */
                static: string;
                /** Animated Emote Image Template */
                animated: string;
              };
              emotes: {
                id: number;
                name: string;
                animated: boolean;
                sizes: number[];
                width?: number;
                height?: number;
                owner?: {
                  _id: number;
                  name: string;
                  display_name?: string | null;
                } | null;
              }[];
              rooms: {
                _id: number;
                id: number;
                login: string;
                emotes: number[];
              }[];
            };
          };
        };
      };
    };
  };
  "/v1/set/global": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {};
      responses: {
        200: {
          content: {
            "application/json": {
              default_sets: number[];
              sets: { [key: string]: any };
              users: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_set/global": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {};
      responses: {
        200: {
          content: {
            "application/json": {
              default_sets: number[];
            };
          };
        };
      };
    };
  };
  "/v1/set/{setID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          setID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              set: components["schemas"]["EmoteSet"];
              users: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/v1/_set/{setID}": {
    /** **Rate Limit Cost:** 1 point */
    get: {
      parameters: {
        path: {
          setID: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              set: components["schemas"]["EmoteSet"];
            };
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    User: {
      id: number;
      twitch_id: number;
      /** YouTube ID */
      youtube_id?: string | null;
      name: string;
      display_name?: string | null;
      avatar?: string | null;
      max_emoticons: number;
      is_donor?: boolean;
      badges?: number[];
      emote_sets?: number[];
    };
    Badge: {
      id: number;
      name: string;
      title: string;
      slot: number;
      replaces?: string | null;
      color?: string | null;
      image: string;
      urls: {
        "1": string;
        "2"?: string | null;
        "4"?: string | null;
      };
      css?: string | null;
    };
    Emote: {
      id: number;
      name: string;
      height: number;
      width: number;
      public: boolean;
      hidden: boolean;
      modifier: boolean;
      offset?: string | null;
      margins?: string | null;
      css?: string | null;
      owner?: {
        _id: number;
        name: string;
        display_name?: string | null;
      } | null;
      urls?: {
        "1": string;
      };
      animated?: {
        "1": string;
      } | null;
      status?: number;
      usage_count?: number;
      created_at?: string;
      last_updated?: string;
    };
    EmoteSet: {
      id: number;
      _type: number;
      icon?: string | null;
      title?: string | null;
      description?: string | null;
      css?: string | null;
      emoticons: components["schemas"]["Emote"][];
    };
    Room: {
      _id: number;
      twitch_id: number;
      /** YouTube ID */
      youtube_id?: string | null;
      id: string;
      is_group?: boolean;
      display_name?: string | null;
      set: number;
      moderator_badge?: string | null;
      vip_badge?: {
        "1": string;
        "2"?: string | null;
        "4"?: string | null;
      } | null;
      mod_urls?: {
        "1": string;
        "2"?: string | null;
        "4"?: string | null;
      } | null;
      user_badges?: { [key: string]: any };
      user_badge_ids?: { [key: string]: any };
      css?: string | null;
    };
  };
}

export interface operations {}
